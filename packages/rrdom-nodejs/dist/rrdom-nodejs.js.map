{"version":3,"file":"rrdom-nodejs.js","sources":["../../rrdom/dist/rrdom.js","../../types/dist/rrweb-types.js","../src/document-nodejs.ts","../src/polyfill.ts","../src/index.ts"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar __defProp2 = Object.defineProperty;\nvar __defNormalProp2 = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField2 = (obj, key, value) => __defNormalProp2(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nlet Mirror$1 = class Mirror {\n  constructor() {\n    __publicField2(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField2(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n) {\n    var _a;\n    if (!n) return -1;\n    const id = (_a = this.getMeta(n)) == null ? void 0 : _a.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n) {\n    return this.nodeMetaMap.get(n) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n) {\n    const id = this.getId(n);\n    this.idNodeMap.delete(id);\n    if (n.childNodes) {\n      n.childNodes.forEach(\n        (childNode) => this.removeNodeFromMap(childNode)\n      );\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node2) {\n    return this.nodeMetaMap.has(node2);\n  }\n  add(n, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n);\n    this.nodeMetaMap.set(n, meta);\n  }\n  replace(id, n) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n, meta);\n    }\n    this.idNodeMap.set(id, n);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nfunction createMirror$1() {\n  return new Mirror$1();\n}\nfunction getDefaultExportFromCjs(x2) {\n  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, \"default\") ? x2[\"default\"] : x2;\n}\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n  if (typeof f == \"function\") {\n    var a = function a2() {\n      if (this instanceof a2) {\n        return Reflect.construct(f, arguments, this.constructor);\n      }\n      return f.apply(this, arguments);\n    };\n    a.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, \"__esModule\", { value: true });\n  Object.keys(n).forEach(function(k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function() {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\nvar picocolors_browser = { exports: {} };\nvar x = String;\nvar create = function() {\n  return { isColorSupported: false, reset: x, bold: x, dim: x, italic: x, underline: x, inverse: x, hidden: x, strikethrough: x, black: x, red: x, green: x, yellow: x, blue: x, magenta: x, cyan: x, white: x, gray: x, bgBlack: x, bgRed: x, bgGreen: x, bgYellow: x, bgBlue: x, bgMagenta: x, bgCyan: x, bgWhite: x, blackBright: x, redBright: x, greenBright: x, yellowBright: x, blueBright: x, magentaBright: x, cyanBright: x, whiteBright: x, bgBlackBright: x, bgRedBright: x, bgGreenBright: x, bgYellowBright: x, bgBlueBright: x, bgMagentaBright: x, bgCyanBright: x, bgWhiteBright: x };\n};\npicocolors_browser.exports = create();\npicocolors_browser.exports.createColors = create;\nvar picocolors_browserExports = picocolors_browser.exports;\nconst __viteBrowserExternal = {};\nconst __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: __viteBrowserExternal\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst require$$2 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);\nlet pico = picocolors_browserExports;\nlet terminalHighlight$1 = require$$2;\nlet CssSyntaxError$3 = class CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin2) {\n    super(message);\n    this.name = \"CssSyntaxError\";\n    this.reason = message;\n    if (file) {\n      this.file = file;\n    }\n    if (source) {\n      this.source = source;\n    }\n    if (plugin2) {\n      this.plugin = plugin2;\n    }\n    if (typeof line !== \"undefined\" && typeof column !== \"undefined\") {\n      if (typeof line === \"number\") {\n        this.line = line;\n        this.column = column;\n      } else {\n        this.line = line.line;\n        this.column = line.column;\n        this.endLine = column.line;\n        this.endColumn = column.column;\n      }\n    }\n    this.setMessage();\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError);\n    }\n  }\n  setMessage() {\n    this.message = this.plugin ? this.plugin + \": \" : \"\";\n    this.message += this.file ? this.file : \"<css input>\";\n    if (typeof this.line !== \"undefined\") {\n      this.message += \":\" + this.line + \":\" + this.column;\n    }\n    this.message += \": \" + this.reason;\n  }\n  showSourceCode(color) {\n    if (!this.source) return \"\";\n    let css = this.source;\n    if (color == null) color = pico.isColorSupported;\n    let aside = (text) => text;\n    let mark = (text) => text;\n    let highlight = (text) => text;\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true);\n      mark = (text) => bold(red(text));\n      aside = (text) => gray(text);\n      if (terminalHighlight$1) {\n        highlight = (text) => terminalHighlight$1(text);\n      }\n    }\n    let lines = css.split(/\\r?\\n/);\n    let start = Math.max(this.line - 3, 0);\n    let end = Math.min(this.line + 2, lines.length);\n    let maxWidth = String(end).length;\n    return lines.slice(start, end).map((line, index2) => {\n      let number = start + 1 + index2;\n      let gutter = \" \" + (\" \" + number).slice(-maxWidth) + \" | \";\n      if (number === this.line) {\n        if (line.length > 160) {\n          let padding = 20;\n          let subLineStart = Math.max(0, this.column - padding);\n          let subLineEnd = Math.max(\n            this.column + padding,\n            this.endColumn + padding\n          );\n          let subLine = line.slice(subLineStart, subLineEnd);\n          let spacing2 = aside(gutter.replace(/\\d/g, \" \")) + line.slice(0, Math.min(this.column - 1, padding - 1)).replace(/[^\\t]/g, \" \");\n          return mark(\">\") + aside(gutter) + highlight(subLine) + \"\\n \" + spacing2 + mark(\"^\");\n        }\n        let spacing = aside(gutter.replace(/\\d/g, \" \")) + line.slice(0, this.column - 1).replace(/[^\\t]/g, \" \");\n        return mark(\">\") + aside(gutter) + highlight(line) + \"\\n \" + spacing + mark(\"^\");\n      }\n      return \" \" + aside(gutter) + highlight(line);\n    }).join(\"\\n\");\n  }\n  toString() {\n    let code = this.showSourceCode();\n    if (code) {\n      code = \"\\n\\n\" + code + \"\\n\";\n    }\n    return this.name + \": \" + this.message + code;\n  }\n};\nvar cssSyntaxError = CssSyntaxError$3;\nCssSyntaxError$3.default = CssSyntaxError$3;\nconst DEFAULT_RAW = {\n  after: \"\\n\",\n  beforeClose: \"\\n\",\n  beforeComment: \"\\n\",\n  beforeDecl: \"\\n\",\n  beforeOpen: \" \",\n  beforeRule: \"\\n\",\n  colon: \": \",\n  commentLeft: \" \",\n  commentRight: \" \",\n  emptyBody: \"\",\n  indent: \"    \",\n  semicolon: false\n};\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nlet Stringifier$2 = class Stringifier {\n  constructor(builder) {\n    this.builder = builder;\n  }\n  atrule(node2, semicolon) {\n    let name = \"@\" + node2.name;\n    let params = node2.params ? this.rawValue(node2, \"params\") : \"\";\n    if (typeof node2.raws.afterName !== \"undefined\") {\n      name += node2.raws.afterName;\n    } else if (params) {\n      name += \" \";\n    }\n    if (node2.nodes) {\n      this.block(node2, name + params);\n    } else {\n      let end = (node2.raws.between || \"\") + (semicolon ? \";\" : \"\");\n      this.builder(name + params + end, node2);\n    }\n  }\n  beforeAfter(node2, detect) {\n    let value;\n    if (node2.type === \"decl\") {\n      value = this.raw(node2, null, \"beforeDecl\");\n    } else if (node2.type === \"comment\") {\n      value = this.raw(node2, null, \"beforeComment\");\n    } else if (detect === \"before\") {\n      value = this.raw(node2, null, \"beforeRule\");\n    } else {\n      value = this.raw(node2, null, \"beforeClose\");\n    }\n    let buf = node2.parent;\n    let depth = 0;\n    while (buf && buf.type !== \"root\") {\n      depth += 1;\n      buf = buf.parent;\n    }\n    if (value.includes(\"\\n\")) {\n      let indent = this.raw(node2, null, \"indent\");\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent;\n      }\n    }\n    return value;\n  }\n  block(node2, start) {\n    let between = this.raw(node2, \"between\", \"beforeOpen\");\n    this.builder(start + between + \"{\", node2, \"start\");\n    let after;\n    if (node2.nodes && node2.nodes.length) {\n      this.body(node2);\n      after = this.raw(node2, \"after\");\n    } else {\n      after = this.raw(node2, \"after\", \"emptyBody\");\n    }\n    if (after) this.builder(after);\n    this.builder(\"}\", node2, \"end\");\n  }\n  body(node2) {\n    let last = node2.nodes.length - 1;\n    while (last > 0) {\n      if (node2.nodes[last].type !== \"comment\") break;\n      last -= 1;\n    }\n    let semicolon = this.raw(node2, \"semicolon\");\n    for (let i = 0; i < node2.nodes.length; i++) {\n      let child = node2.nodes[i];\n      let before = this.raw(child, \"before\");\n      if (before) this.builder(before);\n      this.stringify(child, last !== i || semicolon);\n    }\n  }\n  comment(node2) {\n    let left = this.raw(node2, \"left\", \"commentLeft\");\n    let right = this.raw(node2, \"right\", \"commentRight\");\n    this.builder(\"/*\" + left + node2.text + right + \"*/\", node2);\n  }\n  decl(node2, semicolon) {\n    let between = this.raw(node2, \"between\", \"colon\");\n    let string = node2.prop + between + this.rawValue(node2, \"value\");\n    if (node2.important) {\n      string += node2.raws.important || \" !important\";\n    }\n    if (semicolon) string += \";\";\n    this.builder(string, node2);\n  }\n  document(node2) {\n    this.body(node2);\n  }\n  raw(node2, own, detect) {\n    let value;\n    if (!detect) detect = own;\n    if (own) {\n      value = node2.raws[own];\n      if (typeof value !== \"undefined\") return value;\n    }\n    let parent = node2.parent;\n    if (detect === \"before\") {\n      if (!parent || parent.type === \"root\" && parent.first === node2) {\n        return \"\";\n      }\n      if (parent && parent.type === \"document\") {\n        return \"\";\n      }\n    }\n    if (!parent) return DEFAULT_RAW[detect];\n    let root2 = node2.root();\n    if (!root2.rawCache) root2.rawCache = {};\n    if (typeof root2.rawCache[detect] !== \"undefined\") {\n      return root2.rawCache[detect];\n    }\n    if (detect === \"before\" || detect === \"after\") {\n      return this.beforeAfter(node2, detect);\n    } else {\n      let method = \"raw\" + capitalize(detect);\n      if (this[method]) {\n        value = this[method](root2, node2);\n      } else {\n        root2.walk((i) => {\n          value = i.raws[own];\n          if (typeof value !== \"undefined\") return false;\n        });\n      }\n    }\n    if (typeof value === \"undefined\") value = DEFAULT_RAW[detect];\n    root2.rawCache[detect] = value;\n    return value;\n  }\n  rawBeforeClose(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== \"undefined\") {\n          value = i.raws.after;\n          if (value.includes(\"\\n\")) {\n            value = value.replace(/[^\\n]+$/, \"\");\n          }\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, \"\");\n    return value;\n  }\n  rawBeforeComment(root2, node2) {\n    let value;\n    root2.walkComments((i) => {\n      if (typeof i.raws.before !== \"undefined\") {\n        value = i.raws.before;\n        if (value.includes(\"\\n\")) {\n          value = value.replace(/[^\\n]+$/, \"\");\n        }\n        return false;\n      }\n    });\n    if (typeof value === \"undefined\") {\n      value = this.raw(node2, null, \"beforeDecl\");\n    } else if (value) {\n      value = value.replace(/\\S/g, \"\");\n    }\n    return value;\n  }\n  rawBeforeDecl(root2, node2) {\n    let value;\n    root2.walkDecls((i) => {\n      if (typeof i.raws.before !== \"undefined\") {\n        value = i.raws.before;\n        if (value.includes(\"\\n\")) {\n          value = value.replace(/[^\\n]+$/, \"\");\n        }\n        return false;\n      }\n    });\n    if (typeof value === \"undefined\") {\n      value = this.raw(node2, null, \"beforeRule\");\n    } else if (value) {\n      value = value.replace(/\\S/g, \"\");\n    }\n    return value;\n  }\n  rawBeforeOpen(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.type !== \"decl\") {\n        value = i.raws.between;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawBeforeRule(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && (i.parent !== root2 || root2.first !== i)) {\n        if (typeof i.raws.before !== \"undefined\") {\n          value = i.raws.before;\n          if (value.includes(\"\\n\")) {\n            value = value.replace(/[^\\n]+$/, \"\");\n          }\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, \"\");\n    return value;\n  }\n  rawColon(root2) {\n    let value;\n    root2.walkDecls((i) => {\n      if (typeof i.raws.between !== \"undefined\") {\n        value = i.raws.between.replace(/[^\\s:]/g, \"\");\n        return false;\n      }\n    });\n    return value;\n  }\n  rawEmptyBody(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawIndent(root2) {\n    if (root2.raws.indent) return root2.raws.indent;\n    let value;\n    root2.walk((i) => {\n      let p = i.parent;\n      if (p && p !== root2 && p.parent && p.parent === root2) {\n        if (typeof i.raws.before !== \"undefined\") {\n          let parts = i.raws.before.split(\"\\n\");\n          value = parts[parts.length - 1];\n          value = value.replace(/\\S/g, \"\");\n          return false;\n        }\n      }\n    });\n    return value;\n  }\n  rawSemicolon(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length && i.last.type === \"decl\") {\n        value = i.raws.semicolon;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawValue(node2, prop) {\n    let value = node2[prop];\n    let raw = node2.raws[prop];\n    if (raw && raw.value === value) {\n      return raw.raw;\n    }\n    return value;\n  }\n  root(node2) {\n    this.body(node2);\n    if (node2.raws.after) this.builder(node2.raws.after);\n  }\n  rule(node2) {\n    this.block(node2, this.rawValue(node2, \"selector\"));\n    if (node2.raws.ownSemicolon) {\n      this.builder(node2.raws.ownSemicolon, node2, \"end\");\n    }\n  }\n  stringify(node2, semicolon) {\n    if (!this[node2.type]) {\n      throw new Error(\n        \"Unknown AST node type \" + node2.type + \". Maybe you need to change PostCSS stringifier.\"\n      );\n    }\n    this[node2.type](node2, semicolon);\n  }\n};\nvar stringifier = Stringifier$2;\nStringifier$2.default = Stringifier$2;\nlet Stringifier$1 = stringifier;\nfunction stringify$4(node2, builder) {\n  let str = new Stringifier$1(builder);\n  str.stringify(node2);\n}\nvar stringify_1 = stringify$4;\nstringify$4.default = stringify$4;\nvar symbols = {};\nsymbols.isClean = Symbol(\"isClean\");\nsymbols.my = Symbol(\"my\");\nlet CssSyntaxError$2 = cssSyntaxError;\nlet Stringifier2 = stringifier;\nlet stringify$3 = stringify_1;\nlet { isClean: isClean$2, my: my$2 } = symbols;\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor();\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      continue;\n    }\n    if (i === \"proxyCache\") continue;\n    let value = obj[i];\n    let type = typeof value;\n    if (i === \"parent\" && type === \"object\") {\n      if (parent) cloned[i] = parent;\n    } else if (i === \"source\") {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map((j) => cloneNode(j, cloned));\n    } else {\n      if (type === \"object\" && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n  return cloned;\n}\nfunction sourceOffset(inputCSS, position) {\n  if (position && typeof position.offset !== \"undefined\") {\n    return position.offset;\n  }\n  let column = 1;\n  let line = 1;\n  let offset = 0;\n  for (let i = 0; i < inputCSS.length; i++) {\n    if (line === position.line && column === position.column) {\n      offset = i;\n      break;\n    }\n    if (inputCSS[i] === \"\\n\") {\n      column = 1;\n      line += 1;\n    } else {\n      column += 1;\n    }\n  }\n  return offset;\n}\nlet Node$5 = class Node2 {\n  constructor(defaults = {}) {\n    this.raws = {};\n    this[isClean$2] = false;\n    this[my$2] = true;\n    for (let name in defaults) {\n      if (name === \"nodes\") {\n        this.nodes = [];\n        for (let node2 of defaults[name]) {\n          if (typeof node2.clone === \"function\") {\n            this.append(node2.clone());\n          } else {\n            this.append(node2);\n          }\n        }\n      } else {\n        this[name] = defaults[name];\n      }\n    }\n  }\n  addToError(error) {\n    error.postcssNode = this;\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source;\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      );\n    }\n    return error;\n  }\n  after(add) {\n    this.parent.insertAfter(this, add);\n    return this;\n  }\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name];\n    }\n    return this;\n  }\n  before(add) {\n    this.parent.insertBefore(this, add);\n    return this;\n  }\n  cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  }\n  clone(overrides = {}) {\n    let cloned = cloneNode(this);\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned;\n  }\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned;\n  }\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts);\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      );\n    }\n    return new CssSyntaxError$2(message);\n  }\n  getProxyProcessor() {\n    return {\n      get(node2, prop) {\n        if (prop === \"proxyOf\") {\n          return node2;\n        } else if (prop === \"root\") {\n          return () => node2.root().toProxy();\n        } else {\n          return node2[prop];\n        }\n      },\n      set(node2, prop, value) {\n        if (node2[prop] === value) return true;\n        node2[prop] = value;\n        if (prop === \"prop\" || prop === \"value\" || prop === \"name\" || prop === \"params\" || prop === \"important\" || /* c8 ignore next */\n        prop === \"text\") {\n          node2.markDirty();\n        }\n        return true;\n      }\n    };\n  }\n  /* c8 ignore next 3 */\n  markClean() {\n    this[isClean$2] = true;\n  }\n  markDirty() {\n    if (this[isClean$2]) {\n      this[isClean$2] = false;\n      let next = this;\n      while (next = next.parent) {\n        next[isClean$2] = false;\n      }\n    }\n  }\n  next() {\n    if (!this.parent) return void 0;\n    let index2 = this.parent.index(this);\n    return this.parent.nodes[index2 + 1];\n  }\n  positionBy(opts) {\n    let pos = this.source.start;\n    if (opts.index) {\n      pos = this.positionInside(opts.index);\n    } else if (opts.word) {\n      let stringRepresentation = this.source.input.css.slice(\n        sourceOffset(this.source.input.css, this.source.start),\n        sourceOffset(this.source.input.css, this.source.end)\n      );\n      let index2 = stringRepresentation.indexOf(opts.word);\n      if (index2 !== -1) pos = this.positionInside(index2);\n    }\n    return pos;\n  }\n  positionInside(index2) {\n    let column = this.source.start.column;\n    let line = this.source.start.line;\n    let offset = sourceOffset(this.source.input.css, this.source.start);\n    let end = offset + index2;\n    for (let i = offset; i < end; i++) {\n      if (this.source.input.css[i] === \"\\n\") {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n    return { column, line };\n  }\n  prev() {\n    if (!this.parent) return void 0;\n    let index2 = this.parent.index(this);\n    return this.parent.nodes[index2 - 1];\n  }\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    };\n    let end = this.source.end ? {\n      column: this.source.end.column + 1,\n      line: this.source.end.line\n    } : {\n      column: start.column + 1,\n      line: start.line\n    };\n    if (opts.word) {\n      let stringRepresentation = this.source.input.css.slice(\n        sourceOffset(this.source.input.css, this.source.start),\n        sourceOffset(this.source.input.css, this.source.end)\n      );\n      let index2 = stringRepresentation.indexOf(opts.word);\n      if (index2 !== -1) {\n        start = this.positionInside(index2);\n        end = this.positionInside(\n          index2 + opts.word.length\n        );\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        };\n      } else if (opts.index) {\n        start = this.positionInside(opts.index);\n      }\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        };\n      } else if (typeof opts.endIndex === \"number\") {\n        end = this.positionInside(opts.endIndex);\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1);\n      }\n    }\n    if (end.line < start.line || end.line === start.line && end.column <= start.column) {\n      end = { column: start.column + 1, line: start.line };\n    }\n    return { end, start };\n  }\n  raw(prop, defaultType) {\n    let str = new Stringifier2();\n    return str.raw(this, prop, defaultType);\n  }\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = void 0;\n    return this;\n  }\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this;\n      let foundSelf = false;\n      for (let node2 of nodes) {\n        if (node2 === this) {\n          foundSelf = true;\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node2);\n          bookmark = node2;\n        } else {\n          this.parent.insertBefore(bookmark, node2);\n        }\n      }\n      if (!foundSelf) {\n        this.remove();\n      }\n    }\n    return this;\n  }\n  root() {\n    let result2 = this;\n    while (result2.parent && result2.parent.type !== \"document\") {\n      result2 = result2.parent;\n    }\n    return result2;\n  }\n  toJSON(_, inputs) {\n    let fixed = {};\n    let emitInputs = inputs == null;\n    inputs = inputs || /* @__PURE__ */ new Map();\n    let inputsNextIndex = 0;\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        continue;\n      }\n      if (name === \"parent\" || name === \"proxyCache\") continue;\n      let value = this[name];\n      if (Array.isArray(value)) {\n        fixed[name] = value.map((i) => {\n          if (typeof i === \"object\" && i.toJSON) {\n            return i.toJSON(null, inputs);\n          } else {\n            return i;\n          }\n        });\n      } else if (typeof value === \"object\" && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs);\n      } else if (name === \"source\") {\n        let inputId = inputs.get(value.input);\n        if (inputId == null) {\n          inputId = inputsNextIndex;\n          inputs.set(value.input, inputsNextIndex);\n          inputsNextIndex++;\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        };\n      } else {\n        fixed[name] = value;\n      }\n    }\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map((input2) => input2.toJSON());\n    }\n    return fixed;\n  }\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n    }\n    return this.proxyCache;\n  }\n  toString(stringifier2 = stringify$3) {\n    if (stringifier2.stringify) stringifier2 = stringifier2.stringify;\n    let result2 = \"\";\n    stringifier2(this, (i) => {\n      result2 += i;\n    });\n    return result2;\n  }\n  warn(result2, text, opts) {\n    let data = { node: this };\n    for (let i in opts) data[i] = opts[i];\n    return result2.warn(text, data);\n  }\n  get proxyOf() {\n    return this;\n  }\n};\nvar node = Node$5;\nNode$5.default = Node$5;\nlet Node$4 = node;\nlet Comment$4 = class Comment extends Node$4 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"comment\";\n  }\n};\nvar comment = Comment$4;\nComment$4.default = Comment$4;\nlet Node$3 = node;\nlet Declaration$4 = class Declaration extends Node$3 {\n  constructor(defaults) {\n    if (defaults && typeof defaults.value !== \"undefined\" && typeof defaults.value !== \"string\") {\n      defaults = { ...defaults, value: String(defaults.value) };\n    }\n    super(defaults);\n    this.type = \"decl\";\n  }\n  get variable() {\n    return this.prop.startsWith(\"--\") || this.prop[0] === \"$\";\n  }\n};\nvar declaration = Declaration$4;\nDeclaration$4.default = Declaration$4;\nlet Comment$3 = comment;\nlet Declaration$3 = declaration;\nlet Node$2 = node;\nlet { isClean: isClean$1, my: my$1 } = symbols;\nlet AtRule$4, parse$4, Root$6, Rule$4;\nfunction cleanSource(nodes) {\n  return nodes.map((i) => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\n    delete i.source;\n    return i;\n  });\n}\nfunction markTreeDirty(node2) {\n  node2[isClean$1] = false;\n  if (node2.proxyOf.nodes) {\n    for (let i of node2.proxyOf.nodes) {\n      markTreeDirty(i);\n    }\n  }\n}\nlet Container$7 = class Container extends Node$2 {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last);\n      for (let node2 of nodes) this.proxyOf.nodes.push(node2);\n    }\n    this.markDirty();\n    return this;\n  }\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween);\n    if (this.nodes) {\n      for (let node2 of this.nodes) node2.cleanRaws(keepBetween);\n    }\n  }\n  each(callback) {\n    if (!this.proxyOf.nodes) return void 0;\n    let iterator = this.getIterator();\n    let index2, result2;\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index2 = this.indexes[iterator];\n      result2 = callback(this.proxyOf.nodes[index2], index2);\n      if (result2 === false) break;\n      this.indexes[iterator] += 1;\n    }\n    delete this.indexes[iterator];\n    return result2;\n  }\n  every(condition) {\n    return this.nodes.every(condition);\n  }\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0;\n    if (!this.indexes) this.indexes = {};\n    this.lastEach += 1;\n    let iterator = this.lastEach;\n    this.indexes[iterator] = 0;\n    return iterator;\n  }\n  getProxyProcessor() {\n    return {\n      get(node2, prop) {\n        if (prop === \"proxyOf\") {\n          return node2;\n        } else if (!node2[prop]) {\n          return node2[prop];\n        } else if (prop === \"each\" || typeof prop === \"string\" && prop.startsWith(\"walk\")) {\n          return (...args) => {\n            return node2[prop](\n              ...args.map((i) => {\n                if (typeof i === \"function\") {\n                  return (child, index2) => i(child.toProxy(), index2);\n                } else {\n                  return i;\n                }\n              })\n            );\n          };\n        } else if (prop === \"every\" || prop === \"some\") {\n          return (cb) => {\n            return node2[prop](\n              (child, ...other) => cb(child.toProxy(), ...other)\n            );\n          };\n        } else if (prop === \"root\") {\n          return () => node2.root().toProxy();\n        } else if (prop === \"nodes\") {\n          return node2.nodes.map((i) => i.toProxy());\n        } else if (prop === \"first\" || prop === \"last\") {\n          return node2[prop].toProxy();\n        } else {\n          return node2[prop];\n        }\n      },\n      set(node2, prop, value) {\n        if (node2[prop] === value) return true;\n        node2[prop] = value;\n        if (prop === \"name\" || prop === \"params\" || prop === \"selector\") {\n          node2.markDirty();\n        }\n        return true;\n      }\n    };\n  }\n  index(child) {\n    if (typeof child === \"number\") return child;\n    if (child.proxyOf) child = child.proxyOf;\n    return this.proxyOf.nodes.indexOf(child);\n  }\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist);\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();\n    existIndex = this.index(exist);\n    for (let node2 of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node2);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (existIndex < index2) {\n        this.indexes[id] = index2 + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist);\n    let type = existIndex === 0 ? \"prepend\" : false;\n    let nodes = this.normalize(\n      add,\n      this.proxyOf.nodes[existIndex],\n      type\n    ).reverse();\n    existIndex = this.index(exist);\n    for (let node2 of nodes) this.proxyOf.nodes.splice(existIndex, 0, node2);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (existIndex <= index2) {\n        this.indexes[id] = index2 + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  normalize(nodes, sample) {\n    if (typeof nodes === \"string\") {\n      nodes = cleanSource(parse$4(nodes).nodes);\n    } else if (typeof nodes === \"undefined\") {\n      nodes = [];\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, \"ignore\");\n      }\n    } else if (nodes.type === \"root\" && this.type !== \"document\") {\n      nodes = nodes.nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, \"ignore\");\n      }\n    } else if (nodes.type) {\n      nodes = [nodes];\n    } else if (nodes.prop) {\n      if (typeof nodes.value === \"undefined\") {\n        throw new Error(\"Value field is missed in node creation\");\n      } else if (typeof nodes.value !== \"string\") {\n        nodes.value = String(nodes.value);\n      }\n      nodes = [new Declaration$3(nodes)];\n    } else if (nodes.selector || nodes.selectors) {\n      nodes = [new Rule$4(nodes)];\n    } else if (nodes.name) {\n      nodes = [new AtRule$4(nodes)];\n    } else if (nodes.text) {\n      nodes = [new Comment$3(nodes)];\n    } else {\n      throw new Error(\"Unknown node type in node creation\");\n    }\n    let processed = nodes.map((i) => {\n      if (!i[my$1]) Container.rebuild(i);\n      i = i.proxyOf;\n      if (i.parent) i.parent.removeChild(i);\n      if (i[isClean$1]) markTreeDirty(i);\n      if (!i.raws) i.raws = {};\n      if (typeof i.raws.before === \"undefined\") {\n        if (sample && typeof sample.raws.before !== \"undefined\") {\n          i.raws.before = sample.raws.before.replace(/\\S/g, \"\");\n        }\n      }\n      i.parent = this.proxyOf;\n      return i;\n    });\n    return processed;\n  }\n  prepend(...children) {\n    children = children.reverse();\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, \"prepend\").reverse();\n      for (let node2 of nodes) this.proxyOf.nodes.unshift(node2);\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  push(child) {\n    child.parent = this;\n    this.proxyOf.nodes.push(child);\n    return this;\n  }\n  removeAll() {\n    for (let node2 of this.proxyOf.nodes) node2.parent = void 0;\n    this.proxyOf.nodes = [];\n    this.markDirty();\n    return this;\n  }\n  removeChild(child) {\n    child = this.index(child);\n    this.proxyOf.nodes[child].parent = void 0;\n    this.proxyOf.nodes.splice(child, 1);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (index2 >= child) {\n        this.indexes[id] = index2 - 1;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts;\n      opts = {};\n    }\n    this.walkDecls((decl) => {\n      if (opts.props && !opts.props.includes(decl.prop)) return;\n      if (opts.fast && !decl.value.includes(opts.fast)) return;\n      decl.value = decl.value.replace(pattern, callback);\n    });\n    this.markDirty();\n    return this;\n  }\n  some(condition) {\n    return this.nodes.some(condition);\n  }\n  walk(callback) {\n    return this.each((child, i) => {\n      let result2;\n      try {\n        result2 = callback(child, i);\n      } catch (e) {\n        throw child.addToError(e);\n      }\n      if (result2 !== false && child.walk) {\n        result2 = child.walk(callback);\n      }\n      return result2;\n    });\n  }\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name;\n      return this.walk((child, i) => {\n        if (child.type === \"atrule\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"atrule\" && name.test(child.name)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"atrule\" && child.name === name) {\n        return callback(child, i);\n      }\n    });\n  }\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === \"comment\") {\n        return callback(child, i);\n      }\n    });\n  }\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop;\n      return this.walk((child, i) => {\n        if (child.type === \"decl\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"decl\" && prop.test(child.prop)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"decl\" && child.prop === prop) {\n        return callback(child, i);\n      }\n    });\n  }\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector;\n      return this.walk((child, i) => {\n        if (child.type === \"rule\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"rule\" && selector.test(child.selector)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"rule\" && child.selector === selector) {\n        return callback(child, i);\n      }\n    });\n  }\n  get first() {\n    if (!this.proxyOf.nodes) return void 0;\n    return this.proxyOf.nodes[0];\n  }\n  get last() {\n    if (!this.proxyOf.nodes) return void 0;\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];\n  }\n};\nContainer$7.registerParse = (dependant) => {\n  parse$4 = dependant;\n};\nContainer$7.registerRule = (dependant) => {\n  Rule$4 = dependant;\n};\nContainer$7.registerAtRule = (dependant) => {\n  AtRule$4 = dependant;\n};\nContainer$7.registerRoot = (dependant) => {\n  Root$6 = dependant;\n};\nvar container = Container$7;\nContainer$7.default = Container$7;\nContainer$7.rebuild = (node2) => {\n  if (node2.type === \"atrule\") {\n    Object.setPrototypeOf(node2, AtRule$4.prototype);\n  } else if (node2.type === \"rule\") {\n    Object.setPrototypeOf(node2, Rule$4.prototype);\n  } else if (node2.type === \"decl\") {\n    Object.setPrototypeOf(node2, Declaration$3.prototype);\n  } else if (node2.type === \"comment\") {\n    Object.setPrototypeOf(node2, Comment$3.prototype);\n  } else if (node2.type === \"root\") {\n    Object.setPrototypeOf(node2, Root$6.prototype);\n  }\n  node2[my$1] = true;\n  if (node2.nodes) {\n    node2.nodes.forEach((child) => {\n      Container$7.rebuild(child);\n    });\n  }\n};\nlet Container$6 = container;\nlet AtRule$3 = class AtRule extends Container$6 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"atrule\";\n  }\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.append(...children);\n  }\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.prepend(...children);\n  }\n};\nvar atRule = AtRule$3;\nAtRule$3.default = AtRule$3;\nContainer$6.registerAtRule(AtRule$3);\nlet Container$5 = container;\nlet LazyResult$4, Processor$3;\nlet Document$3 = class Document2 extends Container$5 {\n  constructor(defaults) {\n    super({ type: \"document\", ...defaults });\n    if (!this.nodes) {\n      this.nodes = [];\n    }\n  }\n  toResult(opts = {}) {\n    let lazy = new LazyResult$4(new Processor$3(), this, opts);\n    return lazy.stringify();\n  }\n};\nDocument$3.registerLazyResult = (dependant) => {\n  LazyResult$4 = dependant;\n};\nDocument$3.registerProcessor = (dependant) => {\n  Processor$3 = dependant;\n};\nvar document$1 = Document$3;\nDocument$3.default = Document$3;\nlet urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = \"\";\n    let i = size | 0;\n    while (i--) {\n      id += alphabet[Math.random() * alphabet.length | 0];\n    }\n    return id;\n  };\n};\nlet nanoid$1 = (size = 21) => {\n  let id = \"\";\n  let i = size | 0;\n  while (i--) {\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};\nvar nonSecure = { nanoid: nanoid$1, customAlphabet };\nlet { existsSync, readFileSync } = require$$2;\nlet { dirname: dirname$1, join } = require$$2;\nlet { SourceMapConsumer: SourceMapConsumer$2, SourceMapGenerator: SourceMapGenerator$2 } = require$$2;\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, \"base64\").toString();\n  } else {\n    return window.atob(str);\n  }\n}\nlet PreviousMap$2 = class PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return;\n    this.loadAnnotation(css);\n    this.inline = this.startWith(this.annotation, \"data:\");\n    let prev = opts.map ? opts.map.prev : void 0;\n    let text = this.loadMap(opts.from, prev);\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from;\n    }\n    if (this.mapFile) this.root = dirname$1(this.mapFile);\n    if (text) this.text = text;\n  }\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer$2(this.text);\n    }\n    return this.consumerCache;\n  }\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    let baseUri = /^data:application\\/json;base64,/;\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n    let uri = /^data:application\\/json,/;\n    let uriMatch = text.match(charsetUri) || text.match(uri);\n    if (uriMatch) {\n      return decodeURIComponent(text.substr(uriMatch[0].length));\n    }\n    let baseUriMatch = text.match(baseCharsetUri) || text.match(baseUri);\n    if (baseUriMatch) {\n      return fromBase64(text.substr(baseUriMatch[0].length));\n    }\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error(\"Unsupported source map encoding \" + encoding);\n  }\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, \"\").trim();\n  }\n  isMap(map) {\n    if (typeof map !== \"object\") return false;\n    return typeof map.mappings === \"string\" || typeof map._mappings === \"string\" || Array.isArray(map.sections);\n  }\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/g);\n    if (!comments) return;\n    let start = css.lastIndexOf(comments.pop());\n    let end = css.indexOf(\"*/\", start);\n    if (start > -1 && end > -1) {\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\n    }\n  }\n  loadFile(path) {\n    this.root = dirname$1(path);\n    if (existsSync(path)) {\n      this.mapFile = path;\n      return readFileSync(path, \"utf-8\").toString().trim();\n    }\n  }\n  loadMap(file, prev) {\n    if (prev === false) return false;\n    if (prev) {\n      if (typeof prev === \"string\") {\n        return prev;\n      } else if (typeof prev === \"function\") {\n        let prevPath = prev(file);\n        if (prevPath) {\n          let map = this.loadFile(prevPath);\n          if (!map) {\n            throw new Error(\n              \"Unable to load previous source map: \" + prevPath.toString()\n            );\n          }\n          return map;\n        }\n      } else if (prev instanceof SourceMapConsumer$2) {\n        return SourceMapGenerator$2.fromSourceMap(prev).toString();\n      } else if (prev instanceof SourceMapGenerator$2) {\n        return prev.toString();\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev);\n      } else {\n        throw new Error(\n          \"Unsupported previous source map format: \" + prev.toString()\n        );\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation);\n    } else if (this.annotation) {\n      let map = this.annotation;\n      if (file) map = join(dirname$1(file), map);\n      return this.loadFile(map);\n    }\n  }\n  startWith(string, start) {\n    if (!string) return false;\n    return string.substr(0, start.length) === start;\n  }\n  withContent() {\n    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n  }\n};\nvar previousMap = PreviousMap$2;\nPreviousMap$2.default = PreviousMap$2;\nlet { nanoid } = nonSecure;\nlet { isAbsolute, resolve: resolve$1 } = require$$2;\nlet { SourceMapConsumer: SourceMapConsumer$1, SourceMapGenerator: SourceMapGenerator$1 } = require$$2;\nlet { fileURLToPath, pathToFileURL: pathToFileURL$1 } = require$$2;\nlet CssSyntaxError$1 = cssSyntaxError;\nlet PreviousMap$1 = previousMap;\nlet terminalHighlight = require$$2;\nlet fromOffsetCache = Symbol(\"fromOffsetCache\");\nlet sourceMapAvailable$1 = Boolean(SourceMapConsumer$1 && SourceMapGenerator$1);\nlet pathAvailable$1 = Boolean(resolve$1 && isAbsolute);\nlet Input$4 = class Input {\n  constructor(css, opts = {}) {\n    if (css === null || typeof css === \"undefined\" || typeof css === \"object\" && !css.toString) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`);\n    }\n    this.css = css.toString();\n    if (this.css[0] === \"\\uFEFF\" || this.css[0] === \"￾\") {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n    if (opts.from) {\n      if (!pathAvailable$1 || /^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve$1(opts.from);\n      }\n    }\n    if (pathAvailable$1 && sourceMapAvailable$1) {\n      let map = new PreviousMap$1(this.css, opts);\n      if (map.text) {\n        this.map = map;\n        let file = map.consumer().file;\n        if (!this.file && file) this.file = this.mapResolve(file);\n      }\n    }\n    if (!this.file) {\n      this.id = \"<input css \" + nanoid(6) + \">\";\n    }\n    if (this.map) this.map.file = this.from;\n  }\n  error(message, line, column, opts = {}) {\n    let endColumn, endLine, result2;\n    if (line && typeof line === \"object\") {\n      let start = line;\n      let end = column;\n      if (typeof start.offset === \"number\") {\n        let pos = this.fromOffset(start.offset);\n        line = pos.line;\n        column = pos.col;\n      } else {\n        line = start.line;\n        column = start.column;\n      }\n      if (typeof end.offset === \"number\") {\n        let pos = this.fromOffset(end.offset);\n        endLine = pos.line;\n        endColumn = pos.col;\n      } else {\n        endLine = end.line;\n        endColumn = end.column;\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line);\n      line = pos.line;\n      column = pos.col;\n    }\n    let origin = this.origin(line, column, endLine, endColumn);\n    if (origin) {\n      result2 = new CssSyntaxError$1(\n        message,\n        origin.endLine === void 0 ? origin.line : { column: origin.column, line: origin.line },\n        origin.endLine === void 0 ? origin.column : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      );\n    } else {\n      result2 = new CssSyntaxError$1(\n        message,\n        endLine === void 0 ? line : { column, line },\n        endLine === void 0 ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      );\n    }\n    result2.input = { column, endColumn, endLine, line, source: this.css };\n    if (this.file) {\n      if (pathToFileURL$1) {\n        result2.input.url = pathToFileURL$1(this.file).toString();\n      }\n      result2.input.file = this.file;\n    }\n    return result2;\n  }\n  fromOffset(offset) {\n    let lastLine, lineToIndex;\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split(\"\\n\");\n      lineToIndex = new Array(lines.length);\n      let prevIndex = 0;\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex;\n        prevIndex += lines[i].length + 1;\n      }\n      this[fromOffsetCache] = lineToIndex;\n    } else {\n      lineToIndex = this[fromOffsetCache];\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1];\n    let min = 0;\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1;\n    } else {\n      let max = lineToIndex.length - 2;\n      let mid;\n      while (min < max) {\n        mid = min + (max - min >> 1);\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1;\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1;\n        } else {\n          min = mid;\n          break;\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    };\n  }\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file;\n    }\n    return resolve$1(this.map.consumer().sourceRoot || this.map.root || \".\", file);\n  }\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false;\n    let consumer = this.map.consumer();\n    let from = consumer.originalPositionFor({ column, line });\n    if (!from.source) return false;\n    let to;\n    if (typeof endLine === \"number\") {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine });\n    }\n    let fromUrl;\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL$1(from.source);\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL$1(this.map.mapFile)\n      );\n    }\n    let result2 = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    };\n    if (fromUrl.protocol === \"file:\") {\n      if (fileURLToPath) {\n        result2.file = fileURLToPath(fromUrl);\n      } else {\n        throw new Error(`file: protocol is not available in this PostCSS build`);\n      }\n    }\n    let source = consumer.sourceContentFor(from.source);\n    if (source) result2.source = source;\n    return result2;\n  }\n  toJSON() {\n    let json = {};\n    for (let name of [\"hasBOM\", \"css\", \"file\", \"id\"]) {\n      if (this[name] != null) {\n        json[name] = this[name];\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map };\n      if (json.map.consumerCache) {\n        json.map.consumerCache = void 0;\n      }\n    }\n    return json;\n  }\n  get from() {\n    return this.file || this.id;\n  }\n};\nvar input = Input$4;\nInput$4.default = Input$4;\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input$4);\n}\nlet Container$4 = container;\nlet LazyResult$3, Processor$2;\nlet Root$5 = class Root extends Container$4 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"root\";\n    if (!this.nodes) this.nodes = [];\n  }\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child);\n    if (sample) {\n      if (type === \"prepend\") {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (let node2 of nodes) {\n          node2.raws.before = sample.raws.before;\n        }\n      }\n    }\n    return nodes;\n  }\n  removeChild(child, ignore) {\n    let index2 = this.index(child);\n    if (!ignore && index2 === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index2].raws.before;\n    }\n    return super.removeChild(child);\n  }\n  toResult(opts = {}) {\n    let lazy = new LazyResult$3(new Processor$2(), this, opts);\n    return lazy.stringify();\n  }\n};\nRoot$5.registerLazyResult = (dependant) => {\n  LazyResult$3 = dependant;\n};\nRoot$5.registerProcessor = (dependant) => {\n  Processor$2 = dependant;\n};\nvar root = Root$5;\nRoot$5.default = Root$5;\nContainer$4.registerRoot(Root$5);\nlet list$2 = {\n  comma(string) {\n    return list$2.split(string, [\",\"], true);\n  },\n  space(string) {\n    let spaces = [\" \", \"\\n\", \"\t\"];\n    return list$2.split(string, spaces);\n  },\n  split(string, separators, last) {\n    let array = [];\n    let current = \"\";\n    let split = false;\n    let func = 0;\n    let inQuote = false;\n    let prevQuote = \"\";\n    let escape = false;\n    for (let letter of string) {\n      if (escape) {\n        escape = false;\n      } else if (letter === \"\\\\\") {\n        escape = true;\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false;\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true;\n        prevQuote = letter;\n      } else if (letter === \"(\") {\n        func += 1;\n      } else if (letter === \")\") {\n        if (func > 0) func -= 1;\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true;\n      }\n      if (split) {\n        if (current !== \"\") array.push(current.trim());\n        current = \"\";\n        split = false;\n      } else {\n        current += letter;\n      }\n    }\n    if (last || current !== \"\") array.push(current.trim());\n    return array;\n  }\n};\nvar list_1 = list$2;\nlist$2.default = list$2;\nlet Container$3 = container;\nlet list$1 = list_1;\nlet Rule$3 = class Rule extends Container$3 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"rule\";\n    if (!this.nodes) this.nodes = [];\n  }\n  get selectors() {\n    return list$1.comma(this.selector);\n  }\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null;\n    let sep2 = match ? match[0] : \",\" + this.raw(\"between\", \"beforeOpen\");\n    this.selector = values.join(sep2);\n  }\n};\nvar rule = Rule$3;\nRule$3.default = Rule$3;\nContainer$3.registerRule(Rule$3);\nlet AtRule$2 = atRule;\nlet Comment$2 = comment;\nlet Declaration$2 = declaration;\nlet Input$3 = input;\nlet PreviousMap2 = previousMap;\nlet Root$4 = root;\nlet Rule$2 = rule;\nfunction fromJSON$1(json, inputs) {\n  if (Array.isArray(json)) return json.map((n) => fromJSON$1(n));\n  let { inputs: ownInputs, ...defaults } = json;\n  if (ownInputs) {\n    inputs = [];\n    for (let input2 of ownInputs) {\n      let inputHydrated = { ...input2, __proto__: Input$3.prototype };\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap2.prototype\n        };\n      }\n      inputs.push(inputHydrated);\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map((n) => fromJSON$1(n, inputs));\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source;\n    defaults.source = source;\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId];\n    }\n  }\n  if (defaults.type === \"root\") {\n    return new Root$4(defaults);\n  } else if (defaults.type === \"decl\") {\n    return new Declaration$2(defaults);\n  } else if (defaults.type === \"rule\") {\n    return new Rule$2(defaults);\n  } else if (defaults.type === \"comment\") {\n    return new Comment$2(defaults);\n  } else if (defaults.type === \"atrule\") {\n    return new AtRule$2(defaults);\n  } else {\n    throw new Error(\"Unknown node type: \" + json.type);\n  }\n}\nvar fromJSON_1 = fromJSON$1;\nfromJSON$1.default = fromJSON$1;\nlet { dirname, relative, resolve, sep } = require$$2;\nlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\nlet { pathToFileURL } = require$$2;\nlet Input$2 = input;\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nlet pathAvailable = Boolean(dirname && resolve && relative && sep);\nlet MapGenerator$2 = class MapGenerator {\n  constructor(stringify2, root2, opts, cssString) {\n    this.stringify = stringify2;\n    this.mapOpts = opts.map || {};\n    this.root = root2;\n    this.opts = opts;\n    this.css = cssString;\n    this.originalCSS = cssString;\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n    this.memoizedFileURLs = /* @__PURE__ */ new Map();\n    this.memoizedPaths = /* @__PURE__ */ new Map();\n    this.memoizedURLs = /* @__PURE__ */ new Map();\n  }\n  addAnnotation() {\n    let content;\n    if (this.isInline()) {\n      content = \"data:application/json;base64,\" + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === \"string\") {\n      content = this.mapOpts.annotation;\n    } else if (typeof this.mapOpts.annotation === \"function\") {\n      content = this.mapOpts.annotation(this.opts.to, this.root);\n    } else {\n      content = this.outputFile() + \".map\";\n    }\n    let eol = \"\\n\";\n    if (this.css.includes(\"\\r\\n\")) eol = \"\\r\\n\";\n    this.css += eol + \"/*# sourceMappingURL=\" + content + \" */\";\n  }\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file));\n      let root2 = prev.root || dirname(prev.file);\n      let map;\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text);\n        if (map.sourcesContent) {\n          map.sourcesContent = null;\n        }\n      } else {\n        map = prev.consumer();\n      }\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root2)));\n    }\n  }\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n    if (this.root) {\n      let node2;\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node2 = this.root.nodes[i];\n        if (node2.type !== \"comment\") continue;\n        if (node2.text.startsWith(\"# sourceMappingURL=\")) {\n          this.root.removeChild(i);\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, \"\");\n    }\n  }\n  generate() {\n    this.clearAnnotation();\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap();\n    } else {\n      let result2 = \"\";\n      this.stringify(this.root, (i) => {\n        result2 += i;\n      });\n      return [result2];\n    }\n  }\n  generateMap() {\n    if (this.root) {\n      this.generateString();\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer();\n      prev.file = this.outputFile();\n      this.map = SourceMapGenerator.fromSourceMap(prev, {\n        ignoreInvalidMapping: true\n      });\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile(),\n        ignoreInvalidMapping: true\n      });\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : \"<no source>\"\n      });\n    }\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n    if (this.isInline()) {\n      return [this.css];\n    } else {\n      return [this.css, this.map];\n    }\n  }\n  generateString() {\n    this.css = \"\";\n    this.map = new SourceMapGenerator({\n      file: this.outputFile(),\n      ignoreInvalidMapping: true\n    });\n    let line = 1;\n    let column = 1;\n    let noSource = \"<no source>\";\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: \"\"\n    };\n    let last, lines;\n    this.stringify(this.root, (str, node2, type) => {\n      this.css += str;\n      if (node2 && type !== \"end\") {\n        mapping.generated.line = line;\n        mapping.generated.column = column - 1;\n        if (node2.source && node2.source.start) {\n          mapping.source = this.sourcePath(node2);\n          mapping.original.line = node2.source.start.line;\n          mapping.original.column = node2.source.start.column - 1;\n          this.map.addMapping(mapping);\n        } else {\n          mapping.source = noSource;\n          mapping.original.line = 1;\n          mapping.original.column = 0;\n          this.map.addMapping(mapping);\n        }\n      }\n      lines = str.match(/\\n/g);\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf(\"\\n\");\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n      if (node2 && type !== \"start\") {\n        let p = node2.parent || { raws: {} };\n        let childless = node2.type === \"decl\" || node2.type === \"atrule\" && !node2.nodes;\n        if (!childless || node2 !== p.last || p.raws.semicolon) {\n          if (node2.source && node2.source.end) {\n            mapping.source = this.sourcePath(node2);\n            mapping.original.line = node2.source.end.line;\n            mapping.original.column = node2.source.end.column - 1;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 2;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 1;\n            this.map.addMapping(mapping);\n          }\n        }\n      }\n    });\n  }\n  isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    }\n    if (typeof this.mapOpts.annotation !== \"undefined\") {\n      return this.mapOpts.annotation;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.annotation);\n    }\n    return true;\n  }\n  isInline() {\n    if (typeof this.mapOpts.inline !== \"undefined\") {\n      return this.mapOpts.inline;\n    }\n    let annotation = this.mapOpts.annotation;\n    if (typeof annotation !== \"undefined\" && annotation !== true) {\n      return false;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.inline);\n    }\n    return true;\n  }\n  isMap() {\n    if (typeof this.opts.map !== \"undefined\") {\n      return !!this.opts.map;\n    }\n    return this.previous().length > 0;\n  }\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== \"undefined\") {\n      return this.mapOpts.sourcesContent;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.withContent());\n    }\n    return true;\n  }\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to);\n    } else if (this.opts.from) {\n      return this.path(this.opts.from);\n    } else {\n      return \"to.css\";\n    }\n  }\n  path(file) {\n    if (this.mapOpts.absolute) return file;\n    if (file.charCodeAt(0) === 60) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    let cached = this.memoizedPaths.get(file);\n    if (cached) return cached;\n    let from = this.opts.to ? dirname(this.opts.to) : \".\";\n    if (typeof this.mapOpts.annotation === \"string\") {\n      from = dirname(resolve(from, this.mapOpts.annotation));\n    }\n    let path = relative(from, file);\n    this.memoizedPaths.set(file, path);\n    return path;\n  }\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      if (this.root) {\n        this.root.walk((node2) => {\n          if (node2.source && node2.source.input.map) {\n            let map = node2.source.input.map;\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map);\n            }\n          }\n        });\n      } else {\n        let input2 = new Input$2(this.originalCSS, this.opts);\n        if (input2.map) this.previousMaps.push(input2.map);\n      }\n    }\n    return this.previousMaps;\n  }\n  setSourcesContent() {\n    let already = {};\n    if (this.root) {\n      this.root.walk((node2) => {\n        if (node2.source) {\n          let from = node2.source.input.from;\n          if (from && !already[from]) {\n            already[from] = true;\n            let fromUrl = this.usesFileUrls ? this.toFileUrl(from) : this.toUrl(this.path(from));\n            this.map.setSourceContent(fromUrl, node2.source.input.css);\n          }\n        }\n      });\n    } else if (this.css) {\n      let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : \"<no source>\";\n      this.map.setSourceContent(from, this.css);\n    }\n  }\n  sourcePath(node2) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from);\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node2.source.input.from);\n    } else {\n      return this.toUrl(this.path(node2.source.input.from));\n    }\n  }\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString(\"base64\");\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    }\n  }\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path);\n    if (cached) return cached;\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString();\n      this.memoizedFileURLs.set(path, fileURL);\n      return fileURL;\n    } else {\n      throw new Error(\n        \"`map.absolute` option is not available in this PostCSS build\"\n      );\n    }\n  }\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path);\n    if (cached) return cached;\n    if (sep === \"\\\\\") {\n      path = path.replace(/\\\\/g, \"/\");\n    }\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n    this.memoizedURLs.set(path, url);\n    return url;\n  }\n};\nvar mapGenerator = MapGenerator$2;\nconst SINGLE_QUOTE = \"'\".charCodeAt(0);\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\nconst BACKSLASH = \"\\\\\".charCodeAt(0);\nconst SLASH = \"/\".charCodeAt(0);\nconst NEWLINE = \"\\n\".charCodeAt(0);\nconst SPACE = \" \".charCodeAt(0);\nconst FEED = \"\\f\".charCodeAt(0);\nconst TAB = \"\t\".charCodeAt(0);\nconst CR = \"\\r\".charCodeAt(0);\nconst OPEN_SQUARE = \"[\".charCodeAt(0);\nconst CLOSE_SQUARE = \"]\".charCodeAt(0);\nconst OPEN_PARENTHESES = \"(\".charCodeAt(0);\nconst CLOSE_PARENTHESES = \")\".charCodeAt(0);\nconst OPEN_CURLY = \"{\".charCodeAt(0);\nconst CLOSE_CURLY = \"}\".charCodeAt(0);\nconst SEMICOLON = \";\".charCodeAt(0);\nconst ASTERISK = \"*\".charCodeAt(0);\nconst COLON = \":\".charCodeAt(0);\nconst AT = \"@\".charCodeAt(0);\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/;\nconst RE_HEX_ESCAPE = /[\\da-f]/i;\nvar tokenize = function tokenizer(input2, options = {}) {\n  let css = input2.css.valueOf();\n  let ignore = options.ignoreErrors;\n  let code, content, escape, next, quote;\n  let currentToken, escaped, escapePos, n, prev;\n  let length = css.length;\n  let pos = 0;\n  let buffer = [];\n  let returned = [];\n  function position() {\n    return pos;\n  }\n  function unclosed(what) {\n    throw input2.error(\"Unclosed \" + what, pos);\n  }\n  function endOfFile() {\n    return returned.length === 0 && pos >= length;\n  }\n  function nextToken(opts) {\n    if (returned.length) return returned.pop();\n    if (pos >= length) return;\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n    code = css.charCodeAt(pos);\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);\n        currentToken = [\"space\", css.slice(pos, next)];\n        pos = next - 1;\n        break;\n      }\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code);\n        currentToken = [controlChar, controlChar, pos];\n        break;\n      }\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : \"\";\n        n = css.charCodeAt(pos + 1);\n        if (prev === \"url\" && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {\n          next = pos;\n          do {\n            escaped = false;\n            next = css.indexOf(\")\", next + 1);\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos;\n                break;\n              } else {\n                unclosed(\"bracket\");\n              }\n            }\n            escapePos = next;\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1;\n              escaped = !escaped;\n            }\n          } while (escaped);\n          currentToken = [\"brackets\", css.slice(pos, next + 1), pos, next];\n          pos = next;\n        } else {\n          next = css.indexOf(\")\", pos + 1);\n          content = css.slice(pos, next + 1);\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = [\"(\", \"(\", pos];\n          } else {\n            currentToken = [\"brackets\", content, pos, next];\n            pos = next;\n          }\n        }\n        break;\n      }\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\n        next = pos;\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1;\n              break;\n            } else {\n              unclosed(\"string\");\n            }\n          }\n          escapePos = next;\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n        currentToken = [\"string\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1;\n        RE_AT_END.test(css);\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1;\n        } else {\n          next = RE_AT_END.lastIndex - 2;\n        }\n        currentToken = [\"at-word\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      case BACKSLASH: {\n        next = pos;\n        escape = true;\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1;\n          escape = !escape;\n        }\n        code = css.charCodeAt(next + 1);\n        if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {\n          next += 1;\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1;\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1;\n            }\n          }\n        }\n        currentToken = [\"word\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf(\"*/\", pos + 2) + 1;\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length;\n            } else {\n              unclosed(\"comment\");\n            }\n          }\n          currentToken = [\"comment\", css.slice(pos, next + 1), pos, next];\n          pos = next;\n        } else {\n          RE_WORD_END.lastIndex = pos + 1;\n          RE_WORD_END.test(css);\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1;\n          } else {\n            next = RE_WORD_END.lastIndex - 2;\n          }\n          currentToken = [\"word\", css.slice(pos, next + 1), pos, next];\n          buffer.push(currentToken);\n          pos = next;\n        }\n        break;\n      }\n    }\n    pos++;\n    return currentToken;\n  }\n  function back(token) {\n    returned.push(token);\n  }\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  };\n};\nlet AtRule$1 = atRule;\nlet Comment$1 = comment;\nlet Declaration$1 = declaration;\nlet Root$3 = root;\nlet Rule$1 = rule;\nlet tokenizer2 = tokenize;\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n};\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i];\n    let pos = token[3] || token[2];\n    if (pos) return pos;\n  }\n}\nlet Parser$1 = class Parser {\n  constructor(input2) {\n    this.input = input2;\n    this.root = new Root$3();\n    this.current = this.root;\n    this.spaces = \"\";\n    this.semicolon = false;\n    this.createTokenizer();\n    this.root.source = { input: input2, start: { column: 1, line: 1, offset: 0 } };\n  }\n  atrule(token) {\n    let node2 = new AtRule$1();\n    node2.name = token[1].slice(1);\n    if (node2.name === \"\") {\n      this.unnamedAtrule(node2, token);\n    }\n    this.init(node2, token[2]);\n    let type;\n    let prev;\n    let shift;\n    let last = false;\n    let open = false;\n    let params = [];\n    let brackets = [];\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n      type = token[0];\n      if (type === \"(\" || type === \"[\") {\n        brackets.push(type === \"(\" ? \")\" : \"]\");\n      } else if (type === \"{\" && brackets.length > 0) {\n        brackets.push(\"}\");\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n      }\n      if (brackets.length === 0) {\n        if (type === \";\") {\n          node2.source.end = this.getPosition(token[2]);\n          node2.source.end.offset++;\n          this.semicolon = true;\n          break;\n        } else if (type === \"{\") {\n          open = true;\n          break;\n        } else if (type === \"}\") {\n          if (params.length > 0) {\n            shift = params.length - 1;\n            prev = params[shift];\n            while (prev && prev[0] === \"space\") {\n              prev = params[--shift];\n            }\n            if (prev) {\n              node2.source.end = this.getPosition(prev[3] || prev[2]);\n              node2.source.end.offset++;\n            }\n          }\n          this.end(token);\n          break;\n        } else {\n          params.push(token);\n        }\n      } else {\n        params.push(token);\n      }\n      if (this.tokenizer.endOfFile()) {\n        last = true;\n        break;\n      }\n    }\n    node2.raws.between = this.spacesAndCommentsFromEnd(params);\n    if (params.length) {\n      node2.raws.afterName = this.spacesAndCommentsFromStart(params);\n      this.raw(node2, \"params\", params);\n      if (last) {\n        token = params[params.length - 1];\n        node2.source.end = this.getPosition(token[3] || token[2]);\n        node2.source.end.offset++;\n        this.spaces = node2.raws.between;\n        node2.raws.between = \"\";\n      }\n    } else {\n      node2.raws.afterName = \"\";\n      node2.params = \"\";\n    }\n    if (open) {\n      node2.nodes = [];\n      this.current = node2;\n    }\n  }\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens);\n    if (colon === false) return;\n    let founded = 0;\n    let token;\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j];\n      if (token[0] !== \"space\") {\n        founded += 1;\n        if (founded === 2) break;\n      }\n    }\n    throw this.input.error(\n      \"Missed semicolon\",\n      token[0] === \"word\" ? token[3] + 1 : token[2]\n    );\n  }\n  colon(tokens) {\n    let brackets = 0;\n    let prev, token, type;\n    for (let [i, element] of tokens.entries()) {\n      token = element;\n      type = token[0];\n      if (type === \"(\") {\n        brackets += 1;\n      }\n      if (type === \")\") {\n        brackets -= 1;\n      }\n      if (brackets === 0 && type === \":\") {\n        if (!prev) {\n          this.doubleColon(token);\n        } else if (prev[0] === \"word\" && prev[1] === \"progid\") {\n          continue;\n        } else {\n          return i;\n        }\n      }\n      prev = token;\n    }\n    return false;\n  }\n  comment(token) {\n    let node2 = new Comment$1();\n    this.init(node2, token[2]);\n    node2.source.end = this.getPosition(token[3] || token[2]);\n    node2.source.end.offset++;\n    let text = token[1].slice(2, -2);\n    if (/^\\s*$/.test(text)) {\n      node2.text = \"\";\n      node2.raws.left = text;\n      node2.raws.right = \"\";\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n      node2.text = match[2];\n      node2.raws.left = match[1];\n      node2.raws.right = match[3];\n    }\n  }\n  createTokenizer() {\n    this.tokenizer = tokenizer2(this.input);\n  }\n  decl(tokens, customProperty) {\n    let node2 = new Declaration$1();\n    this.init(node2, tokens[0][2]);\n    let last = tokens[tokens.length - 1];\n    if (last[0] === \";\") {\n      this.semicolon = true;\n      tokens.pop();\n    }\n    node2.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    );\n    node2.source.end.offset++;\n    while (tokens[0][0] !== \"word\") {\n      if (tokens.length === 1) this.unknownWord(tokens);\n      node2.raws.before += tokens.shift()[1];\n    }\n    node2.source.start = this.getPosition(tokens[0][2]);\n    node2.prop = \"\";\n    while (tokens.length) {\n      let type = tokens[0][0];\n      if (type === \":\" || type === \"space\" || type === \"comment\") {\n        break;\n      }\n      node2.prop += tokens.shift()[1];\n    }\n    node2.raws.between = \"\";\n    let token;\n    while (tokens.length) {\n      token = tokens.shift();\n      if (token[0] === \":\") {\n        node2.raws.between += token[1];\n        break;\n      } else {\n        if (token[0] === \"word\" && /\\w/.test(token[1])) {\n          this.unknownWord([token]);\n        }\n        node2.raws.between += token[1];\n      }\n    }\n    if (node2.prop[0] === \"_\" || node2.prop[0] === \"*\") {\n      node2.raws.before += node2.prop[0];\n      node2.prop = node2.prop.slice(1);\n    }\n    let firstSpaces = [];\n    let next;\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== \"space\" && next !== \"comment\") break;\n      firstSpaces.push(tokens.shift());\n    }\n    this.precheckMissedSemicolon(tokens);\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token[1].toLowerCase() === \"!important\") {\n        node2.important = true;\n        let string = this.stringFrom(tokens, i);\n        string = this.spacesFromEnd(tokens) + string;\n        if (string !== \" !important\") node2.raws.important = string;\n        break;\n      } else if (token[1].toLowerCase() === \"important\") {\n        let cache = tokens.slice(0);\n        let str = \"\";\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0];\n          if (str.trim().startsWith(\"!\") && type !== \"space\") {\n            break;\n          }\n          str = cache.pop()[1] + str;\n        }\n        if (str.trim().startsWith(\"!\")) {\n          node2.important = true;\n          node2.raws.important = str;\n          tokens = cache;\n        }\n      }\n      if (token[0] !== \"space\" && token[0] !== \"comment\") {\n        break;\n      }\n    }\n    let hasWord = tokens.some((i) => i[0] !== \"space\" && i[0] !== \"comment\");\n    if (hasWord) {\n      node2.raws.between += firstSpaces.map((i) => i[1]).join(\"\");\n      firstSpaces = [];\n    }\n    this.raw(node2, \"value\", firstSpaces.concat(tokens), customProperty);\n    if (node2.value.includes(\":\") && !customProperty) {\n      this.checkMissedSemicolon(tokens);\n    }\n  }\n  doubleColon(token) {\n    throw this.input.error(\n      \"Double colon\",\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    );\n  }\n  emptyRule(token) {\n    let node2 = new Rule$1();\n    this.init(node2, token[2]);\n    node2.selector = \"\";\n    node2.raws.between = \"\";\n    this.current = node2;\n  }\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.semicolon = false;\n    this.current.raws.after = (this.current.raws.after || \"\") + this.spaces;\n    this.spaces = \"\";\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2]);\n      this.current.source.end.offset++;\n      this.current = this.current.parent;\n    } else {\n      this.unexpectedClose(token);\n    }\n  }\n  endFile() {\n    if (this.current.parent) this.unclosedBlock();\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.current.raws.after = (this.current.raws.after || \"\") + this.spaces;\n    this.root.source.end = this.getPosition(this.tokenizer.position());\n  }\n  freeSemicolon(token) {\n    this.spaces += token[1];\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1];\n      if (prev && prev.type === \"rule\" && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces;\n        this.spaces = \"\";\n      }\n    }\n  }\n  // Helpers\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset);\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    };\n  }\n  init(node2, offset) {\n    this.current.push(node2);\n    node2.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    };\n    node2.raws.before = this.spaces;\n    this.spaces = \"\";\n    if (node2.type !== \"comment\") this.semicolon = false;\n  }\n  other(start) {\n    let end = false;\n    let type = null;\n    let colon = false;\n    let bracket = null;\n    let brackets = [];\n    let customProperty = start[1].startsWith(\"--\");\n    let tokens = [];\n    let token = start;\n    while (token) {\n      type = token[0];\n      tokens.push(token);\n      if (type === \"(\" || type === \"[\") {\n        if (!bracket) bracket = token;\n        brackets.push(type === \"(\" ? \")\" : \"]\");\n      } else if (customProperty && colon && type === \"{\") {\n        if (!bracket) bracket = token;\n        brackets.push(\"}\");\n      } else if (brackets.length === 0) {\n        if (type === \";\") {\n          if (colon) {\n            this.decl(tokens, customProperty);\n            return;\n          } else {\n            break;\n          }\n        } else if (type === \"{\") {\n          this.rule(tokens);\n          return;\n        } else if (type === \"}\") {\n          this.tokenizer.back(tokens.pop());\n          end = true;\n          break;\n        } else if (type === \":\") {\n          colon = true;\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n        if (brackets.length === 0) bracket = null;\n      }\n      token = this.tokenizer.nextToken();\n    }\n    if (this.tokenizer.endOfFile()) end = true;\n    if (brackets.length > 0) this.unclosedBracket(bracket);\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0];\n          if (token !== \"space\" && token !== \"comment\") break;\n          this.tokenizer.back(tokens.pop());\n        }\n      }\n      this.decl(tokens, customProperty);\n    } else {\n      this.unknownWord(tokens);\n    }\n  }\n  parse() {\n    let token;\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n      switch (token[0]) {\n        case \"space\":\n          this.spaces += token[1];\n          break;\n        case \";\":\n          this.freeSemicolon(token);\n          break;\n        case \"}\":\n          this.end(token);\n          break;\n        case \"comment\":\n          this.comment(token);\n          break;\n        case \"at-word\":\n          this.atrule(token);\n          break;\n        case \"{\":\n          this.emptyRule(token);\n          break;\n        default:\n          this.other(token);\n          break;\n      }\n    }\n    this.endFile();\n  }\n  precheckMissedSemicolon() {\n  }\n  raw(node2, prop, tokens, customProperty) {\n    let token, type;\n    let length = tokens.length;\n    let value = \"\";\n    let clean = true;\n    let next, prev;\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i];\n      type = token[0];\n      if (type === \"space\" && i === length - 1 && !customProperty) {\n        clean = false;\n      } else if (type === \"comment\") {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : \"empty\";\n        next = tokens[i + 1] ? tokens[i + 1][0] : \"empty\";\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === \",\") {\n            clean = false;\n          } else {\n            value += token[1];\n          }\n        } else {\n          clean = false;\n        }\n      } else {\n        value += token[1];\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], \"\");\n      node2.raws[prop] = { raw, value };\n    }\n    node2[prop] = value;\n  }\n  rule(tokens) {\n    tokens.pop();\n    let node2 = new Rule$1();\n    this.init(node2, tokens[0][2]);\n    node2.raws.between = this.spacesAndCommentsFromEnd(tokens);\n    this.raw(node2, \"selector\", tokens);\n    this.current = node2;\n  }\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = \"\";\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== \"space\" && lastTokenType !== \"comment\") break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces;\n  }\n  // Errors\n  spacesAndCommentsFromStart(tokens) {\n    let next;\n    let spaces = \"\";\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== \"space\" && next !== \"comment\") break;\n      spaces += tokens.shift()[1];\n    }\n    return spaces;\n  }\n  spacesFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = \"\";\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== \"space\") break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces;\n  }\n  stringFrom(tokens, from) {\n    let result2 = \"\";\n    for (let i = from; i < tokens.length; i++) {\n      result2 += tokens[i][1];\n    }\n    tokens.splice(from, tokens.length - from);\n    return result2;\n  }\n  unclosedBlock() {\n    let pos = this.current.source.start;\n    throw this.input.error(\"Unclosed block\", pos.line, pos.column);\n  }\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      \"Unclosed bracket\",\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    );\n  }\n  unexpectedClose(token) {\n    throw this.input.error(\n      \"Unexpected }\",\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    );\n  }\n  unknownWord(tokens) {\n    throw this.input.error(\n      \"Unknown word\",\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    );\n  }\n  unnamedAtrule(node2, token) {\n    throw this.input.error(\n      \"At-rule without name\",\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    );\n  }\n};\nvar parser = Parser$1;\nlet Container$2 = container;\nlet Input$1 = input;\nlet Parser2 = parser;\nfunction parse$3(css, opts) {\n  let input2 = new Input$1(css, opts);\n  let parser2 = new Parser2(input2);\n  try {\n    parser2.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (e.name === \"CssSyntaxError\" && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse SCSS with the standard CSS parser; try again with the postcss-scss parser\";\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse Sass with the standard CSS parser; try again with the postcss-sass parser\";\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse Less with the standard CSS parser; try again with the postcss-less parser\";\n        }\n      }\n    }\n    throw e;\n  }\n  return parser2.root;\n}\nvar parse_1 = parse$3;\nparse$3.default = parse$3;\nContainer$2.registerParse(parse$3);\nlet Warning$2 = class Warning {\n  constructor(text, opts = {}) {\n    this.type = \"warning\";\n    this.text = text;\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts);\n      this.line = range.start.line;\n      this.column = range.start.column;\n      this.endLine = range.end.line;\n      this.endColumn = range.end.column;\n    }\n    for (let opt in opts) this[opt] = opts[opt];\n  }\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message;\n    }\n    if (this.plugin) {\n      return this.plugin + \": \" + this.text;\n    }\n    return this.text;\n  }\n};\nvar warning = Warning$2;\nWarning$2.default = Warning$2;\nlet Warning$1 = warning;\nlet Result$3 = class Result {\n  constructor(processor2, root2, opts) {\n    this.processor = processor2;\n    this.messages = [];\n    this.root = root2;\n    this.opts = opts;\n    this.css = void 0;\n    this.map = void 0;\n  }\n  toString() {\n    return this.css;\n  }\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n    let warning2 = new Warning$1(text, opts);\n    this.messages.push(warning2);\n    return warning2;\n  }\n  warnings() {\n    return this.messages.filter((i) => i.type === \"warning\");\n  }\n  get content() {\n    return this.css;\n  }\n};\nvar result = Result$3;\nResult$3.default = Result$3;\nlet printed = {};\nvar warnOnce$2 = function warnOnce(message) {\n  if (printed[message]) return;\n  printed[message] = true;\n  if (typeof console !== \"undefined\" && console.warn) {\n    console.warn(message);\n  }\n};\nlet Container$1 = container;\nlet Document$2 = document$1;\nlet MapGenerator$1 = mapGenerator;\nlet parse$2 = parse_1;\nlet Result$2 = result;\nlet Root$2 = root;\nlet stringify$2 = stringify_1;\nlet { isClean, my } = symbols;\nlet warnOnce$1 = warnOnce$2;\nconst TYPE_TO_CLASS_NAME = {\n  atrule: \"AtRule\",\n  comment: \"Comment\",\n  decl: \"Declaration\",\n  document: \"Document\",\n  root: \"Root\",\n  rule: \"Rule\"\n};\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n};\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n};\nconst CHILDREN = 0;\nfunction isPromise(obj) {\n  return typeof obj === \"object\" && typeof obj.then === \"function\";\n}\nfunction getEvents(node2) {\n  let key = false;\n  let type = TYPE_TO_CLASS_NAME[node2.type];\n  if (node2.type === \"decl\") {\n    key = node2.prop.toLowerCase();\n  } else if (node2.type === \"atrule\") {\n    key = node2.name.toLowerCase();\n  }\n  if (key && node2.append) {\n    return [\n      type,\n      type + \"-\" + key,\n      CHILDREN,\n      type + \"Exit\",\n      type + \"Exit-\" + key\n    ];\n  } else if (key) {\n    return [type, type + \"-\" + key, type + \"Exit\", type + \"Exit-\" + key];\n  } else if (node2.append) {\n    return [type, CHILDREN, type + \"Exit\"];\n  } else {\n    return [type, type + \"Exit\"];\n  }\n}\nfunction toStack(node2) {\n  let events;\n  if (node2.type === \"document\") {\n    events = [\"Document\", CHILDREN, \"DocumentExit\"];\n  } else if (node2.type === \"root\") {\n    events = [\"Root\", CHILDREN, \"RootExit\"];\n  } else {\n    events = getEvents(node2);\n  }\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node: node2,\n    visitorIndex: 0,\n    visitors: []\n  };\n}\nfunction cleanMarks(node2) {\n  node2[isClean] = false;\n  if (node2.nodes) node2.nodes.forEach((i) => cleanMarks(i));\n  return node2;\n}\nlet postcss$2 = {};\nlet LazyResult$2 = class LazyResult {\n  constructor(processor2, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n    let root2;\n    if (typeof css === \"object\" && css !== null && (css.type === \"root\" || css.type === \"document\")) {\n      root2 = cleanMarks(css);\n    } else if (css instanceof LazyResult || css instanceof Result$2) {\n      root2 = cleanMarks(css.root);\n      if (css.map) {\n        if (typeof opts.map === \"undefined\") opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      let parser2 = parse$2;\n      if (opts.syntax) parser2 = opts.syntax.parse;\n      if (opts.parser) parser2 = opts.parser;\n      if (parser2.parse) parser2 = parser2.parse;\n      try {\n        root2 = parser2(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n      if (root2 && !root2[my]) {\n        Container$1.rebuild(root2);\n      }\n    }\n    this.result = new Result$2(processor2, root2, opts);\n    this.helpers = { ...postcss$2, postcss: postcss$2, result: this.result };\n    this.plugins = this.processor.plugins.map((plugin2) => {\n      if (typeof plugin2 === \"object\" && plugin2.prepare) {\n        return { ...plugin2, ...plugin2.prepare(this.result) };\n      } else {\n        return plugin2;\n      }\n    });\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    if (this.processed) return Promise.resolve(this.result);\n    if (!this.processing) {\n      this.processing = this.runAsync();\n    }\n    return this.processing;\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  getAsyncError() {\n    throw new Error(\"Use process(css).then(cb) to work with async plugins\");\n  }\n  handleError(error, node2) {\n    let plugin2 = this.result.lastPlugin;\n    try {\n      if (node2) node2.addToError(error);\n      this.error = error;\n      if (error.name === \"CssSyntaxError\" && !error.plugin) {\n        error.plugin = plugin2.postcssPlugin;\n        error.setMessage();\n      } else if (plugin2.postcssVersion) {\n        if (process.env.NODE_ENV !== \"production\") {\n          let pluginName = plugin2.postcssPlugin;\n          let pluginVer = plugin2.postcssVersion;\n          let runtimeVer = this.result.processor.version;\n          let a = pluginVer.split(\".\");\n          let b = runtimeVer.split(\".\");\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error(\n              \"Unknown error from PostCSS plugin. Your current PostCSS version is \" + runtimeVer + \", but \" + pluginName + \" uses \" + pluginVer + \". Perhaps this is the source of the error below.\"\n            );\n          }\n        }\n      }\n    } catch (err) {\n      if (console && console.error) console.error(err);\n    }\n    return error;\n  }\n  prepareVisitors() {\n    this.listeners = {};\n    let add = (plugin2, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = [];\n      this.listeners[type].push([plugin2, cb]);\n    };\n    for (let plugin2 of this.plugins) {\n      if (typeof plugin2 === \"object\") {\n        for (let event in plugin2) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin2.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`\n            );\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin2[event] === \"object\") {\n              for (let filter in plugin2[event]) {\n                if (filter === \"*\") {\n                  add(plugin2, event, plugin2[event][filter]);\n                } else {\n                  add(\n                    plugin2,\n                    event + \"-\" + filter.toLowerCase(),\n                    plugin2[event][filter]\n                  );\n                }\n              }\n            } else if (typeof plugin2[event] === \"function\") {\n              add(plugin2, event, plugin2[event]);\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0;\n  }\n  async runAsync() {\n    this.plugin = 0;\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin2 = this.plugins[i];\n      let promise = this.runOnRoot(plugin2);\n      if (isPromise(promise)) {\n        try {\n          await promise;\n        } catch (error) {\n          throw this.handleError(error);\n        }\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root2 = this.result.root;\n      while (!root2[isClean]) {\n        root2[isClean] = true;\n        let stack = [toStack(root2)];\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack);\n          if (isPromise(promise)) {\n            try {\n              await promise;\n            } catch (e) {\n              let node2 = stack[stack.length - 1].node;\n              throw this.handleError(e, node2);\n            }\n          }\n        }\n      }\n      if (this.listeners.OnceExit) {\n        for (let [plugin2, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin2;\n          try {\n            if (root2.type === \"document\") {\n              let roots = root2.nodes.map(\n                (subRoot) => visitor(subRoot, this.helpers)\n              );\n              await Promise.all(roots);\n            } else {\n              await visitor(root2, this.helpers);\n            }\n          } catch (e) {\n            throw this.handleError(e);\n          }\n        }\n      }\n    }\n    this.processed = true;\n    return this.stringify();\n  }\n  runOnRoot(plugin2) {\n    this.result.lastPlugin = plugin2;\n    try {\n      if (typeof plugin2 === \"object\" && plugin2.Once) {\n        if (this.result.root.type === \"document\") {\n          let roots = this.result.root.nodes.map(\n            (root2) => plugin2.Once(root2, this.helpers)\n          );\n          if (isPromise(roots[0])) {\n            return Promise.all(roots);\n          }\n          return roots;\n        }\n        return plugin2.Once(this.result.root, this.helpers);\n      } else if (typeof plugin2 === \"function\") {\n        return plugin2(this.result.root, this.result);\n      }\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  stringify() {\n    if (this.error) throw this.error;\n    if (this.stringified) return this.result;\n    this.stringified = true;\n    this.sync();\n    let opts = this.result.opts;\n    let str = stringify$2;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n    let map = new MapGenerator$1(str, this.result.root, this.result.opts);\n    let data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n    return this.result;\n  }\n  sync() {\n    if (this.error) throw this.error;\n    if (this.processed) return this.result;\n    this.processed = true;\n    if (this.processing) {\n      throw this.getAsyncError();\n    }\n    for (let plugin2 of this.plugins) {\n      let promise = this.runOnRoot(plugin2);\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root2 = this.result.root;\n      while (!root2[isClean]) {\n        root2[isClean] = true;\n        this.walkSync(root2);\n      }\n      if (this.listeners.OnceExit) {\n        if (root2.type === \"document\") {\n          for (let subRoot of root2.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot);\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root2);\n        }\n      }\n    }\n    return this.result;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!(\"from\" in this.opts)) {\n        warnOnce$1(\n          \"Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning.\"\n        );\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  toString() {\n    return this.css;\n  }\n  visitSync(visitors, node2) {\n    for (let [plugin2, visitor] of visitors) {\n      this.result.lastPlugin = plugin2;\n      let promise;\n      try {\n        promise = visitor(node2, this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node2.proxyOf);\n      }\n      if (node2.type !== \"root\" && node2.type !== \"document\" && !node2.parent) {\n        return true;\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n  }\n  visitTick(stack) {\n    let visit2 = stack[stack.length - 1];\n    let { node: node2, visitors } = visit2;\n    if (node2.type !== \"root\" && node2.type !== \"document\" && !node2.parent) {\n      stack.pop();\n      return;\n    }\n    if (visitors.length > 0 && visit2.visitorIndex < visitors.length) {\n      let [plugin2, visitor] = visitors[visit2.visitorIndex];\n      visit2.visitorIndex += 1;\n      if (visit2.visitorIndex === visitors.length) {\n        visit2.visitors = [];\n        visit2.visitorIndex = 0;\n      }\n      this.result.lastPlugin = plugin2;\n      try {\n        return visitor(node2.toProxy(), this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node2);\n      }\n    }\n    if (visit2.iterator !== 0) {\n      let iterator = visit2.iterator;\n      let child;\n      while (child = node2.nodes[node2.indexes[iterator]]) {\n        node2.indexes[iterator] += 1;\n        if (!child[isClean]) {\n          child[isClean] = true;\n          stack.push(toStack(child));\n          return;\n        }\n      }\n      visit2.iterator = 0;\n      delete node2.indexes[iterator];\n    }\n    let events = visit2.events;\n    while (visit2.eventIndex < events.length) {\n      let event = events[visit2.eventIndex];\n      visit2.eventIndex += 1;\n      if (event === CHILDREN) {\n        if (node2.nodes && node2.nodes.length) {\n          node2[isClean] = true;\n          visit2.iterator = node2.getIterator();\n        }\n        return;\n      } else if (this.listeners[event]) {\n        visit2.visitors = this.listeners[event];\n        return;\n      }\n    }\n    stack.pop();\n  }\n  walkSync(node2) {\n    node2[isClean] = true;\n    let events = getEvents(node2);\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node2.nodes) {\n          node2.each((child) => {\n            if (!child[isClean]) this.walkSync(child);\n          });\n        }\n      } else {\n        let visitors = this.listeners[event];\n        if (visitors) {\n          if (this.visitSync(visitors, node2.toProxy())) return;\n        }\n      }\n    }\n  }\n  warnings() {\n    return this.sync().warnings();\n  }\n  get content() {\n    return this.stringify().content;\n  }\n  get css() {\n    return this.stringify().css;\n  }\n  get map() {\n    return this.stringify().map;\n  }\n  get messages() {\n    return this.sync().messages;\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get root() {\n    return this.sync().root;\n  }\n  get [Symbol.toStringTag]() {\n    return \"LazyResult\";\n  }\n};\nLazyResult$2.registerPostcss = (dependant) => {\n  postcss$2 = dependant;\n};\nvar lazyResult = LazyResult$2;\nLazyResult$2.default = LazyResult$2;\nRoot$2.registerLazyResult(LazyResult$2);\nDocument$2.registerLazyResult(LazyResult$2);\nlet MapGenerator2 = mapGenerator;\nlet parse$1 = parse_1;\nconst Result$1 = result;\nlet stringify$1 = stringify_1;\nlet warnOnce2 = warnOnce$2;\nlet NoWorkResult$1 = class NoWorkResult {\n  constructor(processor2, css, opts) {\n    css = css.toString();\n    this.stringified = false;\n    this._processor = processor2;\n    this._css = css;\n    this._opts = opts;\n    this._map = void 0;\n    let root2;\n    let str = stringify$1;\n    this.result = new Result$1(this._processor, root2, this._opts);\n    this.result.css = css;\n    let self = this;\n    Object.defineProperty(this.result, \"root\", {\n      get() {\n        return self.root;\n      }\n    });\n    let map = new MapGenerator2(str, root2, this._opts, css);\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate();\n      if (generatedCSS) {\n        this.result.css = generatedCSS;\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap;\n      }\n    } else {\n      map.clearAnnotation();\n      this.result.css = map.css;\n    }\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    return Promise.resolve(this.result);\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  sync() {\n    if (this.error) throw this.error;\n    return this.result;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!(\"from\" in this._opts)) {\n        warnOnce2(\n          \"Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning.\"\n        );\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  toString() {\n    return this._css;\n  }\n  warnings() {\n    return [];\n  }\n  get content() {\n    return this.result.css;\n  }\n  get css() {\n    return this.result.css;\n  }\n  get map() {\n    return this.result.map;\n  }\n  get messages() {\n    return [];\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get root() {\n    if (this._root) {\n      return this._root;\n    }\n    let root2;\n    let parser2 = parse$1;\n    try {\n      root2 = parser2(this._css, this._opts);\n    } catch (error) {\n      this.error = error;\n    }\n    if (this.error) {\n      throw this.error;\n    } else {\n      this._root = root2;\n      return root2;\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"NoWorkResult\";\n  }\n};\nvar noWorkResult = NoWorkResult$1;\nNoWorkResult$1.default = NoWorkResult$1;\nlet Document$1 = document$1;\nlet LazyResult$1 = lazyResult;\nlet NoWorkResult2 = noWorkResult;\nlet Root$1 = root;\nlet Processor$1 = class Processor {\n  constructor(plugins = []) {\n    this.version = \"8.4.49\";\n    this.plugins = this.normalize(plugins);\n  }\n  normalize(plugins) {\n    let normalized = [];\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i();\n      } else if (i.postcss) {\n        i = i.postcss;\n      }\n      if (typeof i === \"object\" && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === \"object\" && i.postcssPlugin) {\n        normalized.push(i);\n      } else if (typeof i === \"function\") {\n        normalized.push(i);\n      } else if (typeof i === \"object\" && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== \"production\") {\n          throw new Error(\n            \"PostCSS syntaxes cannot be used as plugins. Instead, please use one of the syntax/parser/stringifier options as outlined in your PostCSS runner documentation.\"\n          );\n        }\n      } else {\n        throw new Error(i + \" is not a PostCSS plugin\");\n      }\n    }\n    return normalized;\n  }\n  process(css, opts = {}) {\n    if (!this.plugins.length && !opts.parser && !opts.stringifier && !opts.syntax) {\n      return new NoWorkResult2(this, css, opts);\n    } else {\n      return new LazyResult$1(this, css, opts);\n    }\n  }\n  use(plugin2) {\n    this.plugins = this.plugins.concat(this.normalize([plugin2]));\n    return this;\n  }\n};\nvar processor = Processor$1;\nProcessor$1.default = Processor$1;\nRoot$1.registerProcessor(Processor$1);\nDocument$1.registerProcessor(Processor$1);\nlet AtRule2 = atRule;\nlet Comment2 = comment;\nlet Container2 = container;\nlet CssSyntaxError2 = cssSyntaxError;\nlet Declaration2 = declaration;\nlet Document22 = document$1;\nlet fromJSON = fromJSON_1;\nlet Input2 = input;\nlet LazyResult2 = lazyResult;\nlet list = list_1;\nlet Node$1 = node;\nlet parse = parse_1;\nlet Processor2 = processor;\nlet Result2 = result;\nlet Root2 = root;\nlet Rule2 = rule;\nlet stringify = stringify_1;\nlet Warning2 = warning;\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0];\n  }\n  return new Processor2(plugins);\n}\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false;\n  function creator(...args) {\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true;\n      console.warn(\n        name + \": postcss.plugin was deprecated. Migration guide:\\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration\"\n      );\n      if (process.env.LANG && process.env.LANG.startsWith(\"cn\")) {\n        console.warn(\n          name + \": 里面 postcss.plugin 被弃用. 迁移指南:\\nhttps://www.w3ctech.com/topic/2226\"\n        );\n      }\n    }\n    let transformer = initializer(...args);\n    transformer.postcssPlugin = name;\n    transformer.postcssVersion = new Processor2().version;\n    return transformer;\n  }\n  let cache;\n  Object.defineProperty(creator, \"postcss\", {\n    get() {\n      if (!cache) cache = creator();\n      return cache;\n    }\n  });\n  creator.process = function(css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts);\n  };\n  return creator;\n};\npostcss.stringify = stringify;\npostcss.parse = parse;\npostcss.fromJSON = fromJSON;\npostcss.list = list;\npostcss.comment = (defaults) => new Comment2(defaults);\npostcss.atRule = (defaults) => new AtRule2(defaults);\npostcss.decl = (defaults) => new Declaration2(defaults);\npostcss.rule = (defaults) => new Rule2(defaults);\npostcss.root = (defaults) => new Root2(defaults);\npostcss.document = (defaults) => new Document22(defaults);\npostcss.CssSyntaxError = CssSyntaxError2;\npostcss.Declaration = Declaration2;\npostcss.Container = Container2;\npostcss.Processor = Processor2;\npostcss.Document = Document22;\npostcss.Comment = Comment2;\npostcss.Warning = Warning2;\npostcss.AtRule = AtRule2;\npostcss.Result = Result2;\npostcss.Input = Input2;\npostcss.Rule = Rule2;\npostcss.Root = Root2;\npostcss.Node = Node$1;\nLazyResult2.registerPostcss(postcss);\nvar postcss_1 = postcss;\npostcss.default = postcss;\nconst postcss$1 = /* @__PURE__ */ getDefaultExportFromCjs(postcss_1);\npostcss$1.stringify;\npostcss$1.fromJSON;\npostcss$1.plugin;\npostcss$1.parse;\npostcss$1.list;\npostcss$1.document;\npostcss$1.comment;\npostcss$1.atRule;\npostcss$1.rule;\npostcss$1.decl;\npostcss$1.root;\npostcss$1.CssSyntaxError;\npostcss$1.Declaration;\npostcss$1.Container;\npostcss$1.Processor;\npostcss$1.Document;\npostcss$1.Comment;\npostcss$1.Warning;\npostcss$1.AtRule;\npostcss$1.Result;\npostcss$1.Input;\npostcss$1.Rule;\npostcss$1.Root;\npostcss$1.Node;\nvar NodeType$1 = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType$1 || {});\nfunction parseCSSText(cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g;\n  const propertyDelimiter = /:(.+)/;\n  const comment2 = /\\/\\*.*?\\*\\//g;\n  cssText.replace(comment2, \"\").split(listDelimiter).forEach(function(item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[camelize(tmp[0].trim())] = tmp[1].trim());\n    }\n  });\n  return res;\n}\nfunction toCSSText(style) {\n  const properties = [];\n  for (const name in style) {\n    const value = style[name];\n    if (typeof value !== \"string\") continue;\n    const normalizedName = hyphenate(name);\n    properties.push(`${normalizedName}: ${value};`);\n  }\n  return properties.join(\" \");\n}\nconst camelizeRE = /-([a-z])/g;\nconst CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nconst camelize = (str) => {\n  if (CUSTOM_PROPERTY_REGEX.test(str)) return str;\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n};\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = (str) => {\n  return str.replace(hyphenateRE, \"-$1\").toLowerCase();\n};\nclass BaseRRNode {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n  constructor(..._args) {\n    __publicField(this, \"parentElement\", null);\n    __publicField(this, \"parentNode\", null);\n    __publicField(this, \"ownerDocument\");\n    __publicField(this, \"firstChild\", null);\n    __publicField(this, \"lastChild\", null);\n    __publicField(this, \"previousSibling\", null);\n    __publicField(this, \"nextSibling\", null);\n    __publicField(this, \"ELEMENT_NODE\", 1);\n    __publicField(this, \"TEXT_NODE\", 3);\n    // corresponding nodeType value of standard HTML Node\n    __publicField(this, \"nodeType\");\n    __publicField(this, \"nodeName\");\n    __publicField(this, \"RRNodeType\");\n  }\n  get childNodes() {\n    const childNodes = [];\n    let childIterator = this.firstChild;\n    while (childIterator) {\n      childNodes.push(childIterator);\n      childIterator = childIterator.nextSibling;\n    }\n    return childNodes;\n  }\n  contains(node2) {\n    if (!(node2 instanceof BaseRRNode)) return false;\n    else if (node2.ownerDocument !== this.ownerDocument) return false;\n    else if (node2 === this) return true;\n    while (node2.parentNode) {\n      if (node2.parentNode === this) return true;\n      node2 = node2.parentNode;\n    }\n    return false;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  appendChild(_newChild) {\n    throw new Error(\n      `RRDomException: Failed to execute 'appendChild' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  insertBefore(_newChild, _refChild) {\n    throw new Error(\n      `RRDomException: Failed to execute 'insertBefore' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removeChild(_node) {\n    throw new Error(\n      `RRDomException: Failed to execute 'removeChild' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  toString() {\n    return \"RRNode\";\n  }\n}\nclass BaseRRDocument extends BaseRRNode {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(...args) {\n    super(args);\n    __publicField(this, \"nodeType\", 9);\n    __publicField(this, \"nodeName\", \"#document\");\n    __publicField(this, \"compatMode\", \"CSS1Compat\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Document);\n    __publicField(this, \"textContent\", null);\n    this.ownerDocument = this;\n  }\n  get documentElement() {\n    return this.childNodes.find(\n      (node2) => node2.RRNodeType === NodeType$1.Element && node2.tagName === \"HTML\"\n    ) || null;\n  }\n  get body() {\n    var _a;\n    return ((_a = this.documentElement) == null ? void 0 : _a.childNodes.find(\n      (node2) => node2.RRNodeType === NodeType$1.Element && node2.tagName === \"BODY\"\n    )) || null;\n  }\n  get head() {\n    var _a;\n    return ((_a = this.documentElement) == null ? void 0 : _a.childNodes.find(\n      (node2) => node2.RRNodeType === NodeType$1.Element && node2.tagName === \"HEAD\"\n    )) || null;\n  }\n  get implementation() {\n    return this;\n  }\n  get firstElementChild() {\n    return this.documentElement;\n  }\n  appendChild(newChild) {\n    const nodeType = newChild.RRNodeType;\n    if (nodeType === NodeType$1.Element || nodeType === NodeType$1.DocumentType) {\n      if (this.childNodes.some((s) => s.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'appendChild' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? \"RRElement\" : \"RRDoctype\"} on RRDocument allowed.`\n        );\n      }\n    }\n    const child = appendChild(this, newChild);\n    child.parentElement = null;\n    return child;\n  }\n  insertBefore(newChild, refChild) {\n    const nodeType = newChild.RRNodeType;\n    if (nodeType === NodeType$1.Element || nodeType === NodeType$1.DocumentType) {\n      if (this.childNodes.some((s) => s.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'insertBefore' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? \"RRElement\" : \"RRDoctype\"} on RRDocument allowed.`\n        );\n      }\n    }\n    const child = insertBefore(this, newChild, refChild);\n    child.parentElement = null;\n    return child;\n  }\n  removeChild(node2) {\n    return removeChild(this, node2);\n  }\n  open() {\n    this.firstChild = null;\n    this.lastChild = null;\n  }\n  close() {\n  }\n  /**\n   * Adhoc implementation for setting xhtml namespace in rebuilt.ts (rrweb-snapshot).\n   * There are two lines used this function:\n   * 1. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\"\\>')\n   * 2. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\"\\>')\n   */\n  write(content) {\n    let publicId;\n    if (content === '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">')\n      publicId = \"-//W3C//DTD XHTML 1.0 Transitional//EN\";\n    else if (content === '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">')\n      publicId = \"-//W3C//DTD HTML 4.0 Transitional//EN\";\n    if (publicId) {\n      const doctype = this.createDocumentType(\"html\", publicId, \"\");\n      this.open();\n      this.appendChild(doctype);\n    }\n  }\n  createDocument(_namespace, _qualifiedName, _doctype) {\n    return new BaseRRDocument();\n  }\n  createDocumentType(qualifiedName, publicId, systemId) {\n    const doctype = new BaseRRDocumentType(qualifiedName, publicId, systemId);\n    doctype.ownerDocument = this;\n    return doctype;\n  }\n  createElement(tagName) {\n    const element = new BaseRRElement(tagName);\n    element.ownerDocument = this;\n    return element;\n  }\n  createElementNS(_namespaceURI, qualifiedName) {\n    return this.createElement(qualifiedName);\n  }\n  createTextNode(data) {\n    const text = new BaseRRText(data);\n    text.ownerDocument = this;\n    return text;\n  }\n  createComment(data) {\n    const comment2 = new BaseRRComment(data);\n    comment2.ownerDocument = this;\n    return comment2;\n  }\n  createCDATASection(data) {\n    const CDATASection = new BaseRRCDATASection(data);\n    CDATASection.ownerDocument = this;\n    return CDATASection;\n  }\n  toString() {\n    return \"RRDocument\";\n  }\n}\nclass BaseRRDocumentType extends BaseRRNode {\n  constructor(qualifiedName, publicId, systemId) {\n    super();\n    __publicField(this, \"nodeType\", 10);\n    __publicField(this, \"RRNodeType\", NodeType$1.DocumentType);\n    __publicField(this, \"name\");\n    __publicField(this, \"publicId\");\n    __publicField(this, \"systemId\");\n    __publicField(this, \"textContent\", null);\n    this.name = qualifiedName;\n    this.publicId = publicId;\n    this.systemId = systemId;\n    this.nodeName = qualifiedName;\n  }\n  toString() {\n    return \"RRDocumentType\";\n  }\n}\nclass BaseRRElement extends BaseRRNode {\n  constructor(tagName) {\n    super();\n    __publicField(this, \"nodeType\", 1);\n    __publicField(this, \"RRNodeType\", NodeType$1.Element);\n    __publicField(this, \"tagName\");\n    __publicField(this, \"attributes\", {});\n    __publicField(this, \"shadowRoot\", null);\n    __publicField(this, \"scrollLeft\");\n    __publicField(this, \"scrollTop\");\n    this.tagName = tagName.toUpperCase();\n    this.nodeName = tagName.toUpperCase();\n  }\n  get textContent() {\n    let result2 = \"\";\n    this.childNodes.forEach((node2) => result2 += node2.textContent);\n    return result2;\n  }\n  set textContent(textContent) {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.appendChild(this.ownerDocument.createTextNode(textContent));\n  }\n  get classList() {\n    return new ClassList(\n      this.attributes.class,\n      (newClassName) => {\n        this.attributes.class = newClassName;\n      }\n    );\n  }\n  get id() {\n    return this.attributes.id || \"\";\n  }\n  get className() {\n    return this.attributes.class || \"\";\n  }\n  get style() {\n    const style = this.attributes.style ? parseCSSText(this.attributes.style) : {};\n    const hyphenateRE2 = /\\B([A-Z])/g;\n    style.setProperty = (name, value, priority) => {\n      if (hyphenateRE2.test(name)) return;\n      const normalizedName = camelize(name);\n      if (!value) delete style[normalizedName];\n      else style[normalizedName] = value;\n      if (priority === \"important\") style[normalizedName] += \" !important\";\n      this.attributes.style = toCSSText(style);\n    };\n    style.removeProperty = (name) => {\n      if (hyphenateRE2.test(name)) return \"\";\n      const normalizedName = camelize(name);\n      const value = style[normalizedName] || \"\";\n      delete style[normalizedName];\n      this.attributes.style = toCSSText(style);\n      return value;\n    };\n    return style;\n  }\n  getAttribute(name) {\n    if (this.attributes[name] === void 0) return null;\n    return this.attributes[name];\n  }\n  setAttribute(name, attribute) {\n    this.attributes[name] = attribute;\n  }\n  setAttributeNS(_namespace, qualifiedName, value) {\n    this.setAttribute(qualifiedName, value);\n  }\n  removeAttribute(name) {\n    delete this.attributes[name];\n  }\n  appendChild(newChild) {\n    return appendChild(this, newChild);\n  }\n  insertBefore(newChild, refChild) {\n    return insertBefore(this, newChild, refChild);\n  }\n  removeChild(node2) {\n    return removeChild(this, node2);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init) {\n    const shadowRoot = this.ownerDocument.createElement(\"SHADOWROOT\");\n    this.shadowRoot = shadowRoot;\n    return shadowRoot;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  dispatchEvent(_event) {\n    return true;\n  }\n  toString() {\n    let attributeString = \"\";\n    for (const attribute in this.attributes) {\n      attributeString += `${attribute}=\"${this.attributes[attribute]}\" `;\n    }\n    return `${this.tagName} ${attributeString}`;\n  }\n}\nclass BaseRRMediaElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"currentTime\");\n    __publicField(this, \"volume\");\n    __publicField(this, \"paused\");\n    __publicField(this, \"muted\");\n    __publicField(this, \"playbackRate\");\n    __publicField(this, \"loop\");\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init) {\n    throw new Error(\n      `RRDomException: Failed to execute 'attachShadow' on 'RRElement': This RRElement does not support attachShadow`\n    );\n  }\n  play() {\n    this.paused = false;\n  }\n  pause() {\n    this.paused = true;\n  }\n}\nclass BaseRRDialogElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"tagName\", \"DIALOG\");\n    __publicField(this, \"nodeName\", \"DIALOG\");\n  }\n  get isModal() {\n    return this.getAttribute(\"rr_open_mode\") === \"modal\";\n  }\n  get open() {\n    return this.getAttribute(\"open\") !== null;\n  }\n  close() {\n    this.removeAttribute(\"open\");\n    this.removeAttribute(\"rr_open_mode\");\n  }\n  show() {\n    this.setAttribute(\"open\", \"\");\n    this.setAttribute(\"rr_open_mode\", \"non-modal\");\n  }\n  showModal() {\n    this.setAttribute(\"open\", \"\");\n    this.setAttribute(\"rr_open_mode\", \"modal\");\n  }\n}\nclass BaseRRText extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeType\", 3);\n    __publicField(this, \"nodeName\", \"#text\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Text);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRText text=${JSON.stringify(this.data)}`;\n  }\n}\nclass BaseRRComment extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeType\", 8);\n    __publicField(this, \"nodeName\", \"#comment\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Comment);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRComment text=${JSON.stringify(this.data)}`;\n  }\n}\nclass BaseRRCDATASection extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeName\", \"#cdata-section\");\n    __publicField(this, \"nodeType\", 4);\n    __publicField(this, \"RRNodeType\", NodeType$1.CDATA);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRCDATASection data=${JSON.stringify(this.data)}`;\n  }\n}\nclass ClassList {\n  constructor(classText, onChange) {\n    __publicField(this, \"onChange\");\n    __publicField(this, \"classes\", []);\n    __publicField(this, \"add\", (...classNames) => {\n      for (const item of classNames) {\n        const className = String(item);\n        if (this.classes.indexOf(className) >= 0) continue;\n        this.classes.push(className);\n      }\n      this.onChange && this.onChange(this.classes.join(\" \"));\n    });\n    __publicField(this, \"remove\", (...classNames) => {\n      this.classes = this.classes.filter(\n        (item) => classNames.indexOf(item) === -1\n      );\n      this.onChange && this.onChange(this.classes.join(\" \"));\n    });\n    if (classText) {\n      const classes = classText.trim().split(/\\s+/);\n      this.classes.push(...classes);\n    }\n    this.onChange = onChange;\n  }\n}\nfunction appendChild(parent, newChild) {\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n  if (parent.lastChild) {\n    parent.lastChild.nextSibling = newChild;\n    newChild.previousSibling = parent.lastChild;\n  } else {\n    parent.firstChild = newChild;\n    newChild.previousSibling = null;\n  }\n  parent.lastChild = newChild;\n  newChild.nextSibling = null;\n  newChild.parentNode = parent;\n  newChild.parentElement = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\nfunction insertBefore(parent, newChild, refChild) {\n  if (!refChild) return appendChild(parent, newChild);\n  if (refChild.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'insertBefore' on 'RRNode': The RRNode before which the new node is to be inserted is not a child of this RRNode.\"\n    );\n  if (newChild === refChild) return newChild;\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n  newChild.previousSibling = refChild.previousSibling;\n  refChild.previousSibling = newChild;\n  newChild.nextSibling = refChild;\n  if (newChild.previousSibling) newChild.previousSibling.nextSibling = newChild;\n  else parent.firstChild = newChild;\n  newChild.parentElement = parent;\n  newChild.parentNode = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\nfunction removeChild(parent, child) {\n  if (child.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'removeChild' on 'RRNode': The RRNode to be removed is not a child of this RRNode.\"\n    );\n  if (child.previousSibling)\n    child.previousSibling.nextSibling = child.nextSibling;\n  else parent.firstChild = child.nextSibling;\n  if (child.nextSibling)\n    child.nextSibling.previousSibling = child.previousSibling;\n  else parent.lastChild = child.previousSibling;\n  child.previousSibling = null;\n  child.nextSibling = null;\n  child.parentElement = null;\n  child.parentNode = null;\n  return child;\n}\nvar NodeType = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"PLACEHOLDER\"] = 0] = \"PLACEHOLDER\";\n  NodeType2[NodeType2[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n  NodeType2[NodeType2[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n  NodeType2[NodeType2[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n  NodeType2[NodeType2[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n  NodeType2[NodeType2[\"ENTITY_REFERENCE_NODE\"] = 5] = \"ENTITY_REFERENCE_NODE\";\n  NodeType2[NodeType2[\"ENTITY_NODE\"] = 6] = \"ENTITY_NODE\";\n  NodeType2[NodeType2[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n  NodeType2[NodeType2[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n  return NodeType2;\n})(NodeType || {});\nconst NAMESPACES = {\n  svg: \"http://www.w3.org/2000/svg\",\n  \"xlink:href\": \"http://www.w3.org/1999/xlink\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\nconst SVGTagMap = {\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  clippath: \"clipPath\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  foreignobject: \"foreignObject\",\n  glyphref: \"glyphRef\",\n  lineargradient: \"linearGradient\",\n  radialgradient: \"radialGradient\"\n};\nlet createdNodeSet = null;\nfunction diff(oldTree, newTree, replayer, rrnodeMirror = newTree.mirror || newTree.ownerDocument.mirror) {\n  oldTree = diffBeforeUpdatingChildren(\n    oldTree,\n    newTree,\n    replayer,\n    rrnodeMirror\n  );\n  diffChildren(oldTree, newTree, replayer, rrnodeMirror);\n  diffAfterUpdatingChildren(oldTree, newTree, replayer);\n}\nfunction diffBeforeUpdatingChildren(oldTree, newTree, replayer, rrnodeMirror) {\n  var _a;\n  if (replayer.afterAppend && !createdNodeSet) {\n    createdNodeSet = /* @__PURE__ */ new WeakSet();\n    setTimeout(() => {\n      createdNodeSet = null;\n    }, 0);\n  }\n  if (!sameNodeType(oldTree, newTree)) {\n    const calibratedOldTree = createOrGetNode(\n      newTree,\n      replayer.mirror,\n      rrnodeMirror\n    );\n    (_a = oldTree.parentNode) == null ? void 0 : _a.replaceChild(calibratedOldTree, oldTree);\n    oldTree = calibratedOldTree;\n  }\n  switch (newTree.RRNodeType) {\n    case NodeType$1.Document: {\n      if (!nodeMatching(oldTree, newTree, replayer.mirror, rrnodeMirror)) {\n        const newMeta = rrnodeMirror.getMeta(newTree);\n        if (newMeta) {\n          replayer.mirror.removeNodeFromMap(oldTree);\n          oldTree.close();\n          oldTree.open();\n          replayer.mirror.add(oldTree, newMeta);\n          createdNodeSet == null ? void 0 : createdNodeSet.add(oldTree);\n        }\n      }\n      break;\n    }\n    case NodeType$1.Element: {\n      const oldElement = oldTree;\n      const newRRElement = newTree;\n      switch (newRRElement.tagName) {\n        case \"IFRAME\": {\n          const oldContentDocument = oldTree.contentDocument;\n          if (!oldContentDocument) break;\n          diff(\n            oldContentDocument,\n            newTree.contentDocument,\n            replayer,\n            rrnodeMirror\n          );\n          break;\n        }\n      }\n      if (newRRElement.shadowRoot) {\n        if (!oldElement.shadowRoot) oldElement.attachShadow({ mode: \"open\" });\n        diffChildren(\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          oldElement.shadowRoot,\n          newRRElement.shadowRoot,\n          replayer,\n          rrnodeMirror\n        );\n      }\n      diffProps(oldElement, newRRElement, rrnodeMirror);\n      break;\n    }\n  }\n  return oldTree;\n}\nfunction diffAfterUpdatingChildren(oldTree, newTree, replayer) {\n  var _a;\n  switch (newTree.RRNodeType) {\n    case NodeType$1.Document: {\n      const scrollData = newTree.scrollData;\n      scrollData && replayer.applyScroll(scrollData, true);\n      break;\n    }\n    case NodeType$1.Element: {\n      const oldElement = oldTree;\n      const newRRElement = newTree;\n      newRRElement.scrollData && replayer.applyScroll(newRRElement.scrollData, true);\n      newRRElement.inputData && replayer.applyInput(newRRElement.inputData);\n      switch (newRRElement.tagName) {\n        case \"AUDIO\":\n        case \"VIDEO\": {\n          const oldMediaElement = oldTree;\n          const newMediaRRElement = newRRElement;\n          if (newMediaRRElement.paused !== void 0)\n            newMediaRRElement.paused ? void oldMediaElement.pause() : void oldMediaElement.play();\n          if (newMediaRRElement.muted !== void 0)\n            oldMediaElement.muted = newMediaRRElement.muted;\n          if (newMediaRRElement.volume !== void 0)\n            oldMediaElement.volume = newMediaRRElement.volume;\n          if (newMediaRRElement.currentTime !== void 0)\n            oldMediaElement.currentTime = newMediaRRElement.currentTime;\n          if (newMediaRRElement.playbackRate !== void 0)\n            oldMediaElement.playbackRate = newMediaRRElement.playbackRate;\n          if (newMediaRRElement.loop !== void 0)\n            oldMediaElement.loop = newMediaRRElement.loop;\n          break;\n        }\n        case \"CANVAS\": {\n          const rrCanvasElement = newTree;\n          if (rrCanvasElement.rr_dataURL !== null) {\n            const image = document.createElement(\"img\");\n            image.onload = () => {\n              const ctx = oldElement.getContext(\"2d\");\n              if (ctx) {\n                ctx.drawImage(image, 0, 0, image.width, image.height);\n              }\n            };\n            image.src = rrCanvasElement.rr_dataURL;\n          }\n          rrCanvasElement.canvasMutations.forEach(\n            (canvasMutation) => replayer.applyCanvas(\n              canvasMutation.event,\n              canvasMutation.mutation,\n              oldTree\n            )\n          );\n          break;\n        }\n        case \"STYLE\": {\n          const styleSheet = oldElement.sheet;\n          styleSheet && newTree.rules.forEach(\n            (data) => replayer.applyStyleSheetMutation(data, styleSheet)\n          );\n          break;\n        }\n        case \"DIALOG\": {\n          const dialog = oldElement;\n          const rrDialog = newRRElement;\n          const wasOpen = dialog.open;\n          const wasModal = dialog.matches(\"dialog:modal\");\n          const shouldBeOpen = rrDialog.open;\n          const shouldBeModal = rrDialog.isModal;\n          const modalChanged = wasModal !== shouldBeModal;\n          const openChanged = wasOpen !== shouldBeOpen;\n          if (modalChanged || wasOpen && openChanged) dialog.close();\n          if (shouldBeOpen && (openChanged || modalChanged)) {\n            try {\n              if (shouldBeModal) dialog.showModal();\n              else dialog.show();\n            } catch (e) {\n              console.warn(e);\n            }\n          }\n          break;\n        }\n      }\n      break;\n    }\n    case NodeType$1.Text:\n    case NodeType$1.Comment:\n    case NodeType$1.CDATA: {\n      if (oldTree.textContent !== newTree.data)\n        oldTree.textContent = newTree.data;\n      break;\n    }\n  }\n  if (createdNodeSet == null ? void 0 : createdNodeSet.has(oldTree)) {\n    createdNodeSet.delete(oldTree);\n    (_a = replayer.afterAppend) == null ? void 0 : _a.call(replayer, oldTree, replayer.mirror.getId(oldTree));\n  }\n}\nfunction diffProps(oldTree, newTree, rrnodeMirror) {\n  const oldAttributes = oldTree.attributes;\n  const newAttributes = newTree.attributes;\n  for (const name in newAttributes) {\n    const newValue = newAttributes[name];\n    const sn = rrnodeMirror.getMeta(newTree);\n    if ((sn == null ? void 0 : sn.isSVG) && NAMESPACES[name])\n      oldTree.setAttributeNS(NAMESPACES[name], name, newValue);\n    else if (newTree.tagName === \"CANVAS\" && name === \"rr_dataURL\") {\n      const image = document.createElement(\"img\");\n      image.src = newValue;\n      image.onload = () => {\n        const ctx = oldTree.getContext(\"2d\");\n        if (ctx) {\n          ctx.drawImage(image, 0, 0, image.width, image.height);\n        }\n      };\n    } else if (newTree.tagName === \"IFRAME\" && name === \"srcdoc\") continue;\n    else {\n      try {\n        oldTree.setAttribute(name, newValue);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n  }\n  for (const { name } of Array.from(oldAttributes))\n    if (!(name in newAttributes)) oldTree.removeAttribute(name);\n  newTree.scrollLeft && (oldTree.scrollLeft = newTree.scrollLeft);\n  newTree.scrollTop && (oldTree.scrollTop = newTree.scrollTop);\n}\nfunction diffChildren(oldTree, newTree, replayer, rrnodeMirror) {\n  const oldChildren = Array.from(oldTree.childNodes);\n  const newChildren = newTree.childNodes;\n  if (oldChildren.length === 0 && newChildren.length === 0) return;\n  let oldStartIndex = 0, oldEndIndex = oldChildren.length - 1, newStartIndex = 0, newEndIndex = newChildren.length - 1;\n  let oldStartNode = oldChildren[oldStartIndex], oldEndNode = oldChildren[oldEndIndex], newStartNode = newChildren[newStartIndex], newEndNode = newChildren[newEndIndex];\n  let oldIdToIndex = void 0, indexInOld = void 0;\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    if (oldStartNode === void 0) {\n      oldStartNode = oldChildren[++oldStartIndex];\n    } else if (oldEndNode === void 0) {\n      oldEndNode = oldChildren[--oldEndIndex];\n    } else if (\n      // same first node?\n      nodeMatching(oldStartNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldStartNode = oldChildren[++oldStartIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else if (\n      // same last node?\n      nodeMatching(oldEndNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldEndNode = oldChildren[--oldEndIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the first old node the same as the last new node?\n      nodeMatching(oldStartNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        oldTree.insertBefore(oldStartNode, oldEndNode.nextSibling);\n      } catch (e) {\n        console.warn(e);\n      }\n      oldStartNode = oldChildren[++oldStartIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the last old node the same as the first new node?\n      nodeMatching(oldEndNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        oldTree.insertBefore(oldEndNode, oldStartNode);\n      } catch (e) {\n        console.warn(e);\n      }\n      oldEndNode = oldChildren[--oldEndIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else {\n      if (!oldIdToIndex) {\n        oldIdToIndex = {};\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n          const oldChild2 = oldChildren[i];\n          if (oldChild2 && replayer.mirror.hasNode(oldChild2))\n            oldIdToIndex[replayer.mirror.getId(oldChild2)] = i;\n        }\n      }\n      indexInOld = oldIdToIndex[rrnodeMirror.getId(newStartNode)];\n      const nodeToMove = oldChildren[indexInOld];\n      if (indexInOld !== void 0 && nodeToMove && nodeMatching(nodeToMove, newStartNode, replayer.mirror, rrnodeMirror)) {\n        try {\n          oldTree.insertBefore(nodeToMove, oldStartNode);\n        } catch (e) {\n          console.warn(e);\n        }\n        oldChildren[indexInOld] = void 0;\n      } else {\n        const newNode = createOrGetNode(\n          newStartNode,\n          replayer.mirror,\n          rrnodeMirror\n        );\n        if (oldTree.nodeName === \"#document\" && oldStartNode && /**\n        * Special case 1: one document isn't allowed to have two doctype nodes at the same time, so we need to remove the old one first before inserting the new one.\n        * How this case happens: A parent document in the old tree already has a doctype node with an id e.g. #1. A new full snapshot rebuilds the replayer with a new doctype node with another id #2. According to the algorithm, the new doctype node will be inserted before the old one, which is not allowed by the Document standard.\n        */\n        (newNode.nodeType === newNode.DOCUMENT_TYPE_NODE && oldStartNode.nodeType === oldStartNode.DOCUMENT_TYPE_NODE || /**\n        * Special case 2: one document isn't allowed to have two HTMLElements at the same time, so we need to remove the old one first before inserting the new one.\n        * How this case happens: A mounted iframe element has an automatically created HTML element. We should delete it before inserting a serialized one. Otherwise, an error 'Only one element on document allowed' will be thrown.\n        */\n        newNode.nodeType === newNode.ELEMENT_NODE && oldStartNode.nodeType === oldStartNode.ELEMENT_NODE)) {\n          oldTree.removeChild(oldStartNode);\n          replayer.mirror.removeNodeFromMap(oldStartNode);\n          oldStartNode = oldChildren[++oldStartIndex];\n        }\n        try {\n          oldTree.insertBefore(newNode, oldStartNode || null);\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n      newStartNode = newChildren[++newStartIndex];\n    }\n  }\n  if (oldStartIndex > oldEndIndex) {\n    const referenceRRNode = newChildren[newEndIndex + 1];\n    let referenceNode = null;\n    if (referenceRRNode)\n      referenceNode = replayer.mirror.getNode(\n        rrnodeMirror.getId(referenceRRNode)\n      );\n    for (; newStartIndex <= newEndIndex; ++newStartIndex) {\n      const newNode = createOrGetNode(\n        newChildren[newStartIndex],\n        replayer.mirror,\n        rrnodeMirror\n      );\n      try {\n        oldTree.insertBefore(newNode, referenceNode);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  } else if (newStartIndex > newEndIndex) {\n    for (; oldStartIndex <= oldEndIndex; oldStartIndex++) {\n      const node2 = oldChildren[oldStartIndex];\n      if (!node2 || node2.parentNode !== oldTree) continue;\n      try {\n        oldTree.removeChild(node2);\n        replayer.mirror.removeNodeFromMap(node2);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }\n  let oldChild = oldTree.firstChild;\n  let newChild = newTree.firstChild;\n  while (oldChild !== null && newChild !== null) {\n    diff(oldChild, newChild, replayer, rrnodeMirror);\n    oldChild = oldChild.nextSibling;\n    newChild = newChild.nextSibling;\n  }\n}\nfunction createOrGetNode(rrNode, domMirror, rrnodeMirror) {\n  const nodeId = rrnodeMirror.getId(rrNode);\n  const sn = rrnodeMirror.getMeta(rrNode);\n  let node2 = null;\n  if (nodeId > -1) node2 = domMirror.getNode(nodeId);\n  if (node2 !== null && sameNodeType(node2, rrNode)) return node2;\n  switch (rrNode.RRNodeType) {\n    case NodeType$1.Document:\n      node2 = new Document();\n      break;\n    case NodeType$1.DocumentType:\n      node2 = document.implementation.createDocumentType(\n        rrNode.name,\n        rrNode.publicId,\n        rrNode.systemId\n      );\n      break;\n    case NodeType$1.Element: {\n      let tagName = rrNode.tagName.toLowerCase();\n      tagName = SVGTagMap[tagName] || tagName;\n      if (sn && \"isSVG\" in sn && (sn == null ? void 0 : sn.isSVG)) {\n        node2 = document.createElementNS(NAMESPACES[\"svg\"], tagName);\n      } else node2 = document.createElement(rrNode.tagName);\n      break;\n    }\n    case NodeType$1.Text:\n      node2 = document.createTextNode(rrNode.data);\n      break;\n    case NodeType$1.Comment:\n      node2 = document.createComment(rrNode.data);\n      break;\n    case NodeType$1.CDATA:\n      node2 = document.createCDATASection(rrNode.data);\n      break;\n  }\n  if (sn) domMirror.add(node2, { ...sn });\n  try {\n    createdNodeSet == null ? void 0 : createdNodeSet.add(node2);\n  } catch (e) {\n  }\n  return node2;\n}\nfunction sameNodeType(node1, node2) {\n  if (node1.nodeType !== node2.nodeType) return false;\n  return node1.nodeType !== node1.ELEMENT_NODE || node1.tagName.toUpperCase() === node2.tagName;\n}\nfunction nodeMatching(node1, node2, domMirror, rrdomMirror) {\n  const node1Id = domMirror.getId(node1);\n  const node2Id = rrdomMirror.getId(node2);\n  if (node1Id === -1 || node1Id !== node2Id) return false;\n  return sameNodeType(node1, node2);\n}\nclass RRDocument extends BaseRRDocument {\n  constructor(mirror) {\n    super();\n    __publicField(this, \"UNSERIALIZED_STARTING_ID\", -2);\n    // In the rrweb replayer, there are some unserialized nodes like the element that stores the injected style rules.\n    // These unserialized nodes may interfere the execution of the diff algorithm.\n    // The id of serialized node is larger than 0. So this value less than 0 is used as id for these unserialized nodes.\n    __publicField(this, \"_unserializedId\", this.UNSERIALIZED_STARTING_ID);\n    __publicField(this, \"mirror\", createMirror());\n    __publicField(this, \"scrollData\", null);\n    if (mirror) {\n      this.mirror = mirror;\n    }\n  }\n  /**\n   * Every time the id is used, it will minus 1 automatically to avoid collisions.\n   */\n  get unserializedId() {\n    return this._unserializedId--;\n  }\n  createDocument(_namespace, _qualifiedName, _doctype) {\n    return new RRDocument();\n  }\n  createDocumentType(qualifiedName, publicId, systemId) {\n    const documentTypeNode = new RRDocumentType(\n      qualifiedName,\n      publicId,\n      systemId\n    );\n    documentTypeNode.ownerDocument = this;\n    return documentTypeNode;\n  }\n  createElement(tagName) {\n    const upperTagName = tagName.toUpperCase();\n    let element;\n    switch (upperTagName) {\n      case \"AUDIO\":\n      case \"VIDEO\":\n        element = new RRMediaElement(upperTagName);\n        break;\n      case \"IFRAME\":\n        element = new RRIFrameElement(upperTagName, this.mirror);\n        break;\n      case \"CANVAS\":\n        element = new RRCanvasElement(upperTagName);\n        break;\n      case \"STYLE\":\n        element = new RRStyleElement(upperTagName);\n        break;\n      case \"DIALOG\":\n        element = new RRDialogElement(upperTagName);\n        break;\n      default:\n        element = new RRElement(upperTagName);\n        break;\n    }\n    element.ownerDocument = this;\n    return element;\n  }\n  createComment(data) {\n    const commentNode = new RRComment(data);\n    commentNode.ownerDocument = this;\n    return commentNode;\n  }\n  createCDATASection(data) {\n    const sectionNode = new RRCDATASection(data);\n    sectionNode.ownerDocument = this;\n    return sectionNode;\n  }\n  createTextNode(data) {\n    const textNode = new RRText(data);\n    textNode.ownerDocument = this;\n    return textNode;\n  }\n  destroyTree() {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.mirror.reset();\n  }\n  open() {\n    super.open();\n    this._unserializedId = this.UNSERIALIZED_STARTING_ID;\n  }\n}\nconst RRDocumentType = BaseRRDocumentType;\nclass RRElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"inputData\", null);\n    __publicField(this, \"scrollData\", null);\n  }\n}\nclass RRMediaElement extends BaseRRMediaElement {\n}\nclass RRDialogElement extends BaseRRDialogElement {\n}\nclass RRCanvasElement extends RRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"rr_dataURL\", null);\n    __publicField(this, \"canvasMutations\", []);\n  }\n  /**\n   * This is a dummy implementation to distinguish RRCanvasElement from real HTMLCanvasElement.\n   */\n  getContext() {\n    return null;\n  }\n}\nclass RRStyleElement extends RRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"rules\", []);\n  }\n}\nclass RRIFrameElement extends RRElement {\n  constructor(upperTagName, mirror) {\n    super(upperTagName);\n    __publicField(this, \"contentDocument\", new RRDocument());\n    this.contentDocument.mirror = mirror;\n  }\n}\nconst RRText = BaseRRText;\nconst RRComment = BaseRRComment;\nconst RRCDATASection = BaseRRCDATASection;\nfunction getValidTagName(element) {\n  if (element instanceof HTMLFormElement) {\n    return \"FORM\";\n  }\n  return element.tagName.toUpperCase();\n}\nfunction buildFromNode(node2, rrdom, domMirror, parentRRNode) {\n  let rrNode;\n  switch (node2.nodeType) {\n    case NodeType.DOCUMENT_NODE:\n      if (parentRRNode && parentRRNode.nodeName === \"IFRAME\")\n        rrNode = parentRRNode.contentDocument;\n      else {\n        rrNode = rrdom;\n        rrNode.compatMode = node2.compatMode;\n      }\n      break;\n    case NodeType.DOCUMENT_TYPE_NODE: {\n      const documentType = node2;\n      rrNode = rrdom.createDocumentType(\n        documentType.name,\n        documentType.publicId,\n        documentType.systemId\n      );\n      break;\n    }\n    case NodeType.ELEMENT_NODE: {\n      const elementNode = node2;\n      const tagName = getValidTagName(elementNode);\n      rrNode = rrdom.createElement(tagName);\n      const rrElement = rrNode;\n      for (const { name, value } of Array.from(elementNode.attributes)) {\n        rrElement.attributes[name] = value;\n      }\n      elementNode.scrollLeft && (rrElement.scrollLeft = elementNode.scrollLeft);\n      elementNode.scrollTop && (rrElement.scrollTop = elementNode.scrollTop);\n      break;\n    }\n    case NodeType.TEXT_NODE:\n      rrNode = rrdom.createTextNode(node2.textContent || \"\");\n      break;\n    case NodeType.CDATA_SECTION_NODE:\n      rrNode = rrdom.createCDATASection(node2.data);\n      break;\n    case NodeType.COMMENT_NODE:\n      rrNode = rrdom.createComment(node2.textContent || \"\");\n      break;\n    case NodeType.DOCUMENT_FRAGMENT_NODE:\n      rrNode = parentRRNode.attachShadow({ mode: \"open\" });\n      break;\n    default:\n      return null;\n  }\n  let sn = domMirror.getMeta(node2);\n  if (rrdom instanceof RRDocument) {\n    if (!sn) {\n      sn = getDefaultSN(rrNode, rrdom.unserializedId);\n      domMirror.add(node2, sn);\n    }\n    rrdom.mirror.add(rrNode, { ...sn });\n  }\n  return rrNode;\n}\nfunction buildFromDom(dom, domMirror = createMirror$1(), rrdom = new RRDocument()) {\n  function walk2(node2, parentRRNode) {\n    const rrNode = buildFromNode(node2, rrdom, domMirror, parentRRNode);\n    if (rrNode === null) return;\n    if (\n      // if the parentRRNode isn't a RRIFrameElement\n      (parentRRNode == null ? void 0 : parentRRNode.nodeName) !== \"IFRAME\" && // if node isn't a shadow root\n      node2.nodeType !== NodeType.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parentRRNode == null ? void 0 : parentRRNode.appendChild(rrNode);\n      rrNode.parentNode = parentRRNode;\n      rrNode.parentElement = parentRRNode;\n    }\n    if (node2.nodeName === \"IFRAME\") {\n      const iframeDoc = node2.contentDocument;\n      iframeDoc && walk2(iframeDoc, rrNode);\n    } else if (node2.nodeType === NodeType.DOCUMENT_NODE || node2.nodeType === NodeType.ELEMENT_NODE || node2.nodeType === NodeType.DOCUMENT_FRAGMENT_NODE) {\n      if (node2.nodeType === NodeType.ELEMENT_NODE && node2.shadowRoot)\n        walk2(node2.shadowRoot, rrNode);\n      node2.childNodes.forEach((childNode) => walk2(childNode, rrNode));\n    }\n  }\n  walk2(dom, null);\n  return rrdom;\n}\nfunction createMirror() {\n  return new Mirror2();\n}\nclass Mirror2 {\n  constructor() {\n    __publicField(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n) {\n    var _a;\n    if (!n) return -1;\n    const id = (_a = this.getMeta(n)) == null ? void 0 : _a.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n) {\n    return this.nodeMetaMap.get(n) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n) {\n    const id = this.getId(n);\n    this.idNodeMap.delete(id);\n    if (n.childNodes) {\n      n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node2) {\n    return this.nodeMetaMap.has(node2);\n  }\n  add(n, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n);\n    this.nodeMetaMap.set(n, meta);\n  }\n  replace(id, n) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n, meta);\n    }\n    this.idNodeMap.set(id, n);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n}\nfunction getDefaultSN(node2, id) {\n  switch (node2.RRNodeType) {\n    case NodeType$1.Document:\n      return {\n        id,\n        type: node2.RRNodeType,\n        childNodes: []\n      };\n    case NodeType$1.DocumentType: {\n      const doctype = node2;\n      return {\n        id,\n        type: node2.RRNodeType,\n        name: doctype.name,\n        publicId: doctype.publicId,\n        systemId: doctype.systemId\n      };\n    }\n    case NodeType$1.Element:\n      return {\n        id,\n        type: node2.RRNodeType,\n        tagName: node2.tagName.toLowerCase(),\n        // In rrweb data, all tagNames are lowercase.\n        attributes: {},\n        childNodes: []\n      };\n    case NodeType$1.Text:\n      return {\n        id,\n        type: node2.RRNodeType,\n        textContent: node2.textContent || \"\"\n      };\n    case NodeType$1.Comment:\n      return {\n        id,\n        type: node2.RRNodeType,\n        textContent: node2.textContent || \"\"\n      };\n    case NodeType$1.CDATA:\n      return {\n        id,\n        type: node2.RRNodeType,\n        textContent: \"\"\n      };\n  }\n}\nfunction printRRDom(rootNode, mirror) {\n  return walk(rootNode, mirror, \"\");\n}\nfunction walk(node2, mirror, blankSpace) {\n  let printText = `${blankSpace}${mirror.getId(node2)} ${node2.toString()}\n`;\n  if (node2.RRNodeType === NodeType$1.Element) {\n    const element = node2;\n    if (element.shadowRoot)\n      printText += walk(element.shadowRoot, mirror, blankSpace + \"  \");\n  }\n  for (const child of node2.childNodes)\n    printText += walk(child, mirror, blankSpace + \"  \");\n  if (node2.nodeName === \"IFRAME\")\n    printText += walk(\n      node2.contentDocument,\n      mirror,\n      blankSpace + \"  \"\n    );\n  return printText;\n}\nexport {\n  BaseRRCDATASection,\n  BaseRRComment,\n  BaseRRDialogElement,\n  BaseRRDocument,\n  BaseRRDocumentType,\n  BaseRRElement,\n  BaseRRMediaElement,\n  BaseRRNode,\n  BaseRRText,\n  ClassList,\n  Mirror2 as Mirror,\n  NodeType,\n  RRCDATASection,\n  RRCanvasElement,\n  RRComment,\n  RRDialogElement,\n  RRDocument,\n  RRDocumentType,\n  RRElement,\n  RRIFrameElement,\n  RRMediaElement,\n  BaseRRNode as RRNode,\n  RRStyleElement,\n  RRText,\n  buildFromDom,\n  buildFromNode,\n  createMirror,\n  createOrGetNode,\n  diff,\n  getDefaultSN,\n  printRRDom\n};\n//# sourceMappingURL=rrdom.js.map\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar MediaInteractions = /* @__PURE__ */ ((MediaInteractions2) => {\n  MediaInteractions2[MediaInteractions2[\"Play\"] = 0] = \"Play\";\n  MediaInteractions2[MediaInteractions2[\"Pause\"] = 1] = \"Pause\";\n  MediaInteractions2[MediaInteractions2[\"Seeked\"] = 2] = \"Seeked\";\n  MediaInteractions2[MediaInteractions2[\"VolumeChange\"] = 3] = \"VolumeChange\";\n  MediaInteractions2[MediaInteractions2[\"RateChange\"] = 4] = \"RateChange\";\n  return MediaInteractions2;\n})(MediaInteractions || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\nvar NodeType = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType || {});\nexport {\n  CanvasContext,\n  EventType,\n  IncrementalSource,\n  MediaInteractions,\n  MouseInteractions,\n  NodeType,\n  PointerTypes,\n  ReplayerEvents\n};\n//# sourceMappingURL=rrweb-types.js.map\n","import { NodeType as RRNodeType } from '@supademo/rrweb-types';\nimport type { NWSAPI } from 'nwsapi';\nimport type { CSSStyleDeclaration as CSSStyleDeclarationType } from 'cssstyle';\nimport {\n  BaseRRCDATASection,\n  BaseRRComment,\n  BaseRRDocument,\n  BaseRRDocumentType,\n  BaseRRElement,\n  BaseRRMediaElement,\n  BaseRRNode,\n  BaseRRText,\n  ClassList,\n  type IRRDocument,\n  type CSSStyleDeclaration,\n} from '@supademo/rrdom';\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires\nconst nwsapi = require('nwsapi');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires\nconst cssom = require('cssom');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires\nconst cssstyle = require('cssstyle');\n\nexport class RRWindow {\n  scrollLeft = 0;\n  scrollTop = 0;\n  scrollTo(options?: ScrollToOptions) {\n    if (!options) return;\n    if (typeof options.left === 'number') this.scrollLeft = options.left;\n    if (typeof options.top === 'number') this.scrollTop = options.top;\n  }\n}\n\nexport class RRDocument extends BaseRRDocument implements IRRDocument {\n  readonly nodeName = '#document' as const;\n  private _nwsapi: NWSAPI | undefined;\n  get nwsapi(): NWSAPI {\n    if (!this._nwsapi) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n      this._nwsapi = nwsapi({\n        document: this as unknown as Document,\n        DOMException: null as unknown as new (\n          message?: string,\n          name?: string,\n        ) => DOMException,\n      }) as NWSAPI;\n      this._nwsapi.configure({\n        LOGERRORS: false,\n        IDS_DUPES: true,\n        MIXEDCASE: true,\n      });\n    }\n    return this._nwsapi;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get documentElement(): RRElement | null {\n    return super.documentElement as RRElement | null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get body(): RRElement | null {\n    return super.body as RRElement | null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get head() {\n    return super.head as RRElement | null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get implementation(): RRDocument {\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get firstElementChild(): RRElement | null {\n    return this.documentElement;\n  }\n\n  appendChild(childNode: BaseRRNode) {\n    return super.appendChild(childNode);\n  }\n\n  insertBefore(newChild: BaseRRNode, refChild: BaseRRNode | null) {\n    return super.insertBefore(newChild, refChild);\n  }\n\n  querySelectorAll(selectors: string): BaseRRNode[] {\n    return this.nwsapi.select(selectors) as unknown as BaseRRNode[];\n  }\n\n  getElementsByTagName(tagName: string): RRElement[] {\n    if (this.documentElement)\n      return this.documentElement.getElementsByTagName(tagName);\n    return [];\n  }\n\n  getElementsByClassName(className: string): RRElement[] {\n    if (this.documentElement)\n      return this.documentElement.getElementsByClassName(className);\n    return [];\n  }\n\n  getElementById(elementId: string): RRElement | null {\n    if (this.documentElement)\n      return this.documentElement.getElementById(elementId);\n    return null;\n  }\n\n  createDocument(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _namespace: string | null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _qualifiedName: string | null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _doctype?: DocumentType | null,\n  ) {\n    return new RRDocument();\n  }\n\n  createDocumentType(\n    qualifiedName: string,\n    publicId: string,\n    systemId: string,\n  ) {\n    const documentTypeNode = new RRDocumentType(\n      qualifiedName,\n      publicId,\n      systemId,\n    );\n    documentTypeNode.ownerDocument = this;\n    return documentTypeNode;\n  }\n\n  createElement<K extends keyof HTMLElementTagNameMap>(\n    tagName: K,\n  ): RRElementType<K>;\n  createElement(tagName: string): RRElement;\n  createElement(tagName: string) {\n    const upperTagName = tagName.toUpperCase();\n    let element;\n    switch (upperTagName) {\n      case 'AUDIO':\n      case 'VIDEO':\n        element = new RRMediaElement(upperTagName);\n        break;\n      case 'IFRAME':\n        element = new RRIFrameElement(upperTagName);\n        break;\n      case 'IMG':\n        element = new RRImageElement(upperTagName);\n        break;\n      case 'CANVAS':\n        element = new RRCanvasElement(upperTagName);\n        break;\n      case 'STYLE':\n        element = new RRStyleElement(upperTagName);\n        break;\n      default:\n        element = new RRElement(upperTagName);\n        break;\n    }\n    element.ownerDocument = this;\n    return element;\n  }\n\n  createElementNS(_namespaceURI: string, qualifiedName: string) {\n    return this.createElement(qualifiedName as keyof HTMLElementTagNameMap);\n  }\n\n  createComment(data: string) {\n    const commentNode = new RRComment(data);\n    commentNode.ownerDocument = this;\n    return commentNode;\n  }\n\n  createCDATASection(data: string) {\n    const sectionNode = new RRCDATASection(data);\n    sectionNode.ownerDocument = this;\n    return sectionNode;\n  }\n\n  createTextNode(data: string) {\n    const textNode = new RRText(data);\n    textNode.ownerDocument = this;\n    return textNode;\n  }\n}\n\nexport class RRDocumentType extends BaseRRDocumentType {}\n\nexport class RRElement extends BaseRRElement {\n  private _style: CSSStyleDeclarationType;\n  constructor(tagName: string) {\n    super(tagName);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    this._style = new cssstyle.CSSStyleDeclaration();\n    const style = this._style;\n    Object.defineProperty(this.attributes, 'style', {\n      get() {\n        return style.cssText;\n      },\n      set(cssText: string) {\n        style.cssText = cssText;\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get style() {\n    return this._style as unknown as CSSStyleDeclaration;\n  }\n\n  attachShadow(_init: ShadowRootInit): RRElement {\n    return super.attachShadow(_init) as RRElement;\n  }\n\n  appendChild(newChild: BaseRRNode): BaseRRNode {\n    return super.appendChild(newChild) as BaseRRNode;\n  }\n\n  insertBefore(newChild: BaseRRNode, refChild: BaseRRNode | null): BaseRRNode {\n    return super.insertBefore(newChild, refChild) as BaseRRNode;\n  }\n\n  getAttribute(name: string) {\n    const upperName = name && name.toLowerCase();\n    if (upperName in this.attributes) return this.attributes[upperName];\n    return null;\n  }\n\n  setAttribute(name: string, attribute: string) {\n    this.attributes[name.toLowerCase()] = attribute;\n  }\n\n  removeAttribute(name: string) {\n    delete this.attributes[name.toLowerCase()];\n  }\n\n  get firstElementChild(): RRElement | null {\n    for (const child of this.childNodes)\n      if (child.RRNodeType === RRNodeType.Element) return child as RRElement;\n    return null;\n  }\n\n  get nextElementSibling(): RRElement | null {\n    const parentNode = this.parentNode;\n    if (!parentNode) return null;\n    const siblings = parentNode.childNodes;\n    const index = siblings.indexOf(this);\n    for (let i = index + 1; i < siblings.length; i++)\n      if (siblings[i] instanceof RRElement) return siblings[i] as RRElement;\n    return null;\n  }\n\n  querySelectorAll(selectors: string): BaseRRNode[] {\n    const result: RRElement[] = [];\n    if (this.ownerDocument !== null) {\n      (this.ownerDocument as RRDocument).nwsapi.select(\n        selectors,\n        this as unknown as Element,\n        (element) => {\n          if ((element as unknown as RRElement) !== this)\n            result.push(element as unknown as RRElement);\n        },\n      ) as unknown as BaseRRNode[];\n    }\n    return result;\n  }\n\n  getElementById(elementId: string): RRElement | null {\n    if (this.id === elementId) return this;\n    for (const child of this.childNodes) {\n      if (child instanceof RRElement) {\n        const result = child.getElementById(elementId);\n        if (result !== null) return result;\n      }\n    }\n    return null;\n  }\n\n  getElementsByClassName(className: string): RRElement[] {\n    let elements: RRElement[] = [];\n    const queryClassList = new ClassList(className);\n    // Make sure this element has all queried class names.\n    if (\n      this instanceof RRElement &&\n      queryClassList.classes.filter((queriedClassName) =>\n        this.classList.classes.some((name) => name === queriedClassName),\n      ).length == queryClassList.classes.length\n    )\n      elements.push(this);\n    for (const child of this.childNodes) {\n      if (child instanceof RRElement)\n        elements = elements.concat(child.getElementsByClassName(className));\n    }\n    return elements;\n  }\n\n  getElementsByTagName(tagName: string): RRElement[] {\n    let elements: RRElement[] = [];\n    const normalizedTagName = tagName.toUpperCase();\n    if (this instanceof RRElement && this.tagName === normalizedTagName)\n      elements.push(this);\n    for (const child of this.childNodes) {\n      if (child instanceof RRElement)\n        elements = elements.concat(child.getElementsByTagName(tagName));\n    }\n    return elements;\n  }\n}\n\nexport class RRImageElement extends RRElement {\n  src = '';\n  width = 0;\n  height = 0;\n  onload: ((this: GlobalEventHandlers, ev: Event) => unknown) | null = null;\n}\n\nexport class RRMediaElement extends BaseRRMediaElement {}\n\nexport class RRCanvasElement extends RRElement {\n  /**\n   * This is just a dummy implementation to prevent rrweb replayer from drawing mouse tail. If further analysis of canvas is needed, we may implement it with node-canvas.\n   */\n  getContext(): CanvasRenderingContext2D | null {\n    return null;\n  }\n}\n\nexport class RRStyleElement extends RRElement {\n  private _sheet: CSSStyleSheet | null = null;\n\n  get sheet() {\n    if (!this._sheet) {\n      let result = '';\n      for (const child of this.childNodes)\n        if (child.RRNodeType === RRNodeType.Text)\n          result += (child as RRText).textContent;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment\n      this._sheet = cssom.parse(result);\n    }\n    return this._sheet;\n  }\n}\n\nexport class RRIFrameElement extends RRElement {\n  width = '';\n  height = '';\n  src = '';\n  contentDocument: RRDocument = new RRDocument();\n  contentWindow: RRWindow = new RRWindow();\n\n  constructor(tagName: string) {\n    super(tagName);\n    const htmlElement = this.contentDocument.createElement('HTML');\n    this.contentDocument.appendChild(htmlElement);\n    htmlElement.appendChild(this.contentDocument.createElement('HEAD'));\n    htmlElement.appendChild(this.contentDocument.createElement('BODY'));\n  }\n}\n\nexport class RRText extends BaseRRText {\n  readonly nodeName = '#text' as const;\n}\n\nexport class RRComment extends BaseRRComment {\n  readonly nodeName = '#comment' as const;\n}\n\nexport class RRCDATASection extends BaseRRCDATASection {\n  readonly nodeName = '#cdata-section' as const;\n}\n\ninterface RRElementTagNameMap {\n  audio: RRMediaElement;\n  canvas: RRCanvasElement;\n  iframe: RRIFrameElement;\n  img: RRImageElement;\n  style: RRStyleElement;\n  video: RRMediaElement;\n}\n\ntype RRElementType<K extends keyof HTMLElementTagNameMap> =\n  K extends keyof RRElementTagNameMap ? RRElementTagNameMap[K] : RRElement;\n","import { BaseRRNode } from '@supademo/rrdom';\nimport { RRDocument } from './document-nodejs';\n\n/**\n * Polyfill the performance for nodejs.\n * Note: The performance api is available through the global object from nodejs v16.0.0.\n * https://github.com/nodejs/node/pull/37970\n */\nexport function polyfillPerformance() {\n  if (typeof window !== 'undefined' || 'performance' in global) return;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-var-requires\n  const performance = require('perf_hooks').performance;\n  ((global as Window & typeof globalThis).performance as unknown) = performance;\n}\n\n/**\n * Polyfill requestAnimationFrame and cancelAnimationFrame for nodejs.\n */\nexport function polyfillRAF() {\n  if (typeof window !== 'undefined' || 'requestAnimationFrame' in global)\n    return;\n\n  const FPS = 60,\n    INTERVAL = 1_000 / FPS;\n  let timeoutHandle: NodeJS.Timeout | null = null,\n    rafCount = 0,\n    requests = Object.create(null) as Record<string, (time: number) => void>;\n\n  function onFrameTimer() {\n    const currentRequests = requests;\n    requests = Object.create(null) as Record<string, (time: number) => void>;\n    timeoutHandle = null;\n    Object.keys(currentRequests).forEach(function (id) {\n      const request = currentRequests[id];\n      if (request) request(Date.now());\n    });\n  }\n\n  function requestAnimationFrame(callback: (timestamp: number) => void) {\n    const cbHandle = ++rafCount;\n    requests[cbHandle] = callback;\n    if (timeoutHandle === null)\n      timeoutHandle = setTimeout(onFrameTimer, INTERVAL);\n    return cbHandle;\n  }\n\n  function cancelAnimationFrame(handleId: number) {\n    delete requests[handleId];\n    if (Object.keys(requests).length === 0 && timeoutHandle !== null) {\n      clearTimeout(timeoutHandle);\n      timeoutHandle = null;\n    }\n  }\n\n  (global as Window & typeof globalThis).requestAnimationFrame =\n    requestAnimationFrame;\n  (global as Window & typeof globalThis).cancelAnimationFrame =\n    cancelAnimationFrame;\n}\n\n/**\n * Try to polyfill Event type.\n * The implementation of Event so far is empty because rrweb doesn't strongly depend on it in nodejs mode.\n * Note: The Event class is available through the global object from nodejs v15.0.0.\n */\nexport function polyfillEvent() {\n  if (typeof Event !== 'undefined') return;\n  (global.Event as unknown) = function () {\n    //\n  };\n}\n\n/**\n * Polyfill Node type with BaseRRNode for nodejs.\n */\nexport function polyfillNode() {\n  if (typeof Node !== 'undefined') return;\n  (global.Node as unknown) = BaseRRNode;\n}\n\n/**\n *  Polyfill document object with RRDocument for nodejs.\n */\nexport function polyfillDocument() {\n  if (typeof document !== 'undefined') return;\n  const rrdom = new RRDocument();\n  (() => {\n    rrdom.appendChild(rrdom.createElement('html'));\n    rrdom.documentElement?.appendChild(rrdom.createElement('head'));\n    rrdom.documentElement?.appendChild(rrdom.createElement('body'));\n  })();\n  global.document = rrdom as unknown as Document;\n}\n","import {\n  polyfillPerformance,\n  polyfillRAF,\n  polyfillEvent,\n  polyfillNode,\n  polyfillDocument,\n} from './polyfill';\npolyfillPerformance();\npolyfillRAF();\npolyfillEvent();\npolyfillNode();\npolyfillDocument();\nexport * from './document-nodejs';\n"],"names":["__defProp","__defNormalProp","__publicField","RRNodeType","result"],"mappings":"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"}