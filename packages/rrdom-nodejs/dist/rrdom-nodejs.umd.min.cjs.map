{
  "version": 3,
  "sources": ["../../rrdom/dist/rrdom.js", "../../types/dist/rrweb-types.js", "../src/document-nodejs.ts", "../src/polyfill.ts", "../src/index.ts"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar __defProp2 = Object.defineProperty;\nvar __defNormalProp2 = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField2 = (obj, key, value) => __defNormalProp2(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nlet Mirror$1 = class Mirror {\n  constructor() {\n    __publicField2(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField2(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n) {\n    var _a;\n    if (!n) return -1;\n    const id = (_a = this.getMeta(n)) == null ? void 0 : _a.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n) {\n    return this.nodeMetaMap.get(n) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n) {\n    const id = this.getId(n);\n    this.idNodeMap.delete(id);\n    if (n.childNodes) {\n      n.childNodes.forEach(\n        (childNode) => this.removeNodeFromMap(childNode)\n      );\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node2) {\n    return this.nodeMetaMap.has(node2);\n  }\n  add(n, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n);\n    this.nodeMetaMap.set(n, meta);\n  }\n  replace(id, n) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n, meta);\n    }\n    this.idNodeMap.set(id, n);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nfunction createMirror$1() {\n  return new Mirror$1();\n}\nfunction getDefaultExportFromCjs(x2) {\n  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, \"default\") ? x2[\"default\"] : x2;\n}\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n  if (typeof f == \"function\") {\n    var a = function a2() {\n      if (this instanceof a2) {\n        return Reflect.construct(f, arguments, this.constructor);\n      }\n      return f.apply(this, arguments);\n    };\n    a.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, \"__esModule\", { value: true });\n  Object.keys(n).forEach(function(k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function() {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\nvar picocolors_browser = { exports: {} };\nvar x = String;\nvar create = function() {\n  return { isColorSupported: false, reset: x, bold: x, dim: x, italic: x, underline: x, inverse: x, hidden: x, strikethrough: x, black: x, red: x, green: x, yellow: x, blue: x, magenta: x, cyan: x, white: x, gray: x, bgBlack: x, bgRed: x, bgGreen: x, bgYellow: x, bgBlue: x, bgMagenta: x, bgCyan: x, bgWhite: x, blackBright: x, redBright: x, greenBright: x, yellowBright: x, blueBright: x, magentaBright: x, cyanBright: x, whiteBright: x, bgBlackBright: x, bgRedBright: x, bgGreenBright: x, bgYellowBright: x, bgBlueBright: x, bgMagentaBright: x, bgCyanBright: x, bgWhiteBright: x };\n};\npicocolors_browser.exports = create();\npicocolors_browser.exports.createColors = create;\nvar picocolors_browserExports = picocolors_browser.exports;\nconst __viteBrowserExternal = {};\nconst __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: __viteBrowserExternal\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst require$$2 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);\nlet pico = picocolors_browserExports;\nlet terminalHighlight$1 = require$$2;\nlet CssSyntaxError$3 = class CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin2) {\n    super(message);\n    this.name = \"CssSyntaxError\";\n    this.reason = message;\n    if (file) {\n      this.file = file;\n    }\n    if (source) {\n      this.source = source;\n    }\n    if (plugin2) {\n      this.plugin = plugin2;\n    }\n    if (typeof line !== \"undefined\" && typeof column !== \"undefined\") {\n      if (typeof line === \"number\") {\n        this.line = line;\n        this.column = column;\n      } else {\n        this.line = line.line;\n        this.column = line.column;\n        this.endLine = column.line;\n        this.endColumn = column.column;\n      }\n    }\n    this.setMessage();\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError);\n    }\n  }\n  setMessage() {\n    this.message = this.plugin ? this.plugin + \": \" : \"\";\n    this.message += this.file ? this.file : \"<css input>\";\n    if (typeof this.line !== \"undefined\") {\n      this.message += \":\" + this.line + \":\" + this.column;\n    }\n    this.message += \": \" + this.reason;\n  }\n  showSourceCode(color) {\n    if (!this.source) return \"\";\n    let css = this.source;\n    if (color == null) color = pico.isColorSupported;\n    let aside = (text) => text;\n    let mark = (text) => text;\n    let highlight = (text) => text;\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true);\n      mark = (text) => bold(red(text));\n      aside = (text) => gray(text);\n      if (terminalHighlight$1) {\n        highlight = (text) => terminalHighlight$1(text);\n      }\n    }\n    let lines = css.split(/\\r?\\n/);\n    let start = Math.max(this.line - 3, 0);\n    let end = Math.min(this.line + 2, lines.length);\n    let maxWidth = String(end).length;\n    return lines.slice(start, end).map((line, index2) => {\n      let number = start + 1 + index2;\n      let gutter = \" \" + (\" \" + number).slice(-maxWidth) + \" | \";\n      if (number === this.line) {\n        if (line.length > 160) {\n          let padding = 20;\n          let subLineStart = Math.max(0, this.column - padding);\n          let subLineEnd = Math.max(\n            this.column + padding,\n            this.endColumn + padding\n          );\n          let subLine = line.slice(subLineStart, subLineEnd);\n          let spacing2 = aside(gutter.replace(/\\d/g, \" \")) + line.slice(0, Math.min(this.column - 1, padding - 1)).replace(/[^\\t]/g, \" \");\n          return mark(\">\") + aside(gutter) + highlight(subLine) + \"\\n \" + spacing2 + mark(\"^\");\n        }\n        let spacing = aside(gutter.replace(/\\d/g, \" \")) + line.slice(0, this.column - 1).replace(/[^\\t]/g, \" \");\n        return mark(\">\") + aside(gutter) + highlight(line) + \"\\n \" + spacing + mark(\"^\");\n      }\n      return \" \" + aside(gutter) + highlight(line);\n    }).join(\"\\n\");\n  }\n  toString() {\n    let code = this.showSourceCode();\n    if (code) {\n      code = \"\\n\\n\" + code + \"\\n\";\n    }\n    return this.name + \": \" + this.message + code;\n  }\n};\nvar cssSyntaxError = CssSyntaxError$3;\nCssSyntaxError$3.default = CssSyntaxError$3;\nconst DEFAULT_RAW = {\n  after: \"\\n\",\n  beforeClose: \"\\n\",\n  beforeComment: \"\\n\",\n  beforeDecl: \"\\n\",\n  beforeOpen: \" \",\n  beforeRule: \"\\n\",\n  colon: \": \",\n  commentLeft: \" \",\n  commentRight: \" \",\n  emptyBody: \"\",\n  indent: \"    \",\n  semicolon: false\n};\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nlet Stringifier$2 = class Stringifier {\n  constructor(builder) {\n    this.builder = builder;\n  }\n  atrule(node2, semicolon) {\n    let name = \"@\" + node2.name;\n    let params = node2.params ? this.rawValue(node2, \"params\") : \"\";\n    if (typeof node2.raws.afterName !== \"undefined\") {\n      name += node2.raws.afterName;\n    } else if (params) {\n      name += \" \";\n    }\n    if (node2.nodes) {\n      this.block(node2, name + params);\n    } else {\n      let end = (node2.raws.between || \"\") + (semicolon ? \";\" : \"\");\n      this.builder(name + params + end, node2);\n    }\n  }\n  beforeAfter(node2, detect) {\n    let value;\n    if (node2.type === \"decl\") {\n      value = this.raw(node2, null, \"beforeDecl\");\n    } else if (node2.type === \"comment\") {\n      value = this.raw(node2, null, \"beforeComment\");\n    } else if (detect === \"before\") {\n      value = this.raw(node2, null, \"beforeRule\");\n    } else {\n      value = this.raw(node2, null, \"beforeClose\");\n    }\n    let buf = node2.parent;\n    let depth = 0;\n    while (buf && buf.type !== \"root\") {\n      depth += 1;\n      buf = buf.parent;\n    }\n    if (value.includes(\"\\n\")) {\n      let indent = this.raw(node2, null, \"indent\");\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent;\n      }\n    }\n    return value;\n  }\n  block(node2, start) {\n    let between = this.raw(node2, \"between\", \"beforeOpen\");\n    this.builder(start + between + \"{\", node2, \"start\");\n    let after;\n    if (node2.nodes && node2.nodes.length) {\n      this.body(node2);\n      after = this.raw(node2, \"after\");\n    } else {\n      after = this.raw(node2, \"after\", \"emptyBody\");\n    }\n    if (after) this.builder(after);\n    this.builder(\"}\", node2, \"end\");\n  }\n  body(node2) {\n    let last = node2.nodes.length - 1;\n    while (last > 0) {\n      if (node2.nodes[last].type !== \"comment\") break;\n      last -= 1;\n    }\n    let semicolon = this.raw(node2, \"semicolon\");\n    for (let i = 0; i < node2.nodes.length; i++) {\n      let child = node2.nodes[i];\n      let before = this.raw(child, \"before\");\n      if (before) this.builder(before);\n      this.stringify(child, last !== i || semicolon);\n    }\n  }\n  comment(node2) {\n    let left = this.raw(node2, \"left\", \"commentLeft\");\n    let right = this.raw(node2, \"right\", \"commentRight\");\n    this.builder(\"/*\" + left + node2.text + right + \"*/\", node2);\n  }\n  decl(node2, semicolon) {\n    let between = this.raw(node2, \"between\", \"colon\");\n    let string = node2.prop + between + this.rawValue(node2, \"value\");\n    if (node2.important) {\n      string += node2.raws.important || \" !important\";\n    }\n    if (semicolon) string += \";\";\n    this.builder(string, node2);\n  }\n  document(node2) {\n    this.body(node2);\n  }\n  raw(node2, own, detect) {\n    let value;\n    if (!detect) detect = own;\n    if (own) {\n      value = node2.raws[own];\n      if (typeof value !== \"undefined\") return value;\n    }\n    let parent = node2.parent;\n    if (detect === \"before\") {\n      if (!parent || parent.type === \"root\" && parent.first === node2) {\n        return \"\";\n      }\n      if (parent && parent.type === \"document\") {\n        return \"\";\n      }\n    }\n    if (!parent) return DEFAULT_RAW[detect];\n    let root2 = node2.root();\n    if (!root2.rawCache) root2.rawCache = {};\n    if (typeof root2.rawCache[detect] !== \"undefined\") {\n      return root2.rawCache[detect];\n    }\n    if (detect === \"before\" || detect === \"after\") {\n      return this.beforeAfter(node2, detect);\n    } else {\n      let method = \"raw\" + capitalize(detect);\n      if (this[method]) {\n        value = this[method](root2, node2);\n      } else {\n        root2.walk((i) => {\n          value = i.raws[own];\n          if (typeof value !== \"undefined\") return false;\n        });\n      }\n    }\n    if (typeof value === \"undefined\") value = DEFAULT_RAW[detect];\n    root2.rawCache[detect] = value;\n    return value;\n  }\n  rawBeforeClose(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== \"undefined\") {\n          value = i.raws.after;\n          if (value.includes(\"\\n\")) {\n            value = value.replace(/[^\\n]+$/, \"\");\n          }\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, \"\");\n    return value;\n  }\n  rawBeforeComment(root2, node2) {\n    let value;\n    root2.walkComments((i) => {\n      if (typeof i.raws.before !== \"undefined\") {\n        value = i.raws.before;\n        if (value.includes(\"\\n\")) {\n          value = value.replace(/[^\\n]+$/, \"\");\n        }\n        return false;\n      }\n    });\n    if (typeof value === \"undefined\") {\n      value = this.raw(node2, null, \"beforeDecl\");\n    } else if (value) {\n      value = value.replace(/\\S/g, \"\");\n    }\n    return value;\n  }\n  rawBeforeDecl(root2, node2) {\n    let value;\n    root2.walkDecls((i) => {\n      if (typeof i.raws.before !== \"undefined\") {\n        value = i.raws.before;\n        if (value.includes(\"\\n\")) {\n          value = value.replace(/[^\\n]+$/, \"\");\n        }\n        return false;\n      }\n    });\n    if (typeof value === \"undefined\") {\n      value = this.raw(node2, null, \"beforeRule\");\n    } else if (value) {\n      value = value.replace(/\\S/g, \"\");\n    }\n    return value;\n  }\n  rawBeforeOpen(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.type !== \"decl\") {\n        value = i.raws.between;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawBeforeRule(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && (i.parent !== root2 || root2.first !== i)) {\n        if (typeof i.raws.before !== \"undefined\") {\n          value = i.raws.before;\n          if (value.includes(\"\\n\")) {\n            value = value.replace(/[^\\n]+$/, \"\");\n          }\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, \"\");\n    return value;\n  }\n  rawColon(root2) {\n    let value;\n    root2.walkDecls((i) => {\n      if (typeof i.raws.between !== \"undefined\") {\n        value = i.raws.between.replace(/[^\\s:]/g, \"\");\n        return false;\n      }\n    });\n    return value;\n  }\n  rawEmptyBody(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawIndent(root2) {\n    if (root2.raws.indent) return root2.raws.indent;\n    let value;\n    root2.walk((i) => {\n      let p = i.parent;\n      if (p && p !== root2 && p.parent && p.parent === root2) {\n        if (typeof i.raws.before !== \"undefined\") {\n          let parts = i.raws.before.split(\"\\n\");\n          value = parts[parts.length - 1];\n          value = value.replace(/\\S/g, \"\");\n          return false;\n        }\n      }\n    });\n    return value;\n  }\n  rawSemicolon(root2) {\n    let value;\n    root2.walk((i) => {\n      if (i.nodes && i.nodes.length && i.last.type === \"decl\") {\n        value = i.raws.semicolon;\n        if (typeof value !== \"undefined\") return false;\n      }\n    });\n    return value;\n  }\n  rawValue(node2, prop) {\n    let value = node2[prop];\n    let raw = node2.raws[prop];\n    if (raw && raw.value === value) {\n      return raw.raw;\n    }\n    return value;\n  }\n  root(node2) {\n    this.body(node2);\n    if (node2.raws.after) this.builder(node2.raws.after);\n  }\n  rule(node2) {\n    this.block(node2, this.rawValue(node2, \"selector\"));\n    if (node2.raws.ownSemicolon) {\n      this.builder(node2.raws.ownSemicolon, node2, \"end\");\n    }\n  }\n  stringify(node2, semicolon) {\n    if (!this[node2.type]) {\n      throw new Error(\n        \"Unknown AST node type \" + node2.type + \". Maybe you need to change PostCSS stringifier.\"\n      );\n    }\n    this[node2.type](node2, semicolon);\n  }\n};\nvar stringifier = Stringifier$2;\nStringifier$2.default = Stringifier$2;\nlet Stringifier$1 = stringifier;\nfunction stringify$4(node2, builder) {\n  let str = new Stringifier$1(builder);\n  str.stringify(node2);\n}\nvar stringify_1 = stringify$4;\nstringify$4.default = stringify$4;\nvar symbols = {};\nsymbols.isClean = Symbol(\"isClean\");\nsymbols.my = Symbol(\"my\");\nlet CssSyntaxError$2 = cssSyntaxError;\nlet Stringifier2 = stringifier;\nlet stringify$3 = stringify_1;\nlet { isClean: isClean$2, my: my$2 } = symbols;\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor();\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      continue;\n    }\n    if (i === \"proxyCache\") continue;\n    let value = obj[i];\n    let type = typeof value;\n    if (i === \"parent\" && type === \"object\") {\n      if (parent) cloned[i] = parent;\n    } else if (i === \"source\") {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map((j) => cloneNode(j, cloned));\n    } else {\n      if (type === \"object\" && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n  return cloned;\n}\nfunction sourceOffset(inputCSS, position) {\n  if (position && typeof position.offset !== \"undefined\") {\n    return position.offset;\n  }\n  let column = 1;\n  let line = 1;\n  let offset = 0;\n  for (let i = 0; i < inputCSS.length; i++) {\n    if (line === position.line && column === position.column) {\n      offset = i;\n      break;\n    }\n    if (inputCSS[i] === \"\\n\") {\n      column = 1;\n      line += 1;\n    } else {\n      column += 1;\n    }\n  }\n  return offset;\n}\nlet Node$4 = class Node {\n  constructor(defaults = {}) {\n    this.raws = {};\n    this[isClean$2] = false;\n    this[my$2] = true;\n    for (let name in defaults) {\n      if (name === \"nodes\") {\n        this.nodes = [];\n        for (let node2 of defaults[name]) {\n          if (typeof node2.clone === \"function\") {\n            this.append(node2.clone());\n          } else {\n            this.append(node2);\n          }\n        }\n      } else {\n        this[name] = defaults[name];\n      }\n    }\n  }\n  addToError(error) {\n    error.postcssNode = this;\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source;\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      );\n    }\n    return error;\n  }\n  after(add) {\n    this.parent.insertAfter(this, add);\n    return this;\n  }\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name];\n    }\n    return this;\n  }\n  before(add) {\n    this.parent.insertBefore(this, add);\n    return this;\n  }\n  cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  }\n  clone(overrides = {}) {\n    let cloned = cloneNode(this);\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned;\n  }\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned;\n  }\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts);\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      );\n    }\n    return new CssSyntaxError$2(message);\n  }\n  getProxyProcessor() {\n    return {\n      get(node2, prop) {\n        if (prop === \"proxyOf\") {\n          return node2;\n        } else if (prop === \"root\") {\n          return () => node2.root().toProxy();\n        } else {\n          return node2[prop];\n        }\n      },\n      set(node2, prop, value) {\n        if (node2[prop] === value) return true;\n        node2[prop] = value;\n        if (prop === \"prop\" || prop === \"value\" || prop === \"name\" || prop === \"params\" || prop === \"important\" || /* c8 ignore next */\n        prop === \"text\") {\n          node2.markDirty();\n        }\n        return true;\n      }\n    };\n  }\n  /* c8 ignore next 3 */\n  markClean() {\n    this[isClean$2] = true;\n  }\n  markDirty() {\n    if (this[isClean$2]) {\n      this[isClean$2] = false;\n      let next = this;\n      while (next = next.parent) {\n        next[isClean$2] = false;\n      }\n    }\n  }\n  next() {\n    if (!this.parent) return void 0;\n    let index2 = this.parent.index(this);\n    return this.parent.nodes[index2 + 1];\n  }\n  positionBy(opts) {\n    let pos = this.source.start;\n    if (opts.index) {\n      pos = this.positionInside(opts.index);\n    } else if (opts.word) {\n      let stringRepresentation = this.source.input.css.slice(\n        sourceOffset(this.source.input.css, this.source.start),\n        sourceOffset(this.source.input.css, this.source.end)\n      );\n      let index2 = stringRepresentation.indexOf(opts.word);\n      if (index2 !== -1) pos = this.positionInside(index2);\n    }\n    return pos;\n  }\n  positionInside(index2) {\n    let column = this.source.start.column;\n    let line = this.source.start.line;\n    let offset = sourceOffset(this.source.input.css, this.source.start);\n    let end = offset + index2;\n    for (let i = offset; i < end; i++) {\n      if (this.source.input.css[i] === \"\\n\") {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n    return { column, line };\n  }\n  prev() {\n    if (!this.parent) return void 0;\n    let index2 = this.parent.index(this);\n    return this.parent.nodes[index2 - 1];\n  }\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    };\n    let end = this.source.end ? {\n      column: this.source.end.column + 1,\n      line: this.source.end.line\n    } : {\n      column: start.column + 1,\n      line: start.line\n    };\n    if (opts.word) {\n      let stringRepresentation = this.source.input.css.slice(\n        sourceOffset(this.source.input.css, this.source.start),\n        sourceOffset(this.source.input.css, this.source.end)\n      );\n      let index2 = stringRepresentation.indexOf(opts.word);\n      if (index2 !== -1) {\n        start = this.positionInside(index2);\n        end = this.positionInside(\n          index2 + opts.word.length\n        );\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        };\n      } else if (opts.index) {\n        start = this.positionInside(opts.index);\n      }\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        };\n      } else if (typeof opts.endIndex === \"number\") {\n        end = this.positionInside(opts.endIndex);\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1);\n      }\n    }\n    if (end.line < start.line || end.line === start.line && end.column <= start.column) {\n      end = { column: start.column + 1, line: start.line };\n    }\n    return { end, start };\n  }\n  raw(prop, defaultType) {\n    let str = new Stringifier2();\n    return str.raw(this, prop, defaultType);\n  }\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = void 0;\n    return this;\n  }\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this;\n      let foundSelf = false;\n      for (let node2 of nodes) {\n        if (node2 === this) {\n          foundSelf = true;\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node2);\n          bookmark = node2;\n        } else {\n          this.parent.insertBefore(bookmark, node2);\n        }\n      }\n      if (!foundSelf) {\n        this.remove();\n      }\n    }\n    return this;\n  }\n  root() {\n    let result2 = this;\n    while (result2.parent && result2.parent.type !== \"document\") {\n      result2 = result2.parent;\n    }\n    return result2;\n  }\n  toJSON(_, inputs) {\n    let fixed = {};\n    let emitInputs = inputs == null;\n    inputs = inputs || /* @__PURE__ */ new Map();\n    let inputsNextIndex = 0;\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        continue;\n      }\n      if (name === \"parent\" || name === \"proxyCache\") continue;\n      let value = this[name];\n      if (Array.isArray(value)) {\n        fixed[name] = value.map((i) => {\n          if (typeof i === \"object\" && i.toJSON) {\n            return i.toJSON(null, inputs);\n          } else {\n            return i;\n          }\n        });\n      } else if (typeof value === \"object\" && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs);\n      } else if (name === \"source\") {\n        let inputId = inputs.get(value.input);\n        if (inputId == null) {\n          inputId = inputsNextIndex;\n          inputs.set(value.input, inputsNextIndex);\n          inputsNextIndex++;\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        };\n      } else {\n        fixed[name] = value;\n      }\n    }\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map((input2) => input2.toJSON());\n    }\n    return fixed;\n  }\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n    }\n    return this.proxyCache;\n  }\n  toString(stringifier2 = stringify$3) {\n    if (stringifier2.stringify) stringifier2 = stringifier2.stringify;\n    let result2 = \"\";\n    stringifier2(this, (i) => {\n      result2 += i;\n    });\n    return result2;\n  }\n  warn(result2, text, opts) {\n    let data = { node: this };\n    for (let i in opts) data[i] = opts[i];\n    return result2.warn(text, data);\n  }\n  get proxyOf() {\n    return this;\n  }\n};\nvar node = Node$4;\nNode$4.default = Node$4;\nlet Node$3 = node;\nlet Comment$4 = class Comment extends Node$3 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"comment\";\n  }\n};\nvar comment = Comment$4;\nComment$4.default = Comment$4;\nlet Node$2 = node;\nlet Declaration$4 = class Declaration extends Node$2 {\n  constructor(defaults) {\n    if (defaults && typeof defaults.value !== \"undefined\" && typeof defaults.value !== \"string\") {\n      defaults = { ...defaults, value: String(defaults.value) };\n    }\n    super(defaults);\n    this.type = \"decl\";\n  }\n  get variable() {\n    return this.prop.startsWith(\"--\") || this.prop[0] === \"$\";\n  }\n};\nvar declaration = Declaration$4;\nDeclaration$4.default = Declaration$4;\nlet Comment$3 = comment;\nlet Declaration$3 = declaration;\nlet Node$1 = node;\nlet { isClean: isClean$1, my: my$1 } = symbols;\nlet AtRule$4, parse$4, Root$6, Rule$4;\nfunction cleanSource(nodes) {\n  return nodes.map((i) => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\n    delete i.source;\n    return i;\n  });\n}\nfunction markTreeDirty(node2) {\n  node2[isClean$1] = false;\n  if (node2.proxyOf.nodes) {\n    for (let i of node2.proxyOf.nodes) {\n      markTreeDirty(i);\n    }\n  }\n}\nlet Container$7 = class Container extends Node$1 {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last);\n      for (let node2 of nodes) this.proxyOf.nodes.push(node2);\n    }\n    this.markDirty();\n    return this;\n  }\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween);\n    if (this.nodes) {\n      for (let node2 of this.nodes) node2.cleanRaws(keepBetween);\n    }\n  }\n  each(callback) {\n    if (!this.proxyOf.nodes) return void 0;\n    let iterator = this.getIterator();\n    let index2, result2;\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index2 = this.indexes[iterator];\n      result2 = callback(this.proxyOf.nodes[index2], index2);\n      if (result2 === false) break;\n      this.indexes[iterator] += 1;\n    }\n    delete this.indexes[iterator];\n    return result2;\n  }\n  every(condition) {\n    return this.nodes.every(condition);\n  }\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0;\n    if (!this.indexes) this.indexes = {};\n    this.lastEach += 1;\n    let iterator = this.lastEach;\n    this.indexes[iterator] = 0;\n    return iterator;\n  }\n  getProxyProcessor() {\n    return {\n      get(node2, prop) {\n        if (prop === \"proxyOf\") {\n          return node2;\n        } else if (!node2[prop]) {\n          return node2[prop];\n        } else if (prop === \"each\" || typeof prop === \"string\" && prop.startsWith(\"walk\")) {\n          return (...args) => {\n            return node2[prop](\n              ...args.map((i) => {\n                if (typeof i === \"function\") {\n                  return (child, index2) => i(child.toProxy(), index2);\n                } else {\n                  return i;\n                }\n              })\n            );\n          };\n        } else if (prop === \"every\" || prop === \"some\") {\n          return (cb) => {\n            return node2[prop](\n              (child, ...other) => cb(child.toProxy(), ...other)\n            );\n          };\n        } else if (prop === \"root\") {\n          return () => node2.root().toProxy();\n        } else if (prop === \"nodes\") {\n          return node2.nodes.map((i) => i.toProxy());\n        } else if (prop === \"first\" || prop === \"last\") {\n          return node2[prop].toProxy();\n        } else {\n          return node2[prop];\n        }\n      },\n      set(node2, prop, value) {\n        if (node2[prop] === value) return true;\n        node2[prop] = value;\n        if (prop === \"name\" || prop === \"params\" || prop === \"selector\") {\n          node2.markDirty();\n        }\n        return true;\n      }\n    };\n  }\n  index(child) {\n    if (typeof child === \"number\") return child;\n    if (child.proxyOf) child = child.proxyOf;\n    return this.proxyOf.nodes.indexOf(child);\n  }\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist);\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();\n    existIndex = this.index(exist);\n    for (let node2 of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node2);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (existIndex < index2) {\n        this.indexes[id] = index2 + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist);\n    let type = existIndex === 0 ? \"prepend\" : false;\n    let nodes = this.normalize(\n      add,\n      this.proxyOf.nodes[existIndex],\n      type\n    ).reverse();\n    existIndex = this.index(exist);\n    for (let node2 of nodes) this.proxyOf.nodes.splice(existIndex, 0, node2);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (existIndex <= index2) {\n        this.indexes[id] = index2 + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  normalize(nodes, sample) {\n    if (typeof nodes === \"string\") {\n      nodes = cleanSource(parse$4(nodes).nodes);\n    } else if (typeof nodes === \"undefined\") {\n      nodes = [];\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, \"ignore\");\n      }\n    } else if (nodes.type === \"root\" && this.type !== \"document\") {\n      nodes = nodes.nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, \"ignore\");\n      }\n    } else if (nodes.type) {\n      nodes = [nodes];\n    } else if (nodes.prop) {\n      if (typeof nodes.value === \"undefined\") {\n        throw new Error(\"Value field is missed in node creation\");\n      } else if (typeof nodes.value !== \"string\") {\n        nodes.value = String(nodes.value);\n      }\n      nodes = [new Declaration$3(nodes)];\n    } else if (nodes.selector || nodes.selectors) {\n      nodes = [new Rule$4(nodes)];\n    } else if (nodes.name) {\n      nodes = [new AtRule$4(nodes)];\n    } else if (nodes.text) {\n      nodes = [new Comment$3(nodes)];\n    } else {\n      throw new Error(\"Unknown node type in node creation\");\n    }\n    let processed = nodes.map((i) => {\n      if (!i[my$1]) Container.rebuild(i);\n      i = i.proxyOf;\n      if (i.parent) i.parent.removeChild(i);\n      if (i[isClean$1]) markTreeDirty(i);\n      if (!i.raws) i.raws = {};\n      if (typeof i.raws.before === \"undefined\") {\n        if (sample && typeof sample.raws.before !== \"undefined\") {\n          i.raws.before = sample.raws.before.replace(/\\S/g, \"\");\n        }\n      }\n      i.parent = this.proxyOf;\n      return i;\n    });\n    return processed;\n  }\n  prepend(...children) {\n    children = children.reverse();\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, \"prepend\").reverse();\n      for (let node2 of nodes) this.proxyOf.nodes.unshift(node2);\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  push(child) {\n    child.parent = this;\n    this.proxyOf.nodes.push(child);\n    return this;\n  }\n  removeAll() {\n    for (let node2 of this.proxyOf.nodes) node2.parent = void 0;\n    this.proxyOf.nodes = [];\n    this.markDirty();\n    return this;\n  }\n  removeChild(child) {\n    child = this.index(child);\n    this.proxyOf.nodes[child].parent = void 0;\n    this.proxyOf.nodes.splice(child, 1);\n    let index2;\n    for (let id in this.indexes) {\n      index2 = this.indexes[id];\n      if (index2 >= child) {\n        this.indexes[id] = index2 - 1;\n      }\n    }\n    this.markDirty();\n    return this;\n  }\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts;\n      opts = {};\n    }\n    this.walkDecls((decl) => {\n      if (opts.props && !opts.props.includes(decl.prop)) return;\n      if (opts.fast && !decl.value.includes(opts.fast)) return;\n      decl.value = decl.value.replace(pattern, callback);\n    });\n    this.markDirty();\n    return this;\n  }\n  some(condition) {\n    return this.nodes.some(condition);\n  }\n  walk(callback) {\n    return this.each((child, i) => {\n      let result2;\n      try {\n        result2 = callback(child, i);\n      } catch (e) {\n        throw child.addToError(e);\n      }\n      if (result2 !== false && child.walk) {\n        result2 = child.walk(callback);\n      }\n      return result2;\n    });\n  }\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name;\n      return this.walk((child, i) => {\n        if (child.type === \"atrule\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"atrule\" && name.test(child.name)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"atrule\" && child.name === name) {\n        return callback(child, i);\n      }\n    });\n  }\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === \"comment\") {\n        return callback(child, i);\n      }\n    });\n  }\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop;\n      return this.walk((child, i) => {\n        if (child.type === \"decl\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"decl\" && prop.test(child.prop)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"decl\" && child.prop === prop) {\n        return callback(child, i);\n      }\n    });\n  }\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector;\n      return this.walk((child, i) => {\n        if (child.type === \"rule\") {\n          return callback(child, i);\n        }\n      });\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === \"rule\" && selector.test(child.selector)) {\n          return callback(child, i);\n        }\n      });\n    }\n    return this.walk((child, i) => {\n      if (child.type === \"rule\" && child.selector === selector) {\n        return callback(child, i);\n      }\n    });\n  }\n  get first() {\n    if (!this.proxyOf.nodes) return void 0;\n    return this.proxyOf.nodes[0];\n  }\n  get last() {\n    if (!this.proxyOf.nodes) return void 0;\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];\n  }\n};\nContainer$7.registerParse = (dependant) => {\n  parse$4 = dependant;\n};\nContainer$7.registerRule = (dependant) => {\n  Rule$4 = dependant;\n};\nContainer$7.registerAtRule = (dependant) => {\n  AtRule$4 = dependant;\n};\nContainer$7.registerRoot = (dependant) => {\n  Root$6 = dependant;\n};\nvar container = Container$7;\nContainer$7.default = Container$7;\nContainer$7.rebuild = (node2) => {\n  if (node2.type === \"atrule\") {\n    Object.setPrototypeOf(node2, AtRule$4.prototype);\n  } else if (node2.type === \"rule\") {\n    Object.setPrototypeOf(node2, Rule$4.prototype);\n  } else if (node2.type === \"decl\") {\n    Object.setPrototypeOf(node2, Declaration$3.prototype);\n  } else if (node2.type === \"comment\") {\n    Object.setPrototypeOf(node2, Comment$3.prototype);\n  } else if (node2.type === \"root\") {\n    Object.setPrototypeOf(node2, Root$6.prototype);\n  }\n  node2[my$1] = true;\n  if (node2.nodes) {\n    node2.nodes.forEach((child) => {\n      Container$7.rebuild(child);\n    });\n  }\n};\nlet Container$6 = container;\nlet AtRule$3 = class AtRule extends Container$6 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"atrule\";\n  }\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.append(...children);\n  }\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.prepend(...children);\n  }\n};\nvar atRule = AtRule$3;\nAtRule$3.default = AtRule$3;\nContainer$6.registerAtRule(AtRule$3);\nlet Container$5 = container;\nlet LazyResult$4, Processor$3;\nlet Document$3 = class Document2 extends Container$5 {\n  constructor(defaults) {\n    super({ type: \"document\", ...defaults });\n    if (!this.nodes) {\n      this.nodes = [];\n    }\n  }\n  toResult(opts = {}) {\n    let lazy = new LazyResult$4(new Processor$3(), this, opts);\n    return lazy.stringify();\n  }\n};\nDocument$3.registerLazyResult = (dependant) => {\n  LazyResult$4 = dependant;\n};\nDocument$3.registerProcessor = (dependant) => {\n  Processor$3 = dependant;\n};\nvar document$1 = Document$3;\nDocument$3.default = Document$3;\nlet urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = \"\";\n    let i = size | 0;\n    while (i--) {\n      id += alphabet[Math.random() * alphabet.length | 0];\n    }\n    return id;\n  };\n};\nlet nanoid$1 = (size = 21) => {\n  let id = \"\";\n  let i = size | 0;\n  while (i--) {\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};\nvar nonSecure = { nanoid: nanoid$1, customAlphabet };\nlet { existsSync, readFileSync } = require$$2;\nlet { dirname: dirname$1, join } = require$$2;\nlet { SourceMapConsumer: SourceMapConsumer$2, SourceMapGenerator: SourceMapGenerator$2 } = require$$2;\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, \"base64\").toString();\n  } else {\n    return window.atob(str);\n  }\n}\nlet PreviousMap$2 = class PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return;\n    this.loadAnnotation(css);\n    this.inline = this.startWith(this.annotation, \"data:\");\n    let prev = opts.map ? opts.map.prev : void 0;\n    let text = this.loadMap(opts.from, prev);\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from;\n    }\n    if (this.mapFile) this.root = dirname$1(this.mapFile);\n    if (text) this.text = text;\n  }\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer$2(this.text);\n    }\n    return this.consumerCache;\n  }\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    let baseUri = /^data:application\\/json;base64,/;\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n    let uri = /^data:application\\/json,/;\n    let uriMatch = text.match(charsetUri) || text.match(uri);\n    if (uriMatch) {\n      return decodeURIComponent(text.substr(uriMatch[0].length));\n    }\n    let baseUriMatch = text.match(baseCharsetUri) || text.match(baseUri);\n    if (baseUriMatch) {\n      return fromBase64(text.substr(baseUriMatch[0].length));\n    }\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error(\"Unsupported source map encoding \" + encoding);\n  }\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, \"\").trim();\n  }\n  isMap(map) {\n    if (typeof map !== \"object\") return false;\n    return typeof map.mappings === \"string\" || typeof map._mappings === \"string\" || Array.isArray(map.sections);\n  }\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/g);\n    if (!comments) return;\n    let start = css.lastIndexOf(comments.pop());\n    let end = css.indexOf(\"*/\", start);\n    if (start > -1 && end > -1) {\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\n    }\n  }\n  loadFile(path) {\n    this.root = dirname$1(path);\n    if (existsSync(path)) {\n      this.mapFile = path;\n      return readFileSync(path, \"utf-8\").toString().trim();\n    }\n  }\n  loadMap(file, prev) {\n    if (prev === false) return false;\n    if (prev) {\n      if (typeof prev === \"string\") {\n        return prev;\n      } else if (typeof prev === \"function\") {\n        let prevPath = prev(file);\n        if (prevPath) {\n          let map = this.loadFile(prevPath);\n          if (!map) {\n            throw new Error(\n              \"Unable to load previous source map: \" + prevPath.toString()\n            );\n          }\n          return map;\n        }\n      } else if (prev instanceof SourceMapConsumer$2) {\n        return SourceMapGenerator$2.fromSourceMap(prev).toString();\n      } else if (prev instanceof SourceMapGenerator$2) {\n        return prev.toString();\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev);\n      } else {\n        throw new Error(\n          \"Unsupported previous source map format: \" + prev.toString()\n        );\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation);\n    } else if (this.annotation) {\n      let map = this.annotation;\n      if (file) map = join(dirname$1(file), map);\n      return this.loadFile(map);\n    }\n  }\n  startWith(string, start) {\n    if (!string) return false;\n    return string.substr(0, start.length) === start;\n  }\n  withContent() {\n    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n  }\n};\nvar previousMap = PreviousMap$2;\nPreviousMap$2.default = PreviousMap$2;\nlet { nanoid } = nonSecure;\nlet { isAbsolute, resolve: resolve$1 } = require$$2;\nlet { SourceMapConsumer: SourceMapConsumer$1, SourceMapGenerator: SourceMapGenerator$1 } = require$$2;\nlet { fileURLToPath, pathToFileURL: pathToFileURL$1 } = require$$2;\nlet CssSyntaxError$1 = cssSyntaxError;\nlet PreviousMap$1 = previousMap;\nlet terminalHighlight = require$$2;\nlet fromOffsetCache = Symbol(\"fromOffsetCache\");\nlet sourceMapAvailable$1 = Boolean(SourceMapConsumer$1 && SourceMapGenerator$1);\nlet pathAvailable$1 = Boolean(resolve$1 && isAbsolute);\nlet Input$4 = class Input {\n  constructor(css, opts = {}) {\n    if (css === null || typeof css === \"undefined\" || typeof css === \"object\" && !css.toString) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`);\n    }\n    this.css = css.toString();\n    if (this.css[0] === \"\\uFEFF\" || this.css[0] === \"￾\") {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n    if (opts.from) {\n      if (!pathAvailable$1 || /^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve$1(opts.from);\n      }\n    }\n    if (pathAvailable$1 && sourceMapAvailable$1) {\n      let map = new PreviousMap$1(this.css, opts);\n      if (map.text) {\n        this.map = map;\n        let file = map.consumer().file;\n        if (!this.file && file) this.file = this.mapResolve(file);\n      }\n    }\n    if (!this.file) {\n      this.id = \"<input css \" + nanoid(6) + \">\";\n    }\n    if (this.map) this.map.file = this.from;\n  }\n  error(message, line, column, opts = {}) {\n    let endColumn, endLine, result2;\n    if (line && typeof line === \"object\") {\n      let start = line;\n      let end = column;\n      if (typeof start.offset === \"number\") {\n        let pos = this.fromOffset(start.offset);\n        line = pos.line;\n        column = pos.col;\n      } else {\n        line = start.line;\n        column = start.column;\n      }\n      if (typeof end.offset === \"number\") {\n        let pos = this.fromOffset(end.offset);\n        endLine = pos.line;\n        endColumn = pos.col;\n      } else {\n        endLine = end.line;\n        endColumn = end.column;\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line);\n      line = pos.line;\n      column = pos.col;\n    }\n    let origin = this.origin(line, column, endLine, endColumn);\n    if (origin) {\n      result2 = new CssSyntaxError$1(\n        message,\n        origin.endLine === void 0 ? origin.line : { column: origin.column, line: origin.line },\n        origin.endLine === void 0 ? origin.column : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      );\n    } else {\n      result2 = new CssSyntaxError$1(\n        message,\n        endLine === void 0 ? line : { column, line },\n        endLine === void 0 ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      );\n    }\n    result2.input = { column, endColumn, endLine, line, source: this.css };\n    if (this.file) {\n      if (pathToFileURL$1) {\n        result2.input.url = pathToFileURL$1(this.file).toString();\n      }\n      result2.input.file = this.file;\n    }\n    return result2;\n  }\n  fromOffset(offset) {\n    let lastLine, lineToIndex;\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split(\"\\n\");\n      lineToIndex = new Array(lines.length);\n      let prevIndex = 0;\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex;\n        prevIndex += lines[i].length + 1;\n      }\n      this[fromOffsetCache] = lineToIndex;\n    } else {\n      lineToIndex = this[fromOffsetCache];\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1];\n    let min = 0;\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1;\n    } else {\n      let max = lineToIndex.length - 2;\n      let mid;\n      while (min < max) {\n        mid = min + (max - min >> 1);\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1;\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1;\n        } else {\n          min = mid;\n          break;\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    };\n  }\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file;\n    }\n    return resolve$1(this.map.consumer().sourceRoot || this.map.root || \".\", file);\n  }\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false;\n    let consumer = this.map.consumer();\n    let from = consumer.originalPositionFor({ column, line });\n    if (!from.source) return false;\n    let to;\n    if (typeof endLine === \"number\") {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine });\n    }\n    let fromUrl;\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL$1(from.source);\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL$1(this.map.mapFile)\n      );\n    }\n    let result2 = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    };\n    if (fromUrl.protocol === \"file:\") {\n      if (fileURLToPath) {\n        result2.file = fileURLToPath(fromUrl);\n      } else {\n        throw new Error(`file: protocol is not available in this PostCSS build`);\n      }\n    }\n    let source = consumer.sourceContentFor(from.source);\n    if (source) result2.source = source;\n    return result2;\n  }\n  toJSON() {\n    let json = {};\n    for (let name of [\"hasBOM\", \"css\", \"file\", \"id\"]) {\n      if (this[name] != null) {\n        json[name] = this[name];\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map };\n      if (json.map.consumerCache) {\n        json.map.consumerCache = void 0;\n      }\n    }\n    return json;\n  }\n  get from() {\n    return this.file || this.id;\n  }\n};\nvar input = Input$4;\nInput$4.default = Input$4;\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input$4);\n}\nlet Container$4 = container;\nlet LazyResult$3, Processor$2;\nlet Root$5 = class Root extends Container$4 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"root\";\n    if (!this.nodes) this.nodes = [];\n  }\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child);\n    if (sample) {\n      if (type === \"prepend\") {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (let node2 of nodes) {\n          node2.raws.before = sample.raws.before;\n        }\n      }\n    }\n    return nodes;\n  }\n  removeChild(child, ignore) {\n    let index2 = this.index(child);\n    if (!ignore && index2 === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index2].raws.before;\n    }\n    return super.removeChild(child);\n  }\n  toResult(opts = {}) {\n    let lazy = new LazyResult$3(new Processor$2(), this, opts);\n    return lazy.stringify();\n  }\n};\nRoot$5.registerLazyResult = (dependant) => {\n  LazyResult$3 = dependant;\n};\nRoot$5.registerProcessor = (dependant) => {\n  Processor$2 = dependant;\n};\nvar root = Root$5;\nRoot$5.default = Root$5;\nContainer$4.registerRoot(Root$5);\nlet list$2 = {\n  comma(string) {\n    return list$2.split(string, [\",\"], true);\n  },\n  space(string) {\n    let spaces = [\" \", \"\\n\", \"\t\"];\n    return list$2.split(string, spaces);\n  },\n  split(string, separators, last) {\n    let array = [];\n    let current = \"\";\n    let split = false;\n    let func = 0;\n    let inQuote = false;\n    let prevQuote = \"\";\n    let escape = false;\n    for (let letter of string) {\n      if (escape) {\n        escape = false;\n      } else if (letter === \"\\\\\") {\n        escape = true;\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false;\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true;\n        prevQuote = letter;\n      } else if (letter === \"(\") {\n        func += 1;\n      } else if (letter === \")\") {\n        if (func > 0) func -= 1;\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true;\n      }\n      if (split) {\n        if (current !== \"\") array.push(current.trim());\n        current = \"\";\n        split = false;\n      } else {\n        current += letter;\n      }\n    }\n    if (last || current !== \"\") array.push(current.trim());\n    return array;\n  }\n};\nvar list_1 = list$2;\nlist$2.default = list$2;\nlet Container$3 = container;\nlet list$1 = list_1;\nlet Rule$3 = class Rule extends Container$3 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = \"rule\";\n    if (!this.nodes) this.nodes = [];\n  }\n  get selectors() {\n    return list$1.comma(this.selector);\n  }\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null;\n    let sep2 = match ? match[0] : \",\" + this.raw(\"between\", \"beforeOpen\");\n    this.selector = values.join(sep2);\n  }\n};\nvar rule = Rule$3;\nRule$3.default = Rule$3;\nContainer$3.registerRule(Rule$3);\nlet AtRule$2 = atRule;\nlet Comment$2 = comment;\nlet Declaration$2 = declaration;\nlet Input$3 = input;\nlet PreviousMap2 = previousMap;\nlet Root$4 = root;\nlet Rule$2 = rule;\nfunction fromJSON$1(json, inputs) {\n  if (Array.isArray(json)) return json.map((n) => fromJSON$1(n));\n  let { inputs: ownInputs, ...defaults } = json;\n  if (ownInputs) {\n    inputs = [];\n    for (let input2 of ownInputs) {\n      let inputHydrated = { ...input2, __proto__: Input$3.prototype };\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap2.prototype\n        };\n      }\n      inputs.push(inputHydrated);\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map((n) => fromJSON$1(n, inputs));\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source;\n    defaults.source = source;\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId];\n    }\n  }\n  if (defaults.type === \"root\") {\n    return new Root$4(defaults);\n  } else if (defaults.type === \"decl\") {\n    return new Declaration$2(defaults);\n  } else if (defaults.type === \"rule\") {\n    return new Rule$2(defaults);\n  } else if (defaults.type === \"comment\") {\n    return new Comment$2(defaults);\n  } else if (defaults.type === \"atrule\") {\n    return new AtRule$2(defaults);\n  } else {\n    throw new Error(\"Unknown node type: \" + json.type);\n  }\n}\nvar fromJSON_1 = fromJSON$1;\nfromJSON$1.default = fromJSON$1;\nlet { dirname, relative, resolve, sep } = require$$2;\nlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\nlet { pathToFileURL } = require$$2;\nlet Input$2 = input;\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nlet pathAvailable = Boolean(dirname && resolve && relative && sep);\nlet MapGenerator$2 = class MapGenerator {\n  constructor(stringify2, root2, opts, cssString) {\n    this.stringify = stringify2;\n    this.mapOpts = opts.map || {};\n    this.root = root2;\n    this.opts = opts;\n    this.css = cssString;\n    this.originalCSS = cssString;\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n    this.memoizedFileURLs = /* @__PURE__ */ new Map();\n    this.memoizedPaths = /* @__PURE__ */ new Map();\n    this.memoizedURLs = /* @__PURE__ */ new Map();\n  }\n  addAnnotation() {\n    let content;\n    if (this.isInline()) {\n      content = \"data:application/json;base64,\" + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === \"string\") {\n      content = this.mapOpts.annotation;\n    } else if (typeof this.mapOpts.annotation === \"function\") {\n      content = this.mapOpts.annotation(this.opts.to, this.root);\n    } else {\n      content = this.outputFile() + \".map\";\n    }\n    let eol = \"\\n\";\n    if (this.css.includes(\"\\r\\n\")) eol = \"\\r\\n\";\n    this.css += eol + \"/*# sourceMappingURL=\" + content + \" */\";\n  }\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file));\n      let root2 = prev.root || dirname(prev.file);\n      let map;\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text);\n        if (map.sourcesContent) {\n          map.sourcesContent = null;\n        }\n      } else {\n        map = prev.consumer();\n      }\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root2)));\n    }\n  }\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n    if (this.root) {\n      let node2;\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node2 = this.root.nodes[i];\n        if (node2.type !== \"comment\") continue;\n        if (node2.text.startsWith(\"# sourceMappingURL=\")) {\n          this.root.removeChild(i);\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, \"\");\n    }\n  }\n  generate() {\n    this.clearAnnotation();\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap();\n    } else {\n      let result2 = \"\";\n      this.stringify(this.root, (i) => {\n        result2 += i;\n      });\n      return [result2];\n    }\n  }\n  generateMap() {\n    if (this.root) {\n      this.generateString();\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer();\n      prev.file = this.outputFile();\n      this.map = SourceMapGenerator.fromSourceMap(prev, {\n        ignoreInvalidMapping: true\n      });\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile(),\n        ignoreInvalidMapping: true\n      });\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : \"<no source>\"\n      });\n    }\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n    if (this.isInline()) {\n      return [this.css];\n    } else {\n      return [this.css, this.map];\n    }\n  }\n  generateString() {\n    this.css = \"\";\n    this.map = new SourceMapGenerator({\n      file: this.outputFile(),\n      ignoreInvalidMapping: true\n    });\n    let line = 1;\n    let column = 1;\n    let noSource = \"<no source>\";\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: \"\"\n    };\n    let last, lines;\n    this.stringify(this.root, (str, node2, type) => {\n      this.css += str;\n      if (node2 && type !== \"end\") {\n        mapping.generated.line = line;\n        mapping.generated.column = column - 1;\n        if (node2.source && node2.source.start) {\n          mapping.source = this.sourcePath(node2);\n          mapping.original.line = node2.source.start.line;\n          mapping.original.column = node2.source.start.column - 1;\n          this.map.addMapping(mapping);\n        } else {\n          mapping.source = noSource;\n          mapping.original.line = 1;\n          mapping.original.column = 0;\n          this.map.addMapping(mapping);\n        }\n      }\n      lines = str.match(/\\n/g);\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf(\"\\n\");\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n      if (node2 && type !== \"start\") {\n        let p = node2.parent || { raws: {} };\n        let childless = node2.type === \"decl\" || node2.type === \"atrule\" && !node2.nodes;\n        if (!childless || node2 !== p.last || p.raws.semicolon) {\n          if (node2.source && node2.source.end) {\n            mapping.source = this.sourcePath(node2);\n            mapping.original.line = node2.source.end.line;\n            mapping.original.column = node2.source.end.column - 1;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 2;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 1;\n            this.map.addMapping(mapping);\n          }\n        }\n      }\n    });\n  }\n  isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    }\n    if (typeof this.mapOpts.annotation !== \"undefined\") {\n      return this.mapOpts.annotation;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.annotation);\n    }\n    return true;\n  }\n  isInline() {\n    if (typeof this.mapOpts.inline !== \"undefined\") {\n      return this.mapOpts.inline;\n    }\n    let annotation = this.mapOpts.annotation;\n    if (typeof annotation !== \"undefined\" && annotation !== true) {\n      return false;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.inline);\n    }\n    return true;\n  }\n  isMap() {\n    if (typeof this.opts.map !== \"undefined\") {\n      return !!this.opts.map;\n    }\n    return this.previous().length > 0;\n  }\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== \"undefined\") {\n      return this.mapOpts.sourcesContent;\n    }\n    if (this.previous().length) {\n      return this.previous().some((i) => i.withContent());\n    }\n    return true;\n  }\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to);\n    } else if (this.opts.from) {\n      return this.path(this.opts.from);\n    } else {\n      return \"to.css\";\n    }\n  }\n  path(file) {\n    if (this.mapOpts.absolute) return file;\n    if (file.charCodeAt(0) === 60) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    let cached = this.memoizedPaths.get(file);\n    if (cached) return cached;\n    let from = this.opts.to ? dirname(this.opts.to) : \".\";\n    if (typeof this.mapOpts.annotation === \"string\") {\n      from = dirname(resolve(from, this.mapOpts.annotation));\n    }\n    let path = relative(from, file);\n    this.memoizedPaths.set(file, path);\n    return path;\n  }\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      if (this.root) {\n        this.root.walk((node2) => {\n          if (node2.source && node2.source.input.map) {\n            let map = node2.source.input.map;\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map);\n            }\n          }\n        });\n      } else {\n        let input2 = new Input$2(this.originalCSS, this.opts);\n        if (input2.map) this.previousMaps.push(input2.map);\n      }\n    }\n    return this.previousMaps;\n  }\n  setSourcesContent() {\n    let already = {};\n    if (this.root) {\n      this.root.walk((node2) => {\n        if (node2.source) {\n          let from = node2.source.input.from;\n          if (from && !already[from]) {\n            already[from] = true;\n            let fromUrl = this.usesFileUrls ? this.toFileUrl(from) : this.toUrl(this.path(from));\n            this.map.setSourceContent(fromUrl, node2.source.input.css);\n          }\n        }\n      });\n    } else if (this.css) {\n      let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : \"<no source>\";\n      this.map.setSourceContent(from, this.css);\n    }\n  }\n  sourcePath(node2) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from);\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node2.source.input.from);\n    } else {\n      return this.toUrl(this.path(node2.source.input.from));\n    }\n  }\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString(\"base64\");\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    }\n  }\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path);\n    if (cached) return cached;\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString();\n      this.memoizedFileURLs.set(path, fileURL);\n      return fileURL;\n    } else {\n      throw new Error(\n        \"`map.absolute` option is not available in this PostCSS build\"\n      );\n    }\n  }\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path);\n    if (cached) return cached;\n    if (sep === \"\\\\\") {\n      path = path.replace(/\\\\/g, \"/\");\n    }\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n    this.memoizedURLs.set(path, url);\n    return url;\n  }\n};\nvar mapGenerator = MapGenerator$2;\nconst SINGLE_QUOTE = \"'\".charCodeAt(0);\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\nconst BACKSLASH = \"\\\\\".charCodeAt(0);\nconst SLASH = \"/\".charCodeAt(0);\nconst NEWLINE = \"\\n\".charCodeAt(0);\nconst SPACE = \" \".charCodeAt(0);\nconst FEED = \"\\f\".charCodeAt(0);\nconst TAB = \"\t\".charCodeAt(0);\nconst CR = \"\\r\".charCodeAt(0);\nconst OPEN_SQUARE = \"[\".charCodeAt(0);\nconst CLOSE_SQUARE = \"]\".charCodeAt(0);\nconst OPEN_PARENTHESES = \"(\".charCodeAt(0);\nconst CLOSE_PARENTHESES = \")\".charCodeAt(0);\nconst OPEN_CURLY = \"{\".charCodeAt(0);\nconst CLOSE_CURLY = \"}\".charCodeAt(0);\nconst SEMICOLON = \";\".charCodeAt(0);\nconst ASTERISK = \"*\".charCodeAt(0);\nconst COLON = \":\".charCodeAt(0);\nconst AT = \"@\".charCodeAt(0);\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/;\nconst RE_HEX_ESCAPE = /[\\da-f]/i;\nvar tokenize = function tokenizer(input2, options = {}) {\n  let css = input2.css.valueOf();\n  let ignore = options.ignoreErrors;\n  let code, content, escape, next, quote;\n  let currentToken, escaped, escapePos, n, prev;\n  let length = css.length;\n  let pos = 0;\n  let buffer = [];\n  let returned = [];\n  function position() {\n    return pos;\n  }\n  function unclosed(what) {\n    throw input2.error(\"Unclosed \" + what, pos);\n  }\n  function endOfFile() {\n    return returned.length === 0 && pos >= length;\n  }\n  function nextToken(opts) {\n    if (returned.length) return returned.pop();\n    if (pos >= length) return;\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n    code = css.charCodeAt(pos);\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);\n        currentToken = [\"space\", css.slice(pos, next)];\n        pos = next - 1;\n        break;\n      }\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code);\n        currentToken = [controlChar, controlChar, pos];\n        break;\n      }\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : \"\";\n        n = css.charCodeAt(pos + 1);\n        if (prev === \"url\" && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {\n          next = pos;\n          do {\n            escaped = false;\n            next = css.indexOf(\")\", next + 1);\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos;\n                break;\n              } else {\n                unclosed(\"bracket\");\n              }\n            }\n            escapePos = next;\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1;\n              escaped = !escaped;\n            }\n          } while (escaped);\n          currentToken = [\"brackets\", css.slice(pos, next + 1), pos, next];\n          pos = next;\n        } else {\n          next = css.indexOf(\")\", pos + 1);\n          content = css.slice(pos, next + 1);\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = [\"(\", \"(\", pos];\n          } else {\n            currentToken = [\"brackets\", content, pos, next];\n            pos = next;\n          }\n        }\n        break;\n      }\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\n        next = pos;\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1;\n              break;\n            } else {\n              unclosed(\"string\");\n            }\n          }\n          escapePos = next;\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n        currentToken = [\"string\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1;\n        RE_AT_END.test(css);\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1;\n        } else {\n          next = RE_AT_END.lastIndex - 2;\n        }\n        currentToken = [\"at-word\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      case BACKSLASH: {\n        next = pos;\n        escape = true;\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1;\n          escape = !escape;\n        }\n        code = css.charCodeAt(next + 1);\n        if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {\n          next += 1;\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1;\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1;\n            }\n          }\n        }\n        currentToken = [\"word\", css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break;\n      }\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf(\"*/\", pos + 2) + 1;\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length;\n            } else {\n              unclosed(\"comment\");\n            }\n          }\n          currentToken = [\"comment\", css.slice(pos, next + 1), pos, next];\n          pos = next;\n        } else {\n          RE_WORD_END.lastIndex = pos + 1;\n          RE_WORD_END.test(css);\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1;\n          } else {\n            next = RE_WORD_END.lastIndex - 2;\n          }\n          currentToken = [\"word\", css.slice(pos, next + 1), pos, next];\n          buffer.push(currentToken);\n          pos = next;\n        }\n        break;\n      }\n    }\n    pos++;\n    return currentToken;\n  }\n  function back(token) {\n    returned.push(token);\n  }\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  };\n};\nlet AtRule$1 = atRule;\nlet Comment$1 = comment;\nlet Declaration$1 = declaration;\nlet Root$3 = root;\nlet Rule$1 = rule;\nlet tokenizer2 = tokenize;\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n};\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i];\n    let pos = token[3] || token[2];\n    if (pos) return pos;\n  }\n}\nlet Parser$1 = class Parser {\n  constructor(input2) {\n    this.input = input2;\n    this.root = new Root$3();\n    this.current = this.root;\n    this.spaces = \"\";\n    this.semicolon = false;\n    this.createTokenizer();\n    this.root.source = { input: input2, start: { column: 1, line: 1, offset: 0 } };\n  }\n  atrule(token) {\n    let node2 = new AtRule$1();\n    node2.name = token[1].slice(1);\n    if (node2.name === \"\") {\n      this.unnamedAtrule(node2, token);\n    }\n    this.init(node2, token[2]);\n    let type;\n    let prev;\n    let shift;\n    let last = false;\n    let open = false;\n    let params = [];\n    let brackets = [];\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n      type = token[0];\n      if (type === \"(\" || type === \"[\") {\n        brackets.push(type === \"(\" ? \")\" : \"]\");\n      } else if (type === \"{\" && brackets.length > 0) {\n        brackets.push(\"}\");\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n      }\n      if (brackets.length === 0) {\n        if (type === \";\") {\n          node2.source.end = this.getPosition(token[2]);\n          node2.source.end.offset++;\n          this.semicolon = true;\n          break;\n        } else if (type === \"{\") {\n          open = true;\n          break;\n        } else if (type === \"}\") {\n          if (params.length > 0) {\n            shift = params.length - 1;\n            prev = params[shift];\n            while (prev && prev[0] === \"space\") {\n              prev = params[--shift];\n            }\n            if (prev) {\n              node2.source.end = this.getPosition(prev[3] || prev[2]);\n              node2.source.end.offset++;\n            }\n          }\n          this.end(token);\n          break;\n        } else {\n          params.push(token);\n        }\n      } else {\n        params.push(token);\n      }\n      if (this.tokenizer.endOfFile()) {\n        last = true;\n        break;\n      }\n    }\n    node2.raws.between = this.spacesAndCommentsFromEnd(params);\n    if (params.length) {\n      node2.raws.afterName = this.spacesAndCommentsFromStart(params);\n      this.raw(node2, \"params\", params);\n      if (last) {\n        token = params[params.length - 1];\n        node2.source.end = this.getPosition(token[3] || token[2]);\n        node2.source.end.offset++;\n        this.spaces = node2.raws.between;\n        node2.raws.between = \"\";\n      }\n    } else {\n      node2.raws.afterName = \"\";\n      node2.params = \"\";\n    }\n    if (open) {\n      node2.nodes = [];\n      this.current = node2;\n    }\n  }\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens);\n    if (colon === false) return;\n    let founded = 0;\n    let token;\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j];\n      if (token[0] !== \"space\") {\n        founded += 1;\n        if (founded === 2) break;\n      }\n    }\n    throw this.input.error(\n      \"Missed semicolon\",\n      token[0] === \"word\" ? token[3] + 1 : token[2]\n    );\n  }\n  colon(tokens) {\n    let brackets = 0;\n    let prev, token, type;\n    for (let [i, element] of tokens.entries()) {\n      token = element;\n      type = token[0];\n      if (type === \"(\") {\n        brackets += 1;\n      }\n      if (type === \")\") {\n        brackets -= 1;\n      }\n      if (brackets === 0 && type === \":\") {\n        if (!prev) {\n          this.doubleColon(token);\n        } else if (prev[0] === \"word\" && prev[1] === \"progid\") {\n          continue;\n        } else {\n          return i;\n        }\n      }\n      prev = token;\n    }\n    return false;\n  }\n  comment(token) {\n    let node2 = new Comment$1();\n    this.init(node2, token[2]);\n    node2.source.end = this.getPosition(token[3] || token[2]);\n    node2.source.end.offset++;\n    let text = token[1].slice(2, -2);\n    if (/^\\s*$/.test(text)) {\n      node2.text = \"\";\n      node2.raws.left = text;\n      node2.raws.right = \"\";\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n      node2.text = match[2];\n      node2.raws.left = match[1];\n      node2.raws.right = match[3];\n    }\n  }\n  createTokenizer() {\n    this.tokenizer = tokenizer2(this.input);\n  }\n  decl(tokens, customProperty) {\n    let node2 = new Declaration$1();\n    this.init(node2, tokens[0][2]);\n    let last = tokens[tokens.length - 1];\n    if (last[0] === \";\") {\n      this.semicolon = true;\n      tokens.pop();\n    }\n    node2.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    );\n    node2.source.end.offset++;\n    while (tokens[0][0] !== \"word\") {\n      if (tokens.length === 1) this.unknownWord(tokens);\n      node2.raws.before += tokens.shift()[1];\n    }\n    node2.source.start = this.getPosition(tokens[0][2]);\n    node2.prop = \"\";\n    while (tokens.length) {\n      let type = tokens[0][0];\n      if (type === \":\" || type === \"space\" || type === \"comment\") {\n        break;\n      }\n      node2.prop += tokens.shift()[1];\n    }\n    node2.raws.between = \"\";\n    let token;\n    while (tokens.length) {\n      token = tokens.shift();\n      if (token[0] === \":\") {\n        node2.raws.between += token[1];\n        break;\n      } else {\n        if (token[0] === \"word\" && /\\w/.test(token[1])) {\n          this.unknownWord([token]);\n        }\n        node2.raws.between += token[1];\n      }\n    }\n    if (node2.prop[0] === \"_\" || node2.prop[0] === \"*\") {\n      node2.raws.before += node2.prop[0];\n      node2.prop = node2.prop.slice(1);\n    }\n    let firstSpaces = [];\n    let next;\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== \"space\" && next !== \"comment\") break;\n      firstSpaces.push(tokens.shift());\n    }\n    this.precheckMissedSemicolon(tokens);\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token[1].toLowerCase() === \"!important\") {\n        node2.important = true;\n        let string = this.stringFrom(tokens, i);\n        string = this.spacesFromEnd(tokens) + string;\n        if (string !== \" !important\") node2.raws.important = string;\n        break;\n      } else if (token[1].toLowerCase() === \"important\") {\n        let cache = tokens.slice(0);\n        let str = \"\";\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0];\n          if (str.trim().startsWith(\"!\") && type !== \"space\") {\n            break;\n          }\n          str = cache.pop()[1] + str;\n        }\n        if (str.trim().startsWith(\"!\")) {\n          node2.important = true;\n          node2.raws.important = str;\n          tokens = cache;\n        }\n      }\n      if (token[0] !== \"space\" && token[0] !== \"comment\") {\n        break;\n      }\n    }\n    let hasWord = tokens.some((i) => i[0] !== \"space\" && i[0] !== \"comment\");\n    if (hasWord) {\n      node2.raws.between += firstSpaces.map((i) => i[1]).join(\"\");\n      firstSpaces = [];\n    }\n    this.raw(node2, \"value\", firstSpaces.concat(tokens), customProperty);\n    if (node2.value.includes(\":\") && !customProperty) {\n      this.checkMissedSemicolon(tokens);\n    }\n  }\n  doubleColon(token) {\n    throw this.input.error(\n      \"Double colon\",\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    );\n  }\n  emptyRule(token) {\n    let node2 = new Rule$1();\n    this.init(node2, token[2]);\n    node2.selector = \"\";\n    node2.raws.between = \"\";\n    this.current = node2;\n  }\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.semicolon = false;\n    this.current.raws.after = (this.current.raws.after || \"\") + this.spaces;\n    this.spaces = \"\";\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2]);\n      this.current.source.end.offset++;\n      this.current = this.current.parent;\n    } else {\n      this.unexpectedClose(token);\n    }\n  }\n  endFile() {\n    if (this.current.parent) this.unclosedBlock();\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.current.raws.after = (this.current.raws.after || \"\") + this.spaces;\n    this.root.source.end = this.getPosition(this.tokenizer.position());\n  }\n  freeSemicolon(token) {\n    this.spaces += token[1];\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1];\n      if (prev && prev.type === \"rule\" && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces;\n        this.spaces = \"\";\n      }\n    }\n  }\n  // Helpers\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset);\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    };\n  }\n  init(node2, offset) {\n    this.current.push(node2);\n    node2.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    };\n    node2.raws.before = this.spaces;\n    this.spaces = \"\";\n    if (node2.type !== \"comment\") this.semicolon = false;\n  }\n  other(start) {\n    let end = false;\n    let type = null;\n    let colon = false;\n    let bracket = null;\n    let brackets = [];\n    let customProperty = start[1].startsWith(\"--\");\n    let tokens = [];\n    let token = start;\n    while (token) {\n      type = token[0];\n      tokens.push(token);\n      if (type === \"(\" || type === \"[\") {\n        if (!bracket) bracket = token;\n        brackets.push(type === \"(\" ? \")\" : \"]\");\n      } else if (customProperty && colon && type === \"{\") {\n        if (!bracket) bracket = token;\n        brackets.push(\"}\");\n      } else if (brackets.length === 0) {\n        if (type === \";\") {\n          if (colon) {\n            this.decl(tokens, customProperty);\n            return;\n          } else {\n            break;\n          }\n        } else if (type === \"{\") {\n          this.rule(tokens);\n          return;\n        } else if (type === \"}\") {\n          this.tokenizer.back(tokens.pop());\n          end = true;\n          break;\n        } else if (type === \":\") {\n          colon = true;\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n        if (brackets.length === 0) bracket = null;\n      }\n      token = this.tokenizer.nextToken();\n    }\n    if (this.tokenizer.endOfFile()) end = true;\n    if (brackets.length > 0) this.unclosedBracket(bracket);\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0];\n          if (token !== \"space\" && token !== \"comment\") break;\n          this.tokenizer.back(tokens.pop());\n        }\n      }\n      this.decl(tokens, customProperty);\n    } else {\n      this.unknownWord(tokens);\n    }\n  }\n  parse() {\n    let token;\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n      switch (token[0]) {\n        case \"space\":\n          this.spaces += token[1];\n          break;\n        case \";\":\n          this.freeSemicolon(token);\n          break;\n        case \"}\":\n          this.end(token);\n          break;\n        case \"comment\":\n          this.comment(token);\n          break;\n        case \"at-word\":\n          this.atrule(token);\n          break;\n        case \"{\":\n          this.emptyRule(token);\n          break;\n        default:\n          this.other(token);\n          break;\n      }\n    }\n    this.endFile();\n  }\n  precheckMissedSemicolon() {\n  }\n  raw(node2, prop, tokens, customProperty) {\n    let token, type;\n    let length = tokens.length;\n    let value = \"\";\n    let clean = true;\n    let next, prev;\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i];\n      type = token[0];\n      if (type === \"space\" && i === length - 1 && !customProperty) {\n        clean = false;\n      } else if (type === \"comment\") {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : \"empty\";\n        next = tokens[i + 1] ? tokens[i + 1][0] : \"empty\";\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === \",\") {\n            clean = false;\n          } else {\n            value += token[1];\n          }\n        } else {\n          clean = false;\n        }\n      } else {\n        value += token[1];\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], \"\");\n      node2.raws[prop] = { raw, value };\n    }\n    node2[prop] = value;\n  }\n  rule(tokens) {\n    tokens.pop();\n    let node2 = new Rule$1();\n    this.init(node2, tokens[0][2]);\n    node2.raws.between = this.spacesAndCommentsFromEnd(tokens);\n    this.raw(node2, \"selector\", tokens);\n    this.current = node2;\n  }\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = \"\";\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== \"space\" && lastTokenType !== \"comment\") break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces;\n  }\n  // Errors\n  spacesAndCommentsFromStart(tokens) {\n    let next;\n    let spaces = \"\";\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== \"space\" && next !== \"comment\") break;\n      spaces += tokens.shift()[1];\n    }\n    return spaces;\n  }\n  spacesFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = \"\";\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== \"space\") break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces;\n  }\n  stringFrom(tokens, from) {\n    let result2 = \"\";\n    for (let i = from; i < tokens.length; i++) {\n      result2 += tokens[i][1];\n    }\n    tokens.splice(from, tokens.length - from);\n    return result2;\n  }\n  unclosedBlock() {\n    let pos = this.current.source.start;\n    throw this.input.error(\"Unclosed block\", pos.line, pos.column);\n  }\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      \"Unclosed bracket\",\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    );\n  }\n  unexpectedClose(token) {\n    throw this.input.error(\n      \"Unexpected }\",\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    );\n  }\n  unknownWord(tokens) {\n    throw this.input.error(\n      \"Unknown word\",\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    );\n  }\n  unnamedAtrule(node2, token) {\n    throw this.input.error(\n      \"At-rule without name\",\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    );\n  }\n};\nvar parser = Parser$1;\nlet Container$2 = container;\nlet Input$1 = input;\nlet Parser2 = parser;\nfunction parse$3(css, opts) {\n  let input2 = new Input$1(css, opts);\n  let parser2 = new Parser2(input2);\n  try {\n    parser2.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (e.name === \"CssSyntaxError\" && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse SCSS with the standard CSS parser; try again with the postcss-scss parser\";\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse Sass with the standard CSS parser; try again with the postcss-sass parser\";\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += \"\\nYou tried to parse Less with the standard CSS parser; try again with the postcss-less parser\";\n        }\n      }\n    }\n    throw e;\n  }\n  return parser2.root;\n}\nvar parse_1 = parse$3;\nparse$3.default = parse$3;\nContainer$2.registerParse(parse$3);\nlet Warning$2 = class Warning {\n  constructor(text, opts = {}) {\n    this.type = \"warning\";\n    this.text = text;\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts);\n      this.line = range.start.line;\n      this.column = range.start.column;\n      this.endLine = range.end.line;\n      this.endColumn = range.end.column;\n    }\n    for (let opt in opts) this[opt] = opts[opt];\n  }\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message;\n    }\n    if (this.plugin) {\n      return this.plugin + \": \" + this.text;\n    }\n    return this.text;\n  }\n};\nvar warning = Warning$2;\nWarning$2.default = Warning$2;\nlet Warning$1 = warning;\nlet Result$3 = class Result {\n  constructor(processor2, root2, opts) {\n    this.processor = processor2;\n    this.messages = [];\n    this.root = root2;\n    this.opts = opts;\n    this.css = void 0;\n    this.map = void 0;\n  }\n  toString() {\n    return this.css;\n  }\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n    let warning2 = new Warning$1(text, opts);\n    this.messages.push(warning2);\n    return warning2;\n  }\n  warnings() {\n    return this.messages.filter((i) => i.type === \"warning\");\n  }\n  get content() {\n    return this.css;\n  }\n};\nvar result = Result$3;\nResult$3.default = Result$3;\nlet printed = {};\nvar warnOnce$2 = function warnOnce(message) {\n  if (printed[message]) return;\n  printed[message] = true;\n  if (typeof console !== \"undefined\" && console.warn) {\n    console.warn(message);\n  }\n};\nlet Container$1 = container;\nlet Document$2 = document$1;\nlet MapGenerator$1 = mapGenerator;\nlet parse$2 = parse_1;\nlet Result$2 = result;\nlet Root$2 = root;\nlet stringify$2 = stringify_1;\nlet { isClean, my } = symbols;\nlet warnOnce$1 = warnOnce$2;\nconst TYPE_TO_CLASS_NAME = {\n  atrule: \"AtRule\",\n  comment: \"Comment\",\n  decl: \"Declaration\",\n  document: \"Document\",\n  root: \"Root\",\n  rule: \"Rule\"\n};\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n};\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n};\nconst CHILDREN = 0;\nfunction isPromise(obj) {\n  return typeof obj === \"object\" && typeof obj.then === \"function\";\n}\nfunction getEvents(node2) {\n  let key = false;\n  let type = TYPE_TO_CLASS_NAME[node2.type];\n  if (node2.type === \"decl\") {\n    key = node2.prop.toLowerCase();\n  } else if (node2.type === \"atrule\") {\n    key = node2.name.toLowerCase();\n  }\n  if (key && node2.append) {\n    return [\n      type,\n      type + \"-\" + key,\n      CHILDREN,\n      type + \"Exit\",\n      type + \"Exit-\" + key\n    ];\n  } else if (key) {\n    return [type, type + \"-\" + key, type + \"Exit\", type + \"Exit-\" + key];\n  } else if (node2.append) {\n    return [type, CHILDREN, type + \"Exit\"];\n  } else {\n    return [type, type + \"Exit\"];\n  }\n}\nfunction toStack(node2) {\n  let events;\n  if (node2.type === \"document\") {\n    events = [\"Document\", CHILDREN, \"DocumentExit\"];\n  } else if (node2.type === \"root\") {\n    events = [\"Root\", CHILDREN, \"RootExit\"];\n  } else {\n    events = getEvents(node2);\n  }\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node: node2,\n    visitorIndex: 0,\n    visitors: []\n  };\n}\nfunction cleanMarks(node2) {\n  node2[isClean] = false;\n  if (node2.nodes) node2.nodes.forEach((i) => cleanMarks(i));\n  return node2;\n}\nlet postcss$2 = {};\nlet LazyResult$2 = class LazyResult {\n  constructor(processor2, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n    let root2;\n    if (typeof css === \"object\" && css !== null && (css.type === \"root\" || css.type === \"document\")) {\n      root2 = cleanMarks(css);\n    } else if (css instanceof LazyResult || css instanceof Result$2) {\n      root2 = cleanMarks(css.root);\n      if (css.map) {\n        if (typeof opts.map === \"undefined\") opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      let parser2 = parse$2;\n      if (opts.syntax) parser2 = opts.syntax.parse;\n      if (opts.parser) parser2 = opts.parser;\n      if (parser2.parse) parser2 = parser2.parse;\n      try {\n        root2 = parser2(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n      if (root2 && !root2[my]) {\n        Container$1.rebuild(root2);\n      }\n    }\n    this.result = new Result$2(processor2, root2, opts);\n    this.helpers = { ...postcss$2, postcss: postcss$2, result: this.result };\n    this.plugins = this.processor.plugins.map((plugin2) => {\n      if (typeof plugin2 === \"object\" && plugin2.prepare) {\n        return { ...plugin2, ...plugin2.prepare(this.result) };\n      } else {\n        return plugin2;\n      }\n    });\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    if (this.processed) return Promise.resolve(this.result);\n    if (!this.processing) {\n      this.processing = this.runAsync();\n    }\n    return this.processing;\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  getAsyncError() {\n    throw new Error(\"Use process(css).then(cb) to work with async plugins\");\n  }\n  handleError(error, node2) {\n    let plugin2 = this.result.lastPlugin;\n    try {\n      if (node2) node2.addToError(error);\n      this.error = error;\n      if (error.name === \"CssSyntaxError\" && !error.plugin) {\n        error.plugin = plugin2.postcssPlugin;\n        error.setMessage();\n      } else if (plugin2.postcssVersion) {\n        if (process.env.NODE_ENV !== \"production\") {\n          let pluginName = plugin2.postcssPlugin;\n          let pluginVer = plugin2.postcssVersion;\n          let runtimeVer = this.result.processor.version;\n          let a = pluginVer.split(\".\");\n          let b = runtimeVer.split(\".\");\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error(\n              \"Unknown error from PostCSS plugin. Your current PostCSS version is \" + runtimeVer + \", but \" + pluginName + \" uses \" + pluginVer + \". Perhaps this is the source of the error below.\"\n            );\n          }\n        }\n      }\n    } catch (err) {\n      if (console && console.error) console.error(err);\n    }\n    return error;\n  }\n  prepareVisitors() {\n    this.listeners = {};\n    let add = (plugin2, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = [];\n      this.listeners[type].push([plugin2, cb]);\n    };\n    for (let plugin2 of this.plugins) {\n      if (typeof plugin2 === \"object\") {\n        for (let event in plugin2) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin2.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`\n            );\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin2[event] === \"object\") {\n              for (let filter in plugin2[event]) {\n                if (filter === \"*\") {\n                  add(plugin2, event, plugin2[event][filter]);\n                } else {\n                  add(\n                    plugin2,\n                    event + \"-\" + filter.toLowerCase(),\n                    plugin2[event][filter]\n                  );\n                }\n              }\n            } else if (typeof plugin2[event] === \"function\") {\n              add(plugin2, event, plugin2[event]);\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0;\n  }\n  async runAsync() {\n    this.plugin = 0;\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin2 = this.plugins[i];\n      let promise = this.runOnRoot(plugin2);\n      if (isPromise(promise)) {\n        try {\n          await promise;\n        } catch (error) {\n          throw this.handleError(error);\n        }\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root2 = this.result.root;\n      while (!root2[isClean]) {\n        root2[isClean] = true;\n        let stack = [toStack(root2)];\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack);\n          if (isPromise(promise)) {\n            try {\n              await promise;\n            } catch (e) {\n              let node2 = stack[stack.length - 1].node;\n              throw this.handleError(e, node2);\n            }\n          }\n        }\n      }\n      if (this.listeners.OnceExit) {\n        for (let [plugin2, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin2;\n          try {\n            if (root2.type === \"document\") {\n              let roots = root2.nodes.map(\n                (subRoot) => visitor(subRoot, this.helpers)\n              );\n              await Promise.all(roots);\n            } else {\n              await visitor(root2, this.helpers);\n            }\n          } catch (e) {\n            throw this.handleError(e);\n          }\n        }\n      }\n    }\n    this.processed = true;\n    return this.stringify();\n  }\n  runOnRoot(plugin2) {\n    this.result.lastPlugin = plugin2;\n    try {\n      if (typeof plugin2 === \"object\" && plugin2.Once) {\n        if (this.result.root.type === \"document\") {\n          let roots = this.result.root.nodes.map(\n            (root2) => plugin2.Once(root2, this.helpers)\n          );\n          if (isPromise(roots[0])) {\n            return Promise.all(roots);\n          }\n          return roots;\n        }\n        return plugin2.Once(this.result.root, this.helpers);\n      } else if (typeof plugin2 === \"function\") {\n        return plugin2(this.result.root, this.result);\n      }\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  stringify() {\n    if (this.error) throw this.error;\n    if (this.stringified) return this.result;\n    this.stringified = true;\n    this.sync();\n    let opts = this.result.opts;\n    let str = stringify$2;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n    let map = new MapGenerator$1(str, this.result.root, this.result.opts);\n    let data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n    return this.result;\n  }\n  sync() {\n    if (this.error) throw this.error;\n    if (this.processed) return this.result;\n    this.processed = true;\n    if (this.processing) {\n      throw this.getAsyncError();\n    }\n    for (let plugin2 of this.plugins) {\n      let promise = this.runOnRoot(plugin2);\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root2 = this.result.root;\n      while (!root2[isClean]) {\n        root2[isClean] = true;\n        this.walkSync(root2);\n      }\n      if (this.listeners.OnceExit) {\n        if (root2.type === \"document\") {\n          for (let subRoot of root2.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot);\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root2);\n        }\n      }\n    }\n    return this.result;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!(\"from\" in this.opts)) {\n        warnOnce$1(\n          \"Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning.\"\n        );\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  toString() {\n    return this.css;\n  }\n  visitSync(visitors, node2) {\n    for (let [plugin2, visitor] of visitors) {\n      this.result.lastPlugin = plugin2;\n      let promise;\n      try {\n        promise = visitor(node2, this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node2.proxyOf);\n      }\n      if (node2.type !== \"root\" && node2.type !== \"document\" && !node2.parent) {\n        return true;\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n  }\n  visitTick(stack) {\n    let visit2 = stack[stack.length - 1];\n    let { node: node2, visitors } = visit2;\n    if (node2.type !== \"root\" && node2.type !== \"document\" && !node2.parent) {\n      stack.pop();\n      return;\n    }\n    if (visitors.length > 0 && visit2.visitorIndex < visitors.length) {\n      let [plugin2, visitor] = visitors[visit2.visitorIndex];\n      visit2.visitorIndex += 1;\n      if (visit2.visitorIndex === visitors.length) {\n        visit2.visitors = [];\n        visit2.visitorIndex = 0;\n      }\n      this.result.lastPlugin = plugin2;\n      try {\n        return visitor(node2.toProxy(), this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node2);\n      }\n    }\n    if (visit2.iterator !== 0) {\n      let iterator = visit2.iterator;\n      let child;\n      while (child = node2.nodes[node2.indexes[iterator]]) {\n        node2.indexes[iterator] += 1;\n        if (!child[isClean]) {\n          child[isClean] = true;\n          stack.push(toStack(child));\n          return;\n        }\n      }\n      visit2.iterator = 0;\n      delete node2.indexes[iterator];\n    }\n    let events = visit2.events;\n    while (visit2.eventIndex < events.length) {\n      let event = events[visit2.eventIndex];\n      visit2.eventIndex += 1;\n      if (event === CHILDREN) {\n        if (node2.nodes && node2.nodes.length) {\n          node2[isClean] = true;\n          visit2.iterator = node2.getIterator();\n        }\n        return;\n      } else if (this.listeners[event]) {\n        visit2.visitors = this.listeners[event];\n        return;\n      }\n    }\n    stack.pop();\n  }\n  walkSync(node2) {\n    node2[isClean] = true;\n    let events = getEvents(node2);\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node2.nodes) {\n          node2.each((child) => {\n            if (!child[isClean]) this.walkSync(child);\n          });\n        }\n      } else {\n        let visitors = this.listeners[event];\n        if (visitors) {\n          if (this.visitSync(visitors, node2.toProxy())) return;\n        }\n      }\n    }\n  }\n  warnings() {\n    return this.sync().warnings();\n  }\n  get content() {\n    return this.stringify().content;\n  }\n  get css() {\n    return this.stringify().css;\n  }\n  get map() {\n    return this.stringify().map;\n  }\n  get messages() {\n    return this.sync().messages;\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get root() {\n    return this.sync().root;\n  }\n  get [Symbol.toStringTag]() {\n    return \"LazyResult\";\n  }\n};\nLazyResult$2.registerPostcss = (dependant) => {\n  postcss$2 = dependant;\n};\nvar lazyResult = LazyResult$2;\nLazyResult$2.default = LazyResult$2;\nRoot$2.registerLazyResult(LazyResult$2);\nDocument$2.registerLazyResult(LazyResult$2);\nlet MapGenerator2 = mapGenerator;\nlet parse$1 = parse_1;\nconst Result$1 = result;\nlet stringify$1 = stringify_1;\nlet warnOnce2 = warnOnce$2;\nlet NoWorkResult$1 = class NoWorkResult {\n  constructor(processor2, css, opts) {\n    css = css.toString();\n    this.stringified = false;\n    this._processor = processor2;\n    this._css = css;\n    this._opts = opts;\n    this._map = void 0;\n    let root2;\n    let str = stringify$1;\n    this.result = new Result$1(this._processor, root2, this._opts);\n    this.result.css = css;\n    let self = this;\n    Object.defineProperty(this.result, \"root\", {\n      get() {\n        return self.root;\n      }\n    });\n    let map = new MapGenerator2(str, root2, this._opts, css);\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate();\n      if (generatedCSS) {\n        this.result.css = generatedCSS;\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap;\n      }\n    } else {\n      map.clearAnnotation();\n      this.result.css = map.css;\n    }\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    return Promise.resolve(this.result);\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  sync() {\n    if (this.error) throw this.error;\n    return this.result;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!(\"from\" in this._opts)) {\n        warnOnce2(\n          \"Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning.\"\n        );\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  toString() {\n    return this._css;\n  }\n  warnings() {\n    return [];\n  }\n  get content() {\n    return this.result.css;\n  }\n  get css() {\n    return this.result.css;\n  }\n  get map() {\n    return this.result.map;\n  }\n  get messages() {\n    return [];\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get root() {\n    if (this._root) {\n      return this._root;\n    }\n    let root2;\n    let parser2 = parse$1;\n    try {\n      root2 = parser2(this._css, this._opts);\n    } catch (error) {\n      this.error = error;\n    }\n    if (this.error) {\n      throw this.error;\n    } else {\n      this._root = root2;\n      return root2;\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"NoWorkResult\";\n  }\n};\nvar noWorkResult = NoWorkResult$1;\nNoWorkResult$1.default = NoWorkResult$1;\nlet Document$1 = document$1;\nlet LazyResult$1 = lazyResult;\nlet NoWorkResult2 = noWorkResult;\nlet Root$1 = root;\nlet Processor$1 = class Processor {\n  constructor(plugins = []) {\n    this.version = \"8.4.49\";\n    this.plugins = this.normalize(plugins);\n  }\n  normalize(plugins) {\n    let normalized = [];\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i();\n      } else if (i.postcss) {\n        i = i.postcss;\n      }\n      if (typeof i === \"object\" && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === \"object\" && i.postcssPlugin) {\n        normalized.push(i);\n      } else if (typeof i === \"function\") {\n        normalized.push(i);\n      } else if (typeof i === \"object\" && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== \"production\") {\n          throw new Error(\n            \"PostCSS syntaxes cannot be used as plugins. Instead, please use one of the syntax/parser/stringifier options as outlined in your PostCSS runner documentation.\"\n          );\n        }\n      } else {\n        throw new Error(i + \" is not a PostCSS plugin\");\n      }\n    }\n    return normalized;\n  }\n  process(css, opts = {}) {\n    if (!this.plugins.length && !opts.parser && !opts.stringifier && !opts.syntax) {\n      return new NoWorkResult2(this, css, opts);\n    } else {\n      return new LazyResult$1(this, css, opts);\n    }\n  }\n  use(plugin2) {\n    this.plugins = this.plugins.concat(this.normalize([plugin2]));\n    return this;\n  }\n};\nvar processor = Processor$1;\nProcessor$1.default = Processor$1;\nRoot$1.registerProcessor(Processor$1);\nDocument$1.registerProcessor(Processor$1);\nlet AtRule2 = atRule;\nlet Comment2 = comment;\nlet Container2 = container;\nlet CssSyntaxError2 = cssSyntaxError;\nlet Declaration2 = declaration;\nlet Document22 = document$1;\nlet fromJSON = fromJSON_1;\nlet Input2 = input;\nlet LazyResult2 = lazyResult;\nlet list = list_1;\nlet Node2 = node;\nlet parse = parse_1;\nlet Processor2 = processor;\nlet Result2 = result;\nlet Root2 = root;\nlet Rule2 = rule;\nlet stringify = stringify_1;\nlet Warning2 = warning;\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0];\n  }\n  return new Processor2(plugins);\n}\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false;\n  function creator(...args) {\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true;\n      console.warn(\n        name + \": postcss.plugin was deprecated. Migration guide:\\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration\"\n      );\n      if (process.env.LANG && process.env.LANG.startsWith(\"cn\")) {\n        console.warn(\n          name + \": 里面 postcss.plugin 被弃用. 迁移指南:\\nhttps://www.w3ctech.com/topic/2226\"\n        );\n      }\n    }\n    let transformer = initializer(...args);\n    transformer.postcssPlugin = name;\n    transformer.postcssVersion = new Processor2().version;\n    return transformer;\n  }\n  let cache;\n  Object.defineProperty(creator, \"postcss\", {\n    get() {\n      if (!cache) cache = creator();\n      return cache;\n    }\n  });\n  creator.process = function(css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts);\n  };\n  return creator;\n};\npostcss.stringify = stringify;\npostcss.parse = parse;\npostcss.fromJSON = fromJSON;\npostcss.list = list;\npostcss.comment = (defaults) => new Comment2(defaults);\npostcss.atRule = (defaults) => new AtRule2(defaults);\npostcss.decl = (defaults) => new Declaration2(defaults);\npostcss.rule = (defaults) => new Rule2(defaults);\npostcss.root = (defaults) => new Root2(defaults);\npostcss.document = (defaults) => new Document22(defaults);\npostcss.CssSyntaxError = CssSyntaxError2;\npostcss.Declaration = Declaration2;\npostcss.Container = Container2;\npostcss.Processor = Processor2;\npostcss.Document = Document22;\npostcss.Comment = Comment2;\npostcss.Warning = Warning2;\npostcss.AtRule = AtRule2;\npostcss.Result = Result2;\npostcss.Input = Input2;\npostcss.Rule = Rule2;\npostcss.Root = Root2;\npostcss.Node = Node2;\nLazyResult2.registerPostcss(postcss);\nvar postcss_1 = postcss;\npostcss.default = postcss;\nconst postcss$1 = /* @__PURE__ */ getDefaultExportFromCjs(postcss_1);\npostcss$1.stringify;\npostcss$1.fromJSON;\npostcss$1.plugin;\npostcss$1.parse;\npostcss$1.list;\npostcss$1.document;\npostcss$1.comment;\npostcss$1.atRule;\npostcss$1.rule;\npostcss$1.decl;\npostcss$1.root;\npostcss$1.CssSyntaxError;\npostcss$1.Declaration;\npostcss$1.Container;\npostcss$1.Processor;\npostcss$1.Document;\npostcss$1.Comment;\npostcss$1.Warning;\npostcss$1.AtRule;\npostcss$1.Result;\npostcss$1.Input;\npostcss$1.Rule;\npostcss$1.Root;\npostcss$1.Node;\nvar NodeType$1 = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType$1 || {});\nfunction parseCSSText(cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g;\n  const propertyDelimiter = /:(.+)/;\n  const comment2 = /\\/\\*.*?\\*\\//g;\n  cssText.replace(comment2, \"\").split(listDelimiter).forEach(function(item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[camelize(tmp[0].trim())] = tmp[1].trim());\n    }\n  });\n  return res;\n}\nfunction toCSSText(style) {\n  const properties = [];\n  for (const name in style) {\n    const value = style[name];\n    if (typeof value !== \"string\") continue;\n    const normalizedName = hyphenate(name);\n    properties.push(`${normalizedName}: ${value};`);\n  }\n  return properties.join(\" \");\n}\nconst camelizeRE = /-([a-z])/g;\nconst CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nconst camelize = (str) => {\n  if (CUSTOM_PROPERTY_REGEX.test(str)) return str;\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n};\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = (str) => {\n  return str.replace(hyphenateRE, \"-$1\").toLowerCase();\n};\nclass BaseRRNode {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n  constructor(..._args) {\n    __publicField(this, \"parentElement\", null);\n    __publicField(this, \"parentNode\", null);\n    __publicField(this, \"ownerDocument\");\n    __publicField(this, \"firstChild\", null);\n    __publicField(this, \"lastChild\", null);\n    __publicField(this, \"previousSibling\", null);\n    __publicField(this, \"nextSibling\", null);\n    __publicField(this, \"ELEMENT_NODE\", 1);\n    __publicField(this, \"TEXT_NODE\", 3);\n    // corresponding nodeType value of standard HTML Node\n    __publicField(this, \"nodeType\");\n    __publicField(this, \"nodeName\");\n    __publicField(this, \"RRNodeType\");\n  }\n  get childNodes() {\n    const childNodes = [];\n    let childIterator = this.firstChild;\n    while (childIterator) {\n      childNodes.push(childIterator);\n      childIterator = childIterator.nextSibling;\n    }\n    return childNodes;\n  }\n  contains(node2) {\n    if (!(node2 instanceof BaseRRNode)) return false;\n    else if (node2.ownerDocument !== this.ownerDocument) return false;\n    else if (node2 === this) return true;\n    while (node2.parentNode) {\n      if (node2.parentNode === this) return true;\n      node2 = node2.parentNode;\n    }\n    return false;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  appendChild(_newChild) {\n    throw new Error(\n      `RRDomException: Failed to execute 'appendChild' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  insertBefore(_newChild, _refChild) {\n    throw new Error(\n      `RRDomException: Failed to execute 'insertBefore' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removeChild(_node) {\n    throw new Error(\n      `RRDomException: Failed to execute 'removeChild' on 'RRNode': This RRNode type does not support this method.`\n    );\n  }\n  toString() {\n    return \"RRNode\";\n  }\n}\nclass BaseRRDocument extends BaseRRNode {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(...args) {\n    super(args);\n    __publicField(this, \"nodeType\", 9);\n    __publicField(this, \"nodeName\", \"#document\");\n    __publicField(this, \"compatMode\", \"CSS1Compat\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Document);\n    __publicField(this, \"textContent\", null);\n    this.ownerDocument = this;\n  }\n  get documentElement() {\n    return this.childNodes.find(\n      (node2) => node2.RRNodeType === NodeType$1.Element && node2.tagName === \"HTML\"\n    ) || null;\n  }\n  get body() {\n    var _a;\n    return ((_a = this.documentElement) == null ? void 0 : _a.childNodes.find(\n      (node2) => node2.RRNodeType === NodeType$1.Element && node2.tagName === \"BODY\"\n    )) || null;\n  }\n  get head() {\n    var _a;\n    return ((_a = this.documentElement) == null ? void 0 : _a.childNodes.find(\n      (node2) => node2.RRNodeType === NodeType$1.Element && node2.tagName === \"HEAD\"\n    )) || null;\n  }\n  get implementation() {\n    return this;\n  }\n  get firstElementChild() {\n    return this.documentElement;\n  }\n  appendChild(newChild) {\n    const nodeType = newChild.RRNodeType;\n    if (nodeType === NodeType$1.Element || nodeType === NodeType$1.DocumentType) {\n      if (this.childNodes.some((s) => s.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'appendChild' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? \"RRElement\" : \"RRDoctype\"} on RRDocument allowed.`\n        );\n      }\n    }\n    const child = appendChild(this, newChild);\n    child.parentElement = null;\n    return child;\n  }\n  insertBefore(newChild, refChild) {\n    const nodeType = newChild.RRNodeType;\n    if (nodeType === NodeType$1.Element || nodeType === NodeType$1.DocumentType) {\n      if (this.childNodes.some((s) => s.RRNodeType === nodeType)) {\n        throw new Error(\n          `RRDomException: Failed to execute 'insertBefore' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? \"RRElement\" : \"RRDoctype\"} on RRDocument allowed.`\n        );\n      }\n    }\n    const child = insertBefore(this, newChild, refChild);\n    child.parentElement = null;\n    return child;\n  }\n  removeChild(node2) {\n    return removeChild(this, node2);\n  }\n  open() {\n    this.firstChild = null;\n    this.lastChild = null;\n  }\n  close() {\n  }\n  /**\n   * Adhoc implementation for setting xhtml namespace in rebuilt.ts (rrweb-snapshot).\n   * There are two lines used this function:\n   * 1. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\"\\>')\n   * 2. doc.write('\\<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\"\\>')\n   */\n  write(content) {\n    let publicId;\n    if (content === '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">')\n      publicId = \"-//W3C//DTD XHTML 1.0 Transitional//EN\";\n    else if (content === '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">')\n      publicId = \"-//W3C//DTD HTML 4.0 Transitional//EN\";\n    if (publicId) {\n      const doctype = this.createDocumentType(\"html\", publicId, \"\");\n      this.open();\n      this.appendChild(doctype);\n    }\n  }\n  createDocument(_namespace, _qualifiedName, _doctype) {\n    return new BaseRRDocument();\n  }\n  createDocumentType(qualifiedName, publicId, systemId) {\n    const doctype = new BaseRRDocumentType(qualifiedName, publicId, systemId);\n    doctype.ownerDocument = this;\n    return doctype;\n  }\n  createElement(tagName) {\n    const element = new BaseRRElement(tagName);\n    element.ownerDocument = this;\n    return element;\n  }\n  createElementNS(_namespaceURI, qualifiedName) {\n    return this.createElement(qualifiedName);\n  }\n  createTextNode(data) {\n    const text = new BaseRRText(data);\n    text.ownerDocument = this;\n    return text;\n  }\n  createComment(data) {\n    const comment2 = new BaseRRComment(data);\n    comment2.ownerDocument = this;\n    return comment2;\n  }\n  createCDATASection(data) {\n    const CDATASection = new BaseRRCDATASection(data);\n    CDATASection.ownerDocument = this;\n    return CDATASection;\n  }\n  toString() {\n    return \"RRDocument\";\n  }\n}\nclass BaseRRDocumentType extends BaseRRNode {\n  constructor(qualifiedName, publicId, systemId) {\n    super();\n    __publicField(this, \"nodeType\", 10);\n    __publicField(this, \"RRNodeType\", NodeType$1.DocumentType);\n    __publicField(this, \"name\");\n    __publicField(this, \"publicId\");\n    __publicField(this, \"systemId\");\n    __publicField(this, \"textContent\", null);\n    this.name = qualifiedName;\n    this.publicId = publicId;\n    this.systemId = systemId;\n    this.nodeName = qualifiedName;\n  }\n  toString() {\n    return \"RRDocumentType\";\n  }\n}\nclass BaseRRElement extends BaseRRNode {\n  constructor(tagName) {\n    super();\n    __publicField(this, \"nodeType\", 1);\n    __publicField(this, \"RRNodeType\", NodeType$1.Element);\n    __publicField(this, \"tagName\");\n    __publicField(this, \"attributes\", {});\n    __publicField(this, \"shadowRoot\", null);\n    __publicField(this, \"scrollLeft\");\n    __publicField(this, \"scrollTop\");\n    this.tagName = tagName.toUpperCase();\n    this.nodeName = tagName.toUpperCase();\n  }\n  get textContent() {\n    let result2 = \"\";\n    this.childNodes.forEach((node2) => result2 += node2.textContent);\n    return result2;\n  }\n  set textContent(textContent) {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.appendChild(this.ownerDocument.createTextNode(textContent));\n  }\n  get classList() {\n    return new ClassList(\n      this.attributes.class,\n      (newClassName) => {\n        this.attributes.class = newClassName;\n      }\n    );\n  }\n  get id() {\n    return this.attributes.id || \"\";\n  }\n  get className() {\n    return this.attributes.class || \"\";\n  }\n  get style() {\n    const style = this.attributes.style ? parseCSSText(this.attributes.style) : {};\n    const hyphenateRE2 = /\\B([A-Z])/g;\n    style.setProperty = (name, value, priority) => {\n      if (hyphenateRE2.test(name)) return;\n      const normalizedName = camelize(name);\n      if (!value) delete style[normalizedName];\n      else style[normalizedName] = value;\n      if (priority === \"important\") style[normalizedName] += \" !important\";\n      this.attributes.style = toCSSText(style);\n    };\n    style.removeProperty = (name) => {\n      if (hyphenateRE2.test(name)) return \"\";\n      const normalizedName = camelize(name);\n      const value = style[normalizedName] || \"\";\n      delete style[normalizedName];\n      this.attributes.style = toCSSText(style);\n      return value;\n    };\n    return style;\n  }\n  getAttribute(name) {\n    if (this.attributes[name] === void 0) return null;\n    return this.attributes[name];\n  }\n  setAttribute(name, attribute) {\n    this.attributes[name] = attribute;\n  }\n  setAttributeNS(_namespace, qualifiedName, value) {\n    this.setAttribute(qualifiedName, value);\n  }\n  removeAttribute(name) {\n    delete this.attributes[name];\n  }\n  appendChild(newChild) {\n    return appendChild(this, newChild);\n  }\n  insertBefore(newChild, refChild) {\n    return insertBefore(this, newChild, refChild);\n  }\n  removeChild(node2) {\n    return removeChild(this, node2);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init) {\n    const shadowRoot = this.ownerDocument.createElement(\"SHADOWROOT\");\n    this.shadowRoot = shadowRoot;\n    return shadowRoot;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  dispatchEvent(_event) {\n    return true;\n  }\n  toString() {\n    let attributeString = \"\";\n    for (const attribute in this.attributes) {\n      attributeString += `${attribute}=\"${this.attributes[attribute]}\" `;\n    }\n    return `${this.tagName} ${attributeString}`;\n  }\n}\nclass BaseRRMediaElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"currentTime\");\n    __publicField(this, \"volume\");\n    __publicField(this, \"paused\");\n    __publicField(this, \"muted\");\n    __publicField(this, \"playbackRate\");\n    __publicField(this, \"loop\");\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attachShadow(_init) {\n    throw new Error(\n      `RRDomException: Failed to execute 'attachShadow' on 'RRElement': This RRElement does not support attachShadow`\n    );\n  }\n  play() {\n    this.paused = false;\n  }\n  pause() {\n    this.paused = true;\n  }\n}\nclass BaseRRDialogElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"tagName\", \"DIALOG\");\n    __publicField(this, \"nodeName\", \"DIALOG\");\n  }\n  get isModal() {\n    return this.getAttribute(\"rr_open_mode\") === \"modal\";\n  }\n  get open() {\n    return this.getAttribute(\"open\") !== null;\n  }\n  close() {\n    this.removeAttribute(\"open\");\n    this.removeAttribute(\"rr_open_mode\");\n  }\n  show() {\n    this.setAttribute(\"open\", \"\");\n    this.setAttribute(\"rr_open_mode\", \"non-modal\");\n  }\n  showModal() {\n    this.setAttribute(\"open\", \"\");\n    this.setAttribute(\"rr_open_mode\", \"modal\");\n  }\n}\nclass BaseRRText extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeType\", 3);\n    __publicField(this, \"nodeName\", \"#text\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Text);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRText text=${JSON.stringify(this.data)}`;\n  }\n}\nclass BaseRRComment extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeType\", 8);\n    __publicField(this, \"nodeName\", \"#comment\");\n    __publicField(this, \"RRNodeType\", NodeType$1.Comment);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRComment text=${JSON.stringify(this.data)}`;\n  }\n}\nclass BaseRRCDATASection extends BaseRRNode {\n  constructor(data) {\n    super();\n    __publicField(this, \"nodeName\", \"#cdata-section\");\n    __publicField(this, \"nodeType\", 4);\n    __publicField(this, \"RRNodeType\", NodeType$1.CDATA);\n    __publicField(this, \"data\");\n    this.data = data;\n  }\n  get textContent() {\n    return this.data;\n  }\n  set textContent(textContent) {\n    this.data = textContent;\n  }\n  toString() {\n    return `RRCDATASection data=${JSON.stringify(this.data)}`;\n  }\n}\nclass ClassList {\n  constructor(classText, onChange) {\n    __publicField(this, \"onChange\");\n    __publicField(this, \"classes\", []);\n    __publicField(this, \"add\", (...classNames) => {\n      for (const item of classNames) {\n        const className = String(item);\n        if (this.classes.indexOf(className) >= 0) continue;\n        this.classes.push(className);\n      }\n      this.onChange && this.onChange(this.classes.join(\" \"));\n    });\n    __publicField(this, \"remove\", (...classNames) => {\n      this.classes = this.classes.filter(\n        (item) => classNames.indexOf(item) === -1\n      );\n      this.onChange && this.onChange(this.classes.join(\" \"));\n    });\n    if (classText) {\n      const classes = classText.trim().split(/\\s+/);\n      this.classes.push(...classes);\n    }\n    this.onChange = onChange;\n  }\n}\nfunction appendChild(parent, newChild) {\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n  if (parent.lastChild) {\n    parent.lastChild.nextSibling = newChild;\n    newChild.previousSibling = parent.lastChild;\n  } else {\n    parent.firstChild = newChild;\n    newChild.previousSibling = null;\n  }\n  parent.lastChild = newChild;\n  newChild.nextSibling = null;\n  newChild.parentNode = parent;\n  newChild.parentElement = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\nfunction insertBefore(parent, newChild, refChild) {\n  if (!refChild) return appendChild(parent, newChild);\n  if (refChild.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'insertBefore' on 'RRNode': The RRNode before which the new node is to be inserted is not a child of this RRNode.\"\n    );\n  if (newChild === refChild) return newChild;\n  if (newChild.parentNode) newChild.parentNode.removeChild(newChild);\n  newChild.previousSibling = refChild.previousSibling;\n  refChild.previousSibling = newChild;\n  newChild.nextSibling = refChild;\n  if (newChild.previousSibling) newChild.previousSibling.nextSibling = newChild;\n  else parent.firstChild = newChild;\n  newChild.parentElement = parent;\n  newChild.parentNode = parent;\n  newChild.ownerDocument = parent.ownerDocument;\n  return newChild;\n}\nfunction removeChild(parent, child) {\n  if (child.parentNode !== parent)\n    throw new Error(\n      \"Failed to execute 'removeChild' on 'RRNode': The RRNode to be removed is not a child of this RRNode.\"\n    );\n  if (child.previousSibling)\n    child.previousSibling.nextSibling = child.nextSibling;\n  else parent.firstChild = child.nextSibling;\n  if (child.nextSibling)\n    child.nextSibling.previousSibling = child.previousSibling;\n  else parent.lastChild = child.previousSibling;\n  child.previousSibling = null;\n  child.nextSibling = null;\n  child.parentElement = null;\n  child.parentNode = null;\n  return child;\n}\nvar NodeType = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"PLACEHOLDER\"] = 0] = \"PLACEHOLDER\";\n  NodeType2[NodeType2[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n  NodeType2[NodeType2[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n  NodeType2[NodeType2[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n  NodeType2[NodeType2[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n  NodeType2[NodeType2[\"ENTITY_REFERENCE_NODE\"] = 5] = \"ENTITY_REFERENCE_NODE\";\n  NodeType2[NodeType2[\"ENTITY_NODE\"] = 6] = \"ENTITY_NODE\";\n  NodeType2[NodeType2[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n  NodeType2[NodeType2[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n  NodeType2[NodeType2[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n  return NodeType2;\n})(NodeType || {});\nconst NAMESPACES = {\n  svg: \"http://www.w3.org/2000/svg\",\n  \"xlink:href\": \"http://www.w3.org/1999/xlink\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\nconst SVGTagMap = {\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  clippath: \"clipPath\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  foreignobject: \"foreignObject\",\n  glyphref: \"glyphRef\",\n  lineargradient: \"linearGradient\",\n  radialgradient: \"radialGradient\"\n};\nlet createdNodeSet = null;\nfunction diff(oldTree, newTree, replayer, rrnodeMirror = newTree.mirror || newTree.ownerDocument.mirror) {\n  oldTree = diffBeforeUpdatingChildren(\n    oldTree,\n    newTree,\n    replayer,\n    rrnodeMirror\n  );\n  diffChildren(oldTree, newTree, replayer, rrnodeMirror);\n  diffAfterUpdatingChildren(oldTree, newTree, replayer);\n}\nfunction diffBeforeUpdatingChildren(oldTree, newTree, replayer, rrnodeMirror) {\n  var _a;\n  if (replayer.afterAppend && !createdNodeSet) {\n    createdNodeSet = /* @__PURE__ */ new WeakSet();\n    setTimeout(() => {\n      createdNodeSet = null;\n    }, 0);\n  }\n  if (!sameNodeType(oldTree, newTree)) {\n    const calibratedOldTree = createOrGetNode(\n      newTree,\n      replayer.mirror,\n      rrnodeMirror\n    );\n    (_a = oldTree.parentNode) == null ? void 0 : _a.replaceChild(calibratedOldTree, oldTree);\n    oldTree = calibratedOldTree;\n  }\n  switch (newTree.RRNodeType) {\n    case NodeType$1.Document: {\n      if (!nodeMatching(oldTree, newTree, replayer.mirror, rrnodeMirror)) {\n        const newMeta = rrnodeMirror.getMeta(newTree);\n        if (newMeta) {\n          replayer.mirror.removeNodeFromMap(oldTree);\n          oldTree.close();\n          oldTree.open();\n          replayer.mirror.add(oldTree, newMeta);\n          createdNodeSet == null ? void 0 : createdNodeSet.add(oldTree);\n        }\n      }\n      break;\n    }\n    case NodeType$1.Element: {\n      const oldElement = oldTree;\n      const newRRElement = newTree;\n      switch (newRRElement.tagName) {\n        case \"IFRAME\": {\n          const oldContentDocument = oldTree.contentDocument;\n          if (!oldContentDocument) break;\n          diff(\n            oldContentDocument,\n            newTree.contentDocument,\n            replayer,\n            rrnodeMirror\n          );\n          break;\n        }\n      }\n      if (newRRElement.shadowRoot) {\n        if (!oldElement.shadowRoot) oldElement.attachShadow({ mode: \"open\" });\n        diffChildren(\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          oldElement.shadowRoot,\n          newRRElement.shadowRoot,\n          replayer,\n          rrnodeMirror\n        );\n      }\n      diffProps(oldElement, newRRElement, rrnodeMirror);\n      break;\n    }\n  }\n  return oldTree;\n}\nfunction diffAfterUpdatingChildren(oldTree, newTree, replayer) {\n  var _a;\n  switch (newTree.RRNodeType) {\n    case NodeType$1.Document: {\n      const scrollData = newTree.scrollData;\n      scrollData && replayer.applyScroll(scrollData, true);\n      break;\n    }\n    case NodeType$1.Element: {\n      const oldElement = oldTree;\n      const newRRElement = newTree;\n      newRRElement.scrollData && replayer.applyScroll(newRRElement.scrollData, true);\n      newRRElement.inputData && replayer.applyInput(newRRElement.inputData);\n      switch (newRRElement.tagName) {\n        case \"AUDIO\":\n        case \"VIDEO\": {\n          const oldMediaElement = oldTree;\n          const newMediaRRElement = newRRElement;\n          if (newMediaRRElement.paused !== void 0)\n            newMediaRRElement.paused ? void oldMediaElement.pause() : void oldMediaElement.play();\n          if (newMediaRRElement.muted !== void 0)\n            oldMediaElement.muted = newMediaRRElement.muted;\n          if (newMediaRRElement.volume !== void 0)\n            oldMediaElement.volume = newMediaRRElement.volume;\n          if (newMediaRRElement.currentTime !== void 0)\n            oldMediaElement.currentTime = newMediaRRElement.currentTime;\n          if (newMediaRRElement.playbackRate !== void 0)\n            oldMediaElement.playbackRate = newMediaRRElement.playbackRate;\n          if (newMediaRRElement.loop !== void 0)\n            oldMediaElement.loop = newMediaRRElement.loop;\n          break;\n        }\n        case \"CANVAS\": {\n          const rrCanvasElement = newTree;\n          if (rrCanvasElement.rr_dataURL !== null) {\n            const image = document.createElement(\"img\");\n            image.onload = () => {\n              const ctx = oldElement.getContext(\"2d\");\n              if (ctx) {\n                ctx.drawImage(image, 0, 0, image.width, image.height);\n              }\n            };\n            image.src = rrCanvasElement.rr_dataURL;\n          }\n          rrCanvasElement.canvasMutations.forEach(\n            (canvasMutation) => replayer.applyCanvas(\n              canvasMutation.event,\n              canvasMutation.mutation,\n              oldTree\n            )\n          );\n          break;\n        }\n        case \"STYLE\": {\n          const styleSheet = oldElement.sheet;\n          styleSheet && newTree.rules.forEach(\n            (data) => replayer.applyStyleSheetMutation(data, styleSheet)\n          );\n          break;\n        }\n        case \"DIALOG\": {\n          const dialog = oldElement;\n          const rrDialog = newRRElement;\n          const wasOpen = dialog.open;\n          const wasModal = dialog.matches(\"dialog:modal\");\n          const shouldBeOpen = rrDialog.open;\n          const shouldBeModal = rrDialog.isModal;\n          const modalChanged = wasModal !== shouldBeModal;\n          const openChanged = wasOpen !== shouldBeOpen;\n          if (modalChanged || wasOpen && openChanged) dialog.close();\n          if (shouldBeOpen && (openChanged || modalChanged)) {\n            try {\n              if (shouldBeModal) dialog.showModal();\n              else dialog.show();\n            } catch (e) {\n              console.warn(e);\n            }\n          }\n          break;\n        }\n      }\n      break;\n    }\n    case NodeType$1.Text:\n    case NodeType$1.Comment:\n    case NodeType$1.CDATA: {\n      if (oldTree.textContent !== newTree.data)\n        oldTree.textContent = newTree.data;\n      break;\n    }\n  }\n  if (createdNodeSet == null ? void 0 : createdNodeSet.has(oldTree)) {\n    createdNodeSet.delete(oldTree);\n    (_a = replayer.afterAppend) == null ? void 0 : _a.call(replayer, oldTree, replayer.mirror.getId(oldTree));\n  }\n}\nfunction diffProps(oldTree, newTree, rrnodeMirror) {\n  const oldAttributes = oldTree.attributes;\n  const newAttributes = newTree.attributes;\n  for (const name in newAttributes) {\n    const newValue = newAttributes[name];\n    const sn = rrnodeMirror.getMeta(newTree);\n    if ((sn == null ? void 0 : sn.isSVG) && NAMESPACES[name])\n      oldTree.setAttributeNS(NAMESPACES[name], name, newValue);\n    else if (newTree.tagName === \"CANVAS\" && name === \"rr_dataURL\") {\n      const image = document.createElement(\"img\");\n      image.src = newValue;\n      image.onload = () => {\n        const ctx = oldTree.getContext(\"2d\");\n        if (ctx) {\n          ctx.drawImage(image, 0, 0, image.width, image.height);\n        }\n      };\n    } else if (newTree.tagName === \"IFRAME\" && name === \"srcdoc\") continue;\n    else {\n      try {\n        oldTree.setAttribute(name, newValue);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n  }\n  for (const { name } of Array.from(oldAttributes))\n    if (!(name in newAttributes)) oldTree.removeAttribute(name);\n  newTree.scrollLeft && (oldTree.scrollLeft = newTree.scrollLeft);\n  newTree.scrollTop && (oldTree.scrollTop = newTree.scrollTop);\n}\nfunction diffChildren(oldTree, newTree, replayer, rrnodeMirror) {\n  const oldChildren = Array.from(oldTree.childNodes);\n  const newChildren = newTree.childNodes;\n  if (oldChildren.length === 0 && newChildren.length === 0) return;\n  let oldStartIndex = 0, oldEndIndex = oldChildren.length - 1, newStartIndex = 0, newEndIndex = newChildren.length - 1;\n  let oldStartNode = oldChildren[oldStartIndex], oldEndNode = oldChildren[oldEndIndex], newStartNode = newChildren[newStartIndex], newEndNode = newChildren[newEndIndex];\n  let oldIdToIndex = void 0, indexInOld = void 0;\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    if (oldStartNode === void 0) {\n      oldStartNode = oldChildren[++oldStartIndex];\n    } else if (oldEndNode === void 0) {\n      oldEndNode = oldChildren[--oldEndIndex];\n    } else if (\n      // same first node?\n      nodeMatching(oldStartNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldStartNode = oldChildren[++oldStartIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else if (\n      // same last node?\n      nodeMatching(oldEndNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      oldEndNode = oldChildren[--oldEndIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the first old node the same as the last new node?\n      nodeMatching(oldStartNode, newEndNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        oldTree.insertBefore(oldStartNode, oldEndNode.nextSibling);\n      } catch (e) {\n        console.warn(e);\n      }\n      oldStartNode = oldChildren[++oldStartIndex];\n      newEndNode = newChildren[--newEndIndex];\n    } else if (\n      // is the last old node the same as the first new node?\n      nodeMatching(oldEndNode, newStartNode, replayer.mirror, rrnodeMirror)\n    ) {\n      try {\n        oldTree.insertBefore(oldEndNode, oldStartNode);\n      } catch (e) {\n        console.warn(e);\n      }\n      oldEndNode = oldChildren[--oldEndIndex];\n      newStartNode = newChildren[++newStartIndex];\n    } else {\n      if (!oldIdToIndex) {\n        oldIdToIndex = {};\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n          const oldChild2 = oldChildren[i];\n          if (oldChild2 && replayer.mirror.hasNode(oldChild2))\n            oldIdToIndex[replayer.mirror.getId(oldChild2)] = i;\n        }\n      }\n      indexInOld = oldIdToIndex[rrnodeMirror.getId(newStartNode)];\n      const nodeToMove = oldChildren[indexInOld];\n      if (indexInOld !== void 0 && nodeToMove && nodeMatching(nodeToMove, newStartNode, replayer.mirror, rrnodeMirror)) {\n        try {\n          oldTree.insertBefore(nodeToMove, oldStartNode);\n        } catch (e) {\n          console.warn(e);\n        }\n        oldChildren[indexInOld] = void 0;\n      } else {\n        const newNode = createOrGetNode(\n          newStartNode,\n          replayer.mirror,\n          rrnodeMirror\n        );\n        if (oldTree.nodeName === \"#document\" && oldStartNode && /**\n        * Special case 1: one document isn't allowed to have two doctype nodes at the same time, so we need to remove the old one first before inserting the new one.\n        * How this case happens: A parent document in the old tree already has a doctype node with an id e.g. #1. A new full snapshot rebuilds the replayer with a new doctype node with another id #2. According to the algorithm, the new doctype node will be inserted before the old one, which is not allowed by the Document standard.\n        */\n        (newNode.nodeType === newNode.DOCUMENT_TYPE_NODE && oldStartNode.nodeType === oldStartNode.DOCUMENT_TYPE_NODE || /**\n        * Special case 2: one document isn't allowed to have two HTMLElements at the same time, so we need to remove the old one first before inserting the new one.\n        * How this case happens: A mounted iframe element has an automatically created HTML element. We should delete it before inserting a serialized one. Otherwise, an error 'Only one element on document allowed' will be thrown.\n        */\n        newNode.nodeType === newNode.ELEMENT_NODE && oldStartNode.nodeType === oldStartNode.ELEMENT_NODE)) {\n          oldTree.removeChild(oldStartNode);\n          replayer.mirror.removeNodeFromMap(oldStartNode);\n          oldStartNode = oldChildren[++oldStartIndex];\n        }\n        try {\n          oldTree.insertBefore(newNode, oldStartNode || null);\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n      newStartNode = newChildren[++newStartIndex];\n    }\n  }\n  if (oldStartIndex > oldEndIndex) {\n    const referenceRRNode = newChildren[newEndIndex + 1];\n    let referenceNode = null;\n    if (referenceRRNode)\n      referenceNode = replayer.mirror.getNode(\n        rrnodeMirror.getId(referenceRRNode)\n      );\n    for (; newStartIndex <= newEndIndex; ++newStartIndex) {\n      const newNode = createOrGetNode(\n        newChildren[newStartIndex],\n        replayer.mirror,\n        rrnodeMirror\n      );\n      try {\n        oldTree.insertBefore(newNode, referenceNode);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  } else if (newStartIndex > newEndIndex) {\n    for (; oldStartIndex <= oldEndIndex; oldStartIndex++) {\n      const node2 = oldChildren[oldStartIndex];\n      if (!node2 || node2.parentNode !== oldTree) continue;\n      try {\n        oldTree.removeChild(node2);\n        replayer.mirror.removeNodeFromMap(node2);\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  }\n  let oldChild = oldTree.firstChild;\n  let newChild = newTree.firstChild;\n  while (oldChild !== null && newChild !== null) {\n    diff(oldChild, newChild, replayer, rrnodeMirror);\n    oldChild = oldChild.nextSibling;\n    newChild = newChild.nextSibling;\n  }\n}\nfunction createOrGetNode(rrNode, domMirror, rrnodeMirror) {\n  const nodeId = rrnodeMirror.getId(rrNode);\n  const sn = rrnodeMirror.getMeta(rrNode);\n  let node2 = null;\n  if (nodeId > -1) node2 = domMirror.getNode(nodeId);\n  if (node2 !== null && sameNodeType(node2, rrNode)) return node2;\n  switch (rrNode.RRNodeType) {\n    case NodeType$1.Document:\n      node2 = new Document();\n      break;\n    case NodeType$1.DocumentType:\n      node2 = document.implementation.createDocumentType(\n        rrNode.name,\n        rrNode.publicId,\n        rrNode.systemId\n      );\n      break;\n    case NodeType$1.Element: {\n      let tagName = rrNode.tagName.toLowerCase();\n      tagName = SVGTagMap[tagName] || tagName;\n      if (sn && \"isSVG\" in sn && (sn == null ? void 0 : sn.isSVG)) {\n        node2 = document.createElementNS(NAMESPACES[\"svg\"], tagName);\n      } else node2 = document.createElement(rrNode.tagName);\n      break;\n    }\n    case NodeType$1.Text:\n      node2 = document.createTextNode(rrNode.data);\n      break;\n    case NodeType$1.Comment:\n      node2 = document.createComment(rrNode.data);\n      break;\n    case NodeType$1.CDATA:\n      node2 = document.createCDATASection(rrNode.data);\n      break;\n  }\n  if (sn) domMirror.add(node2, { ...sn });\n  try {\n    createdNodeSet == null ? void 0 : createdNodeSet.add(node2);\n  } catch (e) {\n  }\n  return node2;\n}\nfunction sameNodeType(node1, node2) {\n  if (node1.nodeType !== node2.nodeType) return false;\n  return node1.nodeType !== node1.ELEMENT_NODE || node1.tagName.toUpperCase() === node2.tagName;\n}\nfunction nodeMatching(node1, node2, domMirror, rrdomMirror) {\n  const node1Id = domMirror.getId(node1);\n  const node2Id = rrdomMirror.getId(node2);\n  if (node1Id === -1 || node1Id !== node2Id) return false;\n  return sameNodeType(node1, node2);\n}\nclass RRDocument extends BaseRRDocument {\n  constructor(mirror) {\n    super();\n    __publicField(this, \"UNSERIALIZED_STARTING_ID\", -2);\n    // In the rrweb replayer, there are some unserialized nodes like the element that stores the injected style rules.\n    // These unserialized nodes may interfere the execution of the diff algorithm.\n    // The id of serialized node is larger than 0. So this value less than 0 is used as id for these unserialized nodes.\n    __publicField(this, \"_unserializedId\", this.UNSERIALIZED_STARTING_ID);\n    __publicField(this, \"mirror\", createMirror());\n    __publicField(this, \"scrollData\", null);\n    if (mirror) {\n      this.mirror = mirror;\n    }\n  }\n  /**\n   * Every time the id is used, it will minus 1 automatically to avoid collisions.\n   */\n  get unserializedId() {\n    return this._unserializedId--;\n  }\n  createDocument(_namespace, _qualifiedName, _doctype) {\n    return new RRDocument();\n  }\n  createDocumentType(qualifiedName, publicId, systemId) {\n    const documentTypeNode = new RRDocumentType(\n      qualifiedName,\n      publicId,\n      systemId\n    );\n    documentTypeNode.ownerDocument = this;\n    return documentTypeNode;\n  }\n  createElement(tagName) {\n    const upperTagName = tagName.toUpperCase();\n    let element;\n    switch (upperTagName) {\n      case \"AUDIO\":\n      case \"VIDEO\":\n        element = new RRMediaElement(upperTagName);\n        break;\n      case \"IFRAME\":\n        element = new RRIFrameElement(upperTagName, this.mirror);\n        break;\n      case \"CANVAS\":\n        element = new RRCanvasElement(upperTagName);\n        break;\n      case \"STYLE\":\n        element = new RRStyleElement(upperTagName);\n        break;\n      case \"DIALOG\":\n        element = new RRDialogElement(upperTagName);\n        break;\n      default:\n        element = new RRElement(upperTagName);\n        break;\n    }\n    element.ownerDocument = this;\n    return element;\n  }\n  createComment(data) {\n    const commentNode = new RRComment(data);\n    commentNode.ownerDocument = this;\n    return commentNode;\n  }\n  createCDATASection(data) {\n    const sectionNode = new RRCDATASection(data);\n    sectionNode.ownerDocument = this;\n    return sectionNode;\n  }\n  createTextNode(data) {\n    const textNode = new RRText(data);\n    textNode.ownerDocument = this;\n    return textNode;\n  }\n  destroyTree() {\n    this.firstChild = null;\n    this.lastChild = null;\n    this.mirror.reset();\n  }\n  open() {\n    super.open();\n    this._unserializedId = this.UNSERIALIZED_STARTING_ID;\n  }\n}\nconst RRDocumentType = BaseRRDocumentType;\nclass RRElement extends BaseRRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"inputData\", null);\n    __publicField(this, \"scrollData\", null);\n  }\n}\nclass RRMediaElement extends BaseRRMediaElement {\n}\nclass RRDialogElement extends BaseRRDialogElement {\n}\nclass RRCanvasElement extends RRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"rr_dataURL\", null);\n    __publicField(this, \"canvasMutations\", []);\n  }\n  /**\n   * This is a dummy implementation to distinguish RRCanvasElement from real HTMLCanvasElement.\n   */\n  getContext() {\n    return null;\n  }\n}\nclass RRStyleElement extends RRElement {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"rules\", []);\n  }\n}\nclass RRIFrameElement extends RRElement {\n  constructor(upperTagName, mirror) {\n    super(upperTagName);\n    __publicField(this, \"contentDocument\", new RRDocument());\n    this.contentDocument.mirror = mirror;\n  }\n}\nconst RRText = BaseRRText;\nconst RRComment = BaseRRComment;\nconst RRCDATASection = BaseRRCDATASection;\nfunction getValidTagName(element) {\n  if (element instanceof HTMLFormElement) {\n    return \"FORM\";\n  }\n  return element.tagName.toUpperCase();\n}\nfunction buildFromNode(node2, rrdom, domMirror, parentRRNode) {\n  let rrNode;\n  switch (node2.nodeType) {\n    case NodeType.DOCUMENT_NODE:\n      if (parentRRNode && parentRRNode.nodeName === \"IFRAME\")\n        rrNode = parentRRNode.contentDocument;\n      else {\n        rrNode = rrdom;\n        rrNode.compatMode = node2.compatMode;\n      }\n      break;\n    case NodeType.DOCUMENT_TYPE_NODE: {\n      const documentType = node2;\n      rrNode = rrdom.createDocumentType(\n        documentType.name,\n        documentType.publicId,\n        documentType.systemId\n      );\n      break;\n    }\n    case NodeType.ELEMENT_NODE: {\n      const elementNode = node2;\n      const tagName = getValidTagName(elementNode);\n      rrNode = rrdom.createElement(tagName);\n      const rrElement = rrNode;\n      for (const { name, value } of Array.from(elementNode.attributes)) {\n        rrElement.attributes[name] = value;\n      }\n      elementNode.scrollLeft && (rrElement.scrollLeft = elementNode.scrollLeft);\n      elementNode.scrollTop && (rrElement.scrollTop = elementNode.scrollTop);\n      break;\n    }\n    case NodeType.TEXT_NODE:\n      rrNode = rrdom.createTextNode(node2.textContent || \"\");\n      break;\n    case NodeType.CDATA_SECTION_NODE:\n      rrNode = rrdom.createCDATASection(node2.data);\n      break;\n    case NodeType.COMMENT_NODE:\n      rrNode = rrdom.createComment(node2.textContent || \"\");\n      break;\n    case NodeType.DOCUMENT_FRAGMENT_NODE:\n      rrNode = parentRRNode.attachShadow({ mode: \"open\" });\n      break;\n    default:\n      return null;\n  }\n  let sn = domMirror.getMeta(node2);\n  if (rrdom instanceof RRDocument) {\n    if (!sn) {\n      sn = getDefaultSN(rrNode, rrdom.unserializedId);\n      domMirror.add(node2, sn);\n    }\n    rrdom.mirror.add(rrNode, { ...sn });\n  }\n  return rrNode;\n}\nfunction buildFromDom(dom, domMirror = createMirror$1(), rrdom = new RRDocument()) {\n  function walk2(node2, parentRRNode) {\n    const rrNode = buildFromNode(node2, rrdom, domMirror, parentRRNode);\n    if (rrNode === null) return;\n    if (\n      // if the parentRRNode isn't a RRIFrameElement\n      (parentRRNode == null ? void 0 : parentRRNode.nodeName) !== \"IFRAME\" && // if node isn't a shadow root\n      node2.nodeType !== NodeType.DOCUMENT_FRAGMENT_NODE\n    ) {\n      parentRRNode == null ? void 0 : parentRRNode.appendChild(rrNode);\n      rrNode.parentNode = parentRRNode;\n      rrNode.parentElement = parentRRNode;\n    }\n    if (node2.nodeName === \"IFRAME\") {\n      const iframeDoc = node2.contentDocument;\n      iframeDoc && walk2(iframeDoc, rrNode);\n    } else if (node2.nodeType === NodeType.DOCUMENT_NODE || node2.nodeType === NodeType.ELEMENT_NODE || node2.nodeType === NodeType.DOCUMENT_FRAGMENT_NODE) {\n      if (node2.nodeType === NodeType.ELEMENT_NODE && node2.shadowRoot)\n        walk2(node2.shadowRoot, rrNode);\n      node2.childNodes.forEach((childNode) => walk2(childNode, rrNode));\n    }\n  }\n  walk2(dom, null);\n  return rrdom;\n}\nfunction createMirror() {\n  return new Mirror2();\n}\nclass Mirror2 {\n  constructor() {\n    __publicField(this, \"idNodeMap\", /* @__PURE__ */ new Map());\n    __publicField(this, \"nodeMetaMap\", /* @__PURE__ */ new WeakMap());\n  }\n  getId(n) {\n    var _a;\n    if (!n) return -1;\n    const id = (_a = this.getMeta(n)) == null ? void 0 : _a.id;\n    return id ?? -1;\n  }\n  getNode(id) {\n    return this.idNodeMap.get(id) || null;\n  }\n  getIds() {\n    return Array.from(this.idNodeMap.keys());\n  }\n  getMeta(n) {\n    return this.nodeMetaMap.get(n) || null;\n  }\n  // removes the node from idNodeMap\n  // doesn't remove the node from nodeMetaMap\n  removeNodeFromMap(n) {\n    const id = this.getId(n);\n    this.idNodeMap.delete(id);\n    if (n.childNodes) {\n      n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n    }\n  }\n  has(id) {\n    return this.idNodeMap.has(id);\n  }\n  hasNode(node2) {\n    return this.nodeMetaMap.has(node2);\n  }\n  add(n, meta) {\n    const id = meta.id;\n    this.idNodeMap.set(id, n);\n    this.nodeMetaMap.set(n, meta);\n  }\n  replace(id, n) {\n    const oldNode = this.getNode(id);\n    if (oldNode) {\n      const meta = this.nodeMetaMap.get(oldNode);\n      if (meta) this.nodeMetaMap.set(n, meta);\n    }\n    this.idNodeMap.set(id, n);\n  }\n  reset() {\n    this.idNodeMap = /* @__PURE__ */ new Map();\n    this.nodeMetaMap = /* @__PURE__ */ new WeakMap();\n  }\n}\nfunction getDefaultSN(node2, id) {\n  switch (node2.RRNodeType) {\n    case NodeType$1.Document:\n      return {\n        id,\n        type: node2.RRNodeType,\n        childNodes: []\n      };\n    case NodeType$1.DocumentType: {\n      const doctype = node2;\n      return {\n        id,\n        type: node2.RRNodeType,\n        name: doctype.name,\n        publicId: doctype.publicId,\n        systemId: doctype.systemId\n      };\n    }\n    case NodeType$1.Element:\n      return {\n        id,\n        type: node2.RRNodeType,\n        tagName: node2.tagName.toLowerCase(),\n        // In rrweb data, all tagNames are lowercase.\n        attributes: {},\n        childNodes: []\n      };\n    case NodeType$1.Text:\n      return {\n        id,\n        type: node2.RRNodeType,\n        textContent: node2.textContent || \"\"\n      };\n    case NodeType$1.Comment:\n      return {\n        id,\n        type: node2.RRNodeType,\n        textContent: node2.textContent || \"\"\n      };\n    case NodeType$1.CDATA:\n      return {\n        id,\n        type: node2.RRNodeType,\n        textContent: \"\"\n      };\n  }\n}\nfunction printRRDom(rootNode, mirror) {\n  return walk(rootNode, mirror, \"\");\n}\nfunction walk(node2, mirror, blankSpace) {\n  let printText = `${blankSpace}${mirror.getId(node2)} ${node2.toString()}\n`;\n  if (node2.RRNodeType === NodeType$1.Element) {\n    const element = node2;\n    if (element.shadowRoot)\n      printText += walk(element.shadowRoot, mirror, blankSpace + \"  \");\n  }\n  for (const child of node2.childNodes)\n    printText += walk(child, mirror, blankSpace + \"  \");\n  if (node2.nodeName === \"IFRAME\")\n    printText += walk(\n      node2.contentDocument,\n      mirror,\n      blankSpace + \"  \"\n    );\n  return printText;\n}\nexport {\n  BaseRRCDATASection,\n  BaseRRComment,\n  BaseRRDialogElement,\n  BaseRRDocument,\n  BaseRRDocumentType,\n  BaseRRElement,\n  BaseRRMediaElement,\n  BaseRRNode,\n  BaseRRText,\n  ClassList,\n  Mirror2 as Mirror,\n  NodeType,\n  RRCDATASection,\n  RRCanvasElement,\n  RRComment,\n  RRDialogElement,\n  RRDocument,\n  RRDocumentType,\n  RRElement,\n  RRIFrameElement,\n  RRMediaElement,\n  BaseRRNode as RRNode,\n  RRStyleElement,\n  RRText,\n  buildFromDom,\n  buildFromNode,\n  createMirror,\n  createOrGetNode,\n  diff,\n  getDefaultSN,\n  printRRDom\n};\n//# sourceMappingURL=rrdom.js.map\n", "var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar MediaInteractions = /* @__PURE__ */ ((MediaInteractions2) => {\n  MediaInteractions2[MediaInteractions2[\"Play\"] = 0] = \"Play\";\n  MediaInteractions2[MediaInteractions2[\"Pause\"] = 1] = \"Pause\";\n  MediaInteractions2[MediaInteractions2[\"Seeked\"] = 2] = \"Seeked\";\n  MediaInteractions2[MediaInteractions2[\"VolumeChange\"] = 3] = \"VolumeChange\";\n  MediaInteractions2[MediaInteractions2[\"RateChange\"] = 4] = \"RateChange\";\n  return MediaInteractions2;\n})(MediaInteractions || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\nvar NodeType = /* @__PURE__ */ ((NodeType2) => {\n  NodeType2[NodeType2[\"Document\"] = 0] = \"Document\";\n  NodeType2[NodeType2[\"DocumentType\"] = 1] = \"DocumentType\";\n  NodeType2[NodeType2[\"Element\"] = 2] = \"Element\";\n  NodeType2[NodeType2[\"Text\"] = 3] = \"Text\";\n  NodeType2[NodeType2[\"CDATA\"] = 4] = \"CDATA\";\n  NodeType2[NodeType2[\"Comment\"] = 5] = \"Comment\";\n  return NodeType2;\n})(NodeType || {});\nexport {\n  CanvasContext,\n  EventType,\n  IncrementalSource,\n  MediaInteractions,\n  MouseInteractions,\n  NodeType,\n  PointerTypes,\n  ReplayerEvents\n};\n//# sourceMappingURL=rrweb-types.js.map\n", "import { NodeType as RRNodeType } from '@supademo/rrweb-types';\nimport type { NWSAPI } from 'nwsapi';\nimport type { CSSStyleDeclaration as CSSStyleDeclarationType } from 'cssstyle';\nimport {\n  BaseRRCDATASection,\n  BaseRRComment,\n  BaseRRDocument,\n  BaseRRDocumentType,\n  BaseRRElement,\n  BaseRRMediaElement,\n  BaseRRNode,\n  BaseRRText,\n  ClassList,\n  type IRRDocument,\n  type CSSStyleDeclaration,\n} from '@supademo/rrdom';\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires\nconst nwsapi = require('nwsapi');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires\nconst cssom = require('cssom');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-var-requires\nconst cssstyle = require('cssstyle');\n\nexport class RRWindow {\n  scrollLeft = 0;\n  scrollTop = 0;\n  scrollTo(options?: ScrollToOptions) {\n    if (!options) return;\n    if (typeof options.left === 'number') this.scrollLeft = options.left;\n    if (typeof options.top === 'number') this.scrollTop = options.top;\n  }\n}\n\nexport class RRDocument extends BaseRRDocument implements IRRDocument {\n  readonly nodeName = '#document' as const;\n  private _nwsapi: NWSAPI | undefined;\n  get nwsapi(): NWSAPI {\n    if (!this._nwsapi) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n      this._nwsapi = nwsapi({\n        document: this as unknown as Document,\n        DOMException: null as unknown as new (\n          message?: string,\n          name?: string,\n        ) => DOMException,\n      }) as NWSAPI;\n      this._nwsapi.configure({\n        LOGERRORS: false,\n        IDS_DUPES: true,\n        MIXEDCASE: true,\n      });\n    }\n    return this._nwsapi;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get documentElement(): RRElement | null {\n    return super.documentElement as RRElement | null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get body(): RRElement | null {\n    return super.body as RRElement | null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get head() {\n    return super.head as RRElement | null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get implementation(): RRDocument {\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get firstElementChild(): RRElement | null {\n    return this.documentElement;\n  }\n\n  appendChild(childNode: BaseRRNode) {\n    return super.appendChild(childNode);\n  }\n\n  insertBefore(newChild: BaseRRNode, refChild: BaseRRNode | null) {\n    return super.insertBefore(newChild, refChild);\n  }\n\n  querySelectorAll(selectors: string): BaseRRNode[] {\n    return this.nwsapi.select(selectors) as unknown as BaseRRNode[];\n  }\n\n  getElementsByTagName(tagName: string): RRElement[] {\n    if (this.documentElement)\n      return this.documentElement.getElementsByTagName(tagName);\n    return [];\n  }\n\n  getElementsByClassName(className: string): RRElement[] {\n    if (this.documentElement)\n      return this.documentElement.getElementsByClassName(className);\n    return [];\n  }\n\n  getElementById(elementId: string): RRElement | null {\n    if (this.documentElement)\n      return this.documentElement.getElementById(elementId);\n    return null;\n  }\n\n  createDocument(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _namespace: string | null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _qualifiedName: string | null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _doctype?: DocumentType | null,\n  ) {\n    return new RRDocument();\n  }\n\n  createDocumentType(\n    qualifiedName: string,\n    publicId: string,\n    systemId: string,\n  ) {\n    const documentTypeNode = new RRDocumentType(\n      qualifiedName,\n      publicId,\n      systemId,\n    );\n    documentTypeNode.ownerDocument = this;\n    return documentTypeNode;\n  }\n\n  createElement<K extends keyof HTMLElementTagNameMap>(\n    tagName: K,\n  ): RRElementType<K>;\n  createElement(tagName: string): RRElement;\n  createElement(tagName: string) {\n    const upperTagName = tagName.toUpperCase();\n    let element;\n    switch (upperTagName) {\n      case 'AUDIO':\n      case 'VIDEO':\n        element = new RRMediaElement(upperTagName);\n        break;\n      case 'IFRAME':\n        element = new RRIFrameElement(upperTagName);\n        break;\n      case 'IMG':\n        element = new RRImageElement(upperTagName);\n        break;\n      case 'CANVAS':\n        element = new RRCanvasElement(upperTagName);\n        break;\n      case 'STYLE':\n        element = new RRStyleElement(upperTagName);\n        break;\n      default:\n        element = new RRElement(upperTagName);\n        break;\n    }\n    element.ownerDocument = this;\n    return element;\n  }\n\n  createElementNS(_namespaceURI: string, qualifiedName: string) {\n    return this.createElement(qualifiedName as keyof HTMLElementTagNameMap);\n  }\n\n  createComment(data: string) {\n    const commentNode = new RRComment(data);\n    commentNode.ownerDocument = this;\n    return commentNode;\n  }\n\n  createCDATASection(data: string) {\n    const sectionNode = new RRCDATASection(data);\n    sectionNode.ownerDocument = this;\n    return sectionNode;\n  }\n\n  createTextNode(data: string) {\n    const textNode = new RRText(data);\n    textNode.ownerDocument = this;\n    return textNode;\n  }\n}\n\nexport class RRDocumentType extends BaseRRDocumentType {}\n\nexport class RRElement extends BaseRRElement {\n  private _style: CSSStyleDeclarationType;\n  constructor(tagName: string) {\n    super(tagName);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    this._style = new cssstyle.CSSStyleDeclaration();\n    const style = this._style;\n    Object.defineProperty(this.attributes, 'style', {\n      get() {\n        return style.cssText;\n      },\n      set(cssText: string) {\n        style.cssText = cssText;\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  get style() {\n    return this._style as unknown as CSSStyleDeclaration;\n  }\n\n  attachShadow(_init: ShadowRootInit): RRElement {\n    return super.attachShadow(_init) as RRElement;\n  }\n\n  appendChild(newChild: BaseRRNode): BaseRRNode {\n    return super.appendChild(newChild) as BaseRRNode;\n  }\n\n  insertBefore(newChild: BaseRRNode, refChild: BaseRRNode | null): BaseRRNode {\n    return super.insertBefore(newChild, refChild) as BaseRRNode;\n  }\n\n  getAttribute(name: string) {\n    const upperName = name && name.toLowerCase();\n    if (upperName in this.attributes) return this.attributes[upperName];\n    return null;\n  }\n\n  setAttribute(name: string, attribute: string) {\n    this.attributes[name.toLowerCase()] = attribute;\n  }\n\n  removeAttribute(name: string) {\n    delete this.attributes[name.toLowerCase()];\n  }\n\n  get firstElementChild(): RRElement | null {\n    for (const child of this.childNodes)\n      if (child.RRNodeType === RRNodeType.Element) return child as RRElement;\n    return null;\n  }\n\n  get nextElementSibling(): RRElement | null {\n    const parentNode = this.parentNode;\n    if (!parentNode) return null;\n    const siblings = parentNode.childNodes;\n    const index = siblings.indexOf(this);\n    for (let i = index + 1; i < siblings.length; i++)\n      if (siblings[i] instanceof RRElement) return siblings[i] as RRElement;\n    return null;\n  }\n\n  querySelectorAll(selectors: string): BaseRRNode[] {\n    const result: RRElement[] = [];\n    if (this.ownerDocument !== null) {\n      (this.ownerDocument as RRDocument).nwsapi.select(\n        selectors,\n        this as unknown as Element,\n        (element) => {\n          if ((element as unknown as RRElement) !== this)\n            result.push(element as unknown as RRElement);\n        },\n      ) as unknown as BaseRRNode[];\n    }\n    return result;\n  }\n\n  getElementById(elementId: string): RRElement | null {\n    if (this.id === elementId) return this;\n    for (const child of this.childNodes) {\n      if (child instanceof RRElement) {\n        const result = child.getElementById(elementId);\n        if (result !== null) return result;\n      }\n    }\n    return null;\n  }\n\n  getElementsByClassName(className: string): RRElement[] {\n    let elements: RRElement[] = [];\n    const queryClassList = new ClassList(className);\n    // Make sure this element has all queried class names.\n    if (\n      this instanceof RRElement &&\n      queryClassList.classes.filter((queriedClassName) =>\n        this.classList.classes.some((name) => name === queriedClassName),\n      ).length == queryClassList.classes.length\n    )\n      elements.push(this);\n    for (const child of this.childNodes) {\n      if (child instanceof RRElement)\n        elements = elements.concat(child.getElementsByClassName(className));\n    }\n    return elements;\n  }\n\n  getElementsByTagName(tagName: string): RRElement[] {\n    let elements: RRElement[] = [];\n    const normalizedTagName = tagName.toUpperCase();\n    if (this instanceof RRElement && this.tagName === normalizedTagName)\n      elements.push(this);\n    for (const child of this.childNodes) {\n      if (child instanceof RRElement)\n        elements = elements.concat(child.getElementsByTagName(tagName));\n    }\n    return elements;\n  }\n}\n\nexport class RRImageElement extends RRElement {\n  src = '';\n  width = 0;\n  height = 0;\n  onload: ((this: GlobalEventHandlers, ev: Event) => unknown) | null = null;\n}\n\nexport class RRMediaElement extends BaseRRMediaElement {}\n\nexport class RRCanvasElement extends RRElement {\n  /**\n   * This is just a dummy implementation to prevent rrweb replayer from drawing mouse tail. If further analysis of canvas is needed, we may implement it with node-canvas.\n   */\n  getContext(): CanvasRenderingContext2D | null {\n    return null;\n  }\n}\n\nexport class RRStyleElement extends RRElement {\n  private _sheet: CSSStyleSheet | null = null;\n\n  get sheet() {\n    if (!this._sheet) {\n      let result = '';\n      for (const child of this.childNodes)\n        if (child.RRNodeType === RRNodeType.Text)\n          result += (child as RRText).textContent;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment\n      this._sheet = cssom.parse(result);\n    }\n    return this._sheet;\n  }\n}\n\nexport class RRIFrameElement extends RRElement {\n  width = '';\n  height = '';\n  src = '';\n  contentDocument: RRDocument = new RRDocument();\n  contentWindow: RRWindow = new RRWindow();\n\n  constructor(tagName: string) {\n    super(tagName);\n    const htmlElement = this.contentDocument.createElement('HTML');\n    this.contentDocument.appendChild(htmlElement);\n    htmlElement.appendChild(this.contentDocument.createElement('HEAD'));\n    htmlElement.appendChild(this.contentDocument.createElement('BODY'));\n  }\n}\n\nexport class RRText extends BaseRRText {\n  readonly nodeName = '#text' as const;\n}\n\nexport class RRComment extends BaseRRComment {\n  readonly nodeName = '#comment' as const;\n}\n\nexport class RRCDATASection extends BaseRRCDATASection {\n  readonly nodeName = '#cdata-section' as const;\n}\n\ninterface RRElementTagNameMap {\n  audio: RRMediaElement;\n  canvas: RRCanvasElement;\n  iframe: RRIFrameElement;\n  img: RRImageElement;\n  style: RRStyleElement;\n  video: RRMediaElement;\n}\n\ntype RRElementType<K extends keyof HTMLElementTagNameMap> =\n  K extends keyof RRElementTagNameMap ? RRElementTagNameMap[K] : RRElement;\n", "import { BaseRRNode } from '@supademo/rrdom';\nimport { RRDocument } from './document-nodejs';\n\n/**\n * Polyfill the performance for nodejs.\n * Note: The performance api is available through the global object from nodejs v16.0.0.\n * https://github.com/nodejs/node/pull/37970\n */\nexport function polyfillPerformance() {\n  if (typeof window !== 'undefined' || 'performance' in global) return;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-var-requires\n  const performance = require('perf_hooks').performance;\n  ((global as Window & typeof globalThis).performance as unknown) = performance;\n}\n\n/**\n * Polyfill requestAnimationFrame and cancelAnimationFrame for nodejs.\n */\nexport function polyfillRAF() {\n  if (typeof window !== 'undefined' || 'requestAnimationFrame' in global)\n    return;\n\n  const FPS = 60,\n    INTERVAL = 1_000 / FPS;\n  let timeoutHandle: NodeJS.Timeout | null = null,\n    rafCount = 0,\n    requests = Object.create(null) as Record<string, (time: number) => void>;\n\n  function onFrameTimer() {\n    const currentRequests = requests;\n    requests = Object.create(null) as Record<string, (time: number) => void>;\n    timeoutHandle = null;\n    Object.keys(currentRequests).forEach(function (id) {\n      const request = currentRequests[id];\n      if (request) request(Date.now());\n    });\n  }\n\n  function requestAnimationFrame(callback: (timestamp: number) => void) {\n    const cbHandle = ++rafCount;\n    requests[cbHandle] = callback;\n    if (timeoutHandle === null)\n      timeoutHandle = setTimeout(onFrameTimer, INTERVAL);\n    return cbHandle;\n  }\n\n  function cancelAnimationFrame(handleId: number) {\n    delete requests[handleId];\n    if (Object.keys(requests).length === 0 && timeoutHandle !== null) {\n      clearTimeout(timeoutHandle);\n      timeoutHandle = null;\n    }\n  }\n\n  (global as Window & typeof globalThis).requestAnimationFrame =\n    requestAnimationFrame;\n  (global as Window & typeof globalThis).cancelAnimationFrame =\n    cancelAnimationFrame;\n}\n\n/**\n * Try to polyfill Event type.\n * The implementation of Event so far is empty because rrweb doesn't strongly depend on it in nodejs mode.\n * Note: The Event class is available through the global object from nodejs v15.0.0.\n */\nexport function polyfillEvent() {\n  if (typeof Event !== 'undefined') return;\n  (global.Event as unknown) = function () {\n    //\n  };\n}\n\n/**\n * Polyfill Node type with BaseRRNode for nodejs.\n */\nexport function polyfillNode() {\n  if (typeof Node !== 'undefined') return;\n  (global.Node as unknown) = BaseRRNode;\n}\n\n/**\n *  Polyfill document object with RRDocument for nodejs.\n */\nexport function polyfillDocument() {\n  if (typeof document !== 'undefined') return;\n  const rrdom = new RRDocument();\n  (() => {\n    rrdom.appendChild(rrdom.createElement('html'));\n    rrdom.documentElement?.appendChild(rrdom.createElement('head'));\n    rrdom.documentElement?.appendChild(rrdom.createElement('body'));\n  })();\n  global.document = rrdom as unknown as Document;\n}\n", "import {\n  polyfillPerformance,\n  polyfillRAF,\n  polyfillEvent,\n  polyfillNode,\n  polyfillDocument,\n} from './polyfill';\npolyfillPerformance();\npolyfillRAF();\npolyfillEvent();\npolyfillNode();\npolyfillDocument();\nexport * from './document-nodejs';\n"],
  "mappings": "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",
  "names": ["__defProp", "__defNormalProp", "obj", "key", "value", "__publicField", "getDefaultExportFromCjs", "x2", "getAugmentedNamespace", "n", "f", "a", "a2", "k", "d", "picocolors_browser", "x", "create", "picocolors_browserExports", "__viteBrowserExternal", "__viteBrowserExternal$1", "require$$2", "pico", "terminalHighlight$1", "CssSyntaxError$3", "CssSyntaxError", "message", "line", "column", "source", "file", "plugin2", "color", "css", "aside", "text", "mark", "highlight", "bold", "gray", "red", "lines", "start", "end", "maxWidth", "index2", "number", "gutter", "padding", "subLineStart", "subLineEnd", "subLine", "spacing2", "spacing", "code", "cssSyntaxError", "DEFAULT_RAW", "capitalize", "str", "Stringifier$2", "builder", "node2", "semicolon", "name", "params", "detect", "buf", "depth", "indent", "step", "between", "after", "last", "i", "child", "before", "left", "right", "string", "own", "parent", "root2", "method", "p", "parts", "prop", "raw", "stringifier", "Stringifier$1", "stringify$4", "stringify_1", "symbols", "CssSyntaxError$2", "Stringifier2", "stringify$3", "isClean$2", "my$2", "cloneNode", "cloned", "type", "j", "sourceOffset", "inputCSS", "position", "offset", "Node$4", "defaults", "error", "s", "add", "overrides", "keepBetween", "opts", "next", "pos", "defaultType", "nodes", "bookmark", "foundSelf", "result2", "_", "inputs", "fixed", "emitInputs", "inputsNextIndex", "inputId", "input2", "stringifier2", "data", "node", "Node$3", "Comment$4", "comment", "Node$2", "Declaration$4", "__spreadProps", "__spreadValues", "declaration", "Comment$3", "Declaration$3", "Node$1", "isClean$1", "my$1", "AtRule$4", "parse$4", "Root$6", "Rule$4", "cleanSource", "markTreeDirty", "Container$7", "Container", "children", "callback", "iterator", "condition", "args", "cb", "other", "exist", "existIndex", "id", "sample", "pattern", "decl", "e", "selector", "dependant", "container", "Container$6", "AtRule$3", "atRule", "Container$5", "LazyResult$4", "Processor$3", "Document$3", "document$1", "urlAlphabet", "customAlphabet", "alphabet", "defaultSize", "size", "nanoid$1", "nonSecure", "existsSync", "readFileSync", "dirname$1", "join", "SourceMapConsumer$2", "SourceMapGenerator$2", "fromBase64", "PreviousMap$2", "prev", "baseCharsetUri", "baseUri", "charsetUri", "uri", "uriMatch", "baseUriMatch", "encoding", "sourceMapString", "map", "comments", "path", "prevPath", "previousMap", "nanoid", "isAbsolute", "resolve$1", "SourceMapConsumer$1", "SourceMapGenerator$1", "fileURLToPath", "pathToFileURL$1", "CssSyntaxError$1", "PreviousMap$1", "terminalHighlight", "fromOffsetCache", "sourceMapAvailable$1", "pathAvailable$1", "Input$4", "endColumn", "endLine", "origin", "lastLine", "lineToIndex", "prevIndex", "l", "min", "max", "mid", "consumer", "from", "to", "fromUrl", "json", "input", "Container$4", "LazyResult$3", "Processor$2", "Root$5", "ignore", "root", "list$2", "spaces", "separators", "array", "current", "split", "func", "inQuote", "prevQuote", "escape", "letter", "list_1", "Container$3", "list$1", "Rule$3", "values", "match", "sep2", "rule", "AtRule$2", "Comment$2", "Declaration$2", "Input$3", "PreviousMap2", "Root$4", "Rule$2", "fromJSON$1", "_a", "ownInputs", "__objRest", "inputHydrated", "_b", "fromJSON_1", "dirname", "relative", "resolve", "sep", "SourceMapConsumer", "SourceMapGenerator", "pathToFileURL", "Input$2", "sourceMapAvailable", "pathAvailable", "MapGenerator$2", "stringify2", "cssString", "content", "eol", "noSource", "mapping", "annotation", "cached", "already", "fileURL", "url", "mapGenerator", "SINGLE_QUOTE", "DOUBLE_QUOTE", "BACKSLASH", "SLASH", "NEWLINE", "SPACE", "FEED", "TAB", "CR", "OPEN_SQUARE", "CLOSE_SQUARE", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "OPEN_CURLY", "CLOSE_CURLY", "SEMICOLON", "ASTERISK", "COLON", "AT", "RE_AT_END", "RE_WORD_END", "RE_BAD_BRACKET", "RE_HEX_ESCAPE", "tokenize", "options", "quote", "currentToken", "escaped", "escapePos", "length", "buffer", "returned", "unclosed", "what", "endOfFile", "nextToken", "ignoreUnclosed", "controlChar", "back", "token", "AtRule$1", "Comment$1", "Declaration$1", "Root$3", "Rule$1", "tokenizer2", "SAFE_COMMENT_NEIGHBOR", "findLastWithPosition", "tokens", "Parser$1", "shift", "open", "brackets", "colon", "founded", "element", "customProperty", "firstSpaces", "cache", "bracket", "clean", "all", "lastTokenType", "parser", "Container$2", "Input$1", "Parser2", "parse$3", "parser2", "parse_1", "Warning$2", "range", "opt", "warning", "Warning$1", "Result$3", "processor2", "warning2", "result", "Container$1", "container", "Document$2", "document$1", "MapGenerator$1", "mapGenerator", "parse$2", "parse_1", "Result$2", "result", "Root$2", "root", "stringify$2", "stringify_1", "isClean", "my", "symbols", "TYPE_TO_CLASS_NAME", "PLUGIN_PROPS", "NOT_VISITORS", "CHILDREN", "isPromise", "obj", "getEvents", "node2", "key", "type", "toStack", "events", "cleanMarks", "isClean", "i", "postcss$2", "LazyResult$2", "LazyResult", "processor2", "css", "opts", "root2", "Result$2", "parser2", "parse$2", "error", "my", "Container$1", "__spreadProps", "__spreadValues", "plugin2", "onRejected", "onFinally", "err", "add", "cb", "event", "filter", "promise", "stack", "e", "visitor", "roots", "subRoot", "str", "stringify$2", "data", "MapGenerator$1", "onFulfilled", "visitors", "visit2", "iterator", "child", "dependant", "lazyResult", "Root$2", "Document$2", "MapGenerator2", "mapGenerator", "parse$1", "parse_1", "Result$1", "result", "stringify$1", "stringify_1", "NoWorkResult$1", "processor2", "css", "opts", "root2", "str", "stringify$1", "Result$1", "self", "map", "MapGenerator2", "generatedCSS", "generatedMap", "onRejected", "onFinally", "onFulfilled", "parser2", "parse$1", "error", "noWorkResult", "Document$1", "document$1", "LazyResult$1", "lazyResult", "NoWorkResult2", "Root$1", "root", "Processor$1", "plugins", "normalized", "i", "plugin2", "processor", "AtRule2", "atRule", "Comment2", "comment", "Container2", "container", "CssSyntaxError2", "cssSyntaxError", "Declaration2", "declaration", "Document22", "fromJSON", "fromJSON_1", "Input2", "input", "LazyResult2", "list", "list_1", "Node2", "node", "parse", "parse_1", "Processor2", "Result2", "result", "Root2", "Rule2", "rule", "stringify", "stringify_1", "Warning2", "warning", "postcss", "name", "initializer", "warningPrinted", "creator", "args", "transformer", "cache", "processOpts", "pluginOpts", "defaults", "postcss_1", "postcss$1", "getDefaultExportFromCjs", "NodeType$1", "NodeType2", "parseCSSText", "cssText", "res", "listDelimiter", "propertyDelimiter", "comment2", "item", "tmp", "camelize", "toCSSText", "style", "properties", "value", "normalizedName", "hyphenate", "camelizeRE", "CUSTOM_PROPERTY_REGEX", "_", "c", "hyphenateRE", "BaseRRNode", "_args", "__publicField", "childNodes", "childIterator", "node2", "_newChild", "_refChild", "_node", "BaseRRDocument", "_a", "newChild", "nodeType", "child", "appendChild", "refChild", "s", "insertBefore", "removeChild", "content", "publicId", "doctype", "_namespace", "_qualifiedName", "_doctype", "qualifiedName", "systemId", "BaseRRDocumentType", "tagName", "element", "BaseRRElement", "_namespaceURI", "data", "text", "BaseRRText", "BaseRRComment", "CDATASection", "BaseRRCDATASection", "result2", "textContent", "ClassList", "newClassName", "hyphenateRE2", "priority", "attribute", "_init", "shadowRoot", "_event", "attributeString", "BaseRRMediaElement", "classText", "onChange", "classNames", "className", "classes", "parent", "NodeType", "nwsapi", "cssom", "cssstyle", "RRWindow", "options", "RRDocument", "childNode", "selectors", "elementId", "documentTypeNode", "RRDocumentType", "upperTagName", "RRMediaElement", "RRIFrameElement", "RRImageElement", "RRCanvasElement", "RRStyleElement", "RRElement", "commentNode", "RRComment", "sectionNode", "RRCDATASection", "textNode", "RRText", "upperName", "RRNodeType", "parentNode", "siblings", "index", "elements", "queryClassList", "queriedClassName", "normalizedTagName", "htmlElement", "polyfillPerformance", "performance", "polyfillRAF", "FPS", "INTERVAL", "timeoutHandle", "rafCount", "requests", "onFrameTimer", "currentRequests", "id", "request", "requestAnimationFrame", "callback", "cbHandle", "cancelAnimationFrame", "handleId", "polyfillEvent", "polyfillNode", "polyfillDocument", "rrdom", "_b"]
}
