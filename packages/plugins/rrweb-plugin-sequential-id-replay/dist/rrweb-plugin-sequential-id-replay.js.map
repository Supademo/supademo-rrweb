{"version":3,"file":"rrweb-plugin-sequential-id-replay.js","sources":["../src/index.ts"],"sourcesContent":["import type { SequentialIdOptions } from '@supademo/rrweb-plugin-sequential-id-record';\nimport type { ReplayPlugin } from '@supademo/rrweb';\nimport type { eventWithTime } from '@supademo/rrweb-types';\n\ntype Options = SequentialIdOptions & {\n  warnOnMissingId: boolean;\n};\n\nconst defaultOptions: Options = {\n  key: '_sid',\n  warnOnMissingId: true,\n};\n\nexport const getReplaySequentialIdPlugin: (\n  options?: Partial<Options>,\n) => ReplayPlugin = (options) => {\n  const { key, warnOnMissingId } = options\n    ? Object.assign({}, defaultOptions, options)\n    : defaultOptions;\n  let currentId = 1;\n\n  return {\n    handler(event: eventWithTime) {\n      if (key in event) {\n        const id = (event as unknown as Record<string, number>)[key];\n        if (id !== currentId) {\n          console.error(\n            `[sequential-id-plugin]: expect to get an id with value \"${currentId}\", but got \"${id}\"`,\n          );\n        } else {\n          currentId++;\n        }\n      } else if (warnOnMissingId) {\n        console.warn(\n          `[sequential-id-plugin]: failed to get id in key: \"${key}\"`,\n        );\n      }\n    },\n  };\n};\n"],"names":[],"mappings":"AAQA,MAAM,iBAA0B;AAAA,EAC9B,KAAK;AAAA,EACL,iBAAiB;AACnB;AAEa,MAAA,8BAEO,CAAC,YAAY;AACzB,QAAA,EAAE,KAAK,gBAAoB,IAAA,UAC7B,OAAO,OAAO,IAAI,gBAAgB,OAAO,IACzC;AACJ,MAAI,YAAY;AAET,SAAA;AAAA,IACL,QAAQ,OAAsB;AAC5B,UAAI,OAAO,OAAO;AACV,cAAA,KAAM,MAA4C,GAAG;AAC3D,YAAI,OAAO,WAAW;AACZ,kBAAA;AAAA,YACN,2DAA2D,SAAS,eAAe,EAAE;AAAA,UACvF;AAAA,QAAA,OACK;AACL;AAAA,QAAA;AAAA,iBAEO,iBAAiB;AAClB,gBAAA;AAAA,UACN,qDAAqD,GAAG;AAAA,QAC1D;AAAA,MAAA;AAAA,IACF;AAAA,EAEJ;AACF;"}