{"version":3,"file":"unpack.js","sources":["../src/unpack.ts"],"sourcesContent":["import { strFromU8, strToU8, unzlibSync } from 'fflate';\nimport { type eventWithTimeAndPacker, MARK } from './base';\nimport type { UnpackFn, eventWithTime } from '@supademo/rrweb-types';\n\nexport const unpack: UnpackFn = (raw: string) => {\n  if (typeof raw !== 'string') {\n    return raw;\n  }\n  try {\n    const e: eventWithTime = JSON.parse(raw) as eventWithTime;\n    if (e.timestamp) {\n      return e;\n    }\n  } catch (error) {\n    // ignore and continue\n  }\n  try {\n    const e: eventWithTimeAndPacker = JSON.parse(\n      strFromU8(unzlibSync(strToU8(raw, true))),\n    ) as eventWithTimeAndPacker;\n    if (e.v === MARK) {\n      return e;\n    }\n    throw new Error(\n      `These events were packed with packer ${e.v} which is incompatible with current packer ${MARK}.`,\n    );\n  } catch (error) {\n    console.error(error);\n    throw new Error('Unknown data format.');\n  }\n};\n"],"names":[],"mappings":";AAIa,MAAA,SAAmB,CAAC,QAAgB;AAC3C,MAAA,OAAO,QAAQ,UAAU;AACpB,WAAA;AAAA,EAAA;AAEL,MAAA;AACI,UAAA,IAAmB,KAAK,MAAM,GAAG;AACvC,QAAI,EAAE,WAAW;AACR,aAAA;AAAA,IAAA;AAAA,WAEF,OAAO;AAAA,EAAA;AAGZ,MAAA;AACF,UAAM,IAA4B,KAAK;AAAA,MACrC,UAAU,WAAW,QAAQ,KAAK,IAAI,CAAC,CAAC;AAAA,IAC1C;AACI,QAAA,EAAE,MAAM,MAAM;AACT,aAAA;AAAA,IAAA;AAET,UAAM,IAAI;AAAA,MACR,wCAAwC,EAAE,CAAC,8CAA8C,IAAI;AAAA,IAC/F;AAAA,WACO,OAAO;AACd,YAAQ,MAAM,KAAK;AACb,UAAA,IAAI,MAAM,sBAAsB;AAAA,EAAA;AAE1C;"}